"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[68399],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(a),d=i,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||r;return a?n.createElement(g,l(l({ref:t},p),{},{components:a})):n.createElement(g,l({ref:t},p))}));function g(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},57935:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=a(87462),i=(a(67294),a(3905));const r={slug:"2023-10-25-biweekly-newsletter",title:"KCL Biweekly Newsletter (2023 10.12 - 10.25) | FindReferences and Rename in IDE, ArtifactHub integration in KPM!",authors:{name:"KCL Team",title:"KCL Team"},tags:["KCL","Biweekly-Newsletter"]},l=void 0,o={permalink:"/blog/2023-10-25-biweekly-newsletter",editUrl:"https://github.com/kcl-lang/kcl-lang.io/tree/main/blog/2023-10-25-biweekly-newsletter/index.md",source:"@site/blog/2023-10-25-biweekly-newsletter/index.md",title:"KCL Biweekly Newsletter (2023 10.12 - 10.25) | FindReferences and Rename in IDE, ArtifactHub integration in KPM!",description:"KCL is a constraint-based record and functional language hosted by Cloud Native Computing Foundation(CNCF) that enhances the writing of complex configurations, including those for cloud-native scenarios. With its advanced programming language technology and practices, KCL is dedicated to promoting better modularity, scalability, and stability for configurations. It enables simpler logic writing and offers ease of automation APIs and integration with homegrown systems.",date:"2023-10-25T00:00:00.000Z",formattedDate:"October 25, 2023",tags:[{label:"KCL",permalink:"/blog/tags/kcl"},{label:"Biweekly-Newsletter",permalink:"/blog/tags/biweekly-newsletter"}],readingTime:3.37,hasTruncateMarker:!1,authors:[{name:"KCL Team",title:"KCL Team"}],frontMatter:{slug:"2023-10-25-biweekly-newsletter",title:"KCL Biweekly Newsletter (2023 10.12 - 10.25) | FindReferences and Rename in IDE, ArtifactHub integration in KPM!",authors:{name:"KCL Team",title:"KCL Team"},tags:["KCL","Biweekly-Newsletter"]},nextItem:{title:"A New Paradigm for Cloud Native Configuration and Policy Management - KRM KCL Specification",permalink:"/blog/2023-10-23-cloud-native-supply-chain-krm-kcl-spec"}},s={authorsImageUrls:[void 0]},c=[{value:"Overview",id:"overview",level:2},{value:"Special Thanks",id:"special-thanks",level:2},{value:"Featured Updates",id:"featured-updates",level:2},{value:"IDE Extension Updates",id:"ide-extension-updates",level:3},{value:"KCL Package Manager Updates",id:"kcl-package-manager-updates",level:3},{value:"KCL Language Updates",id:"kcl-language-updates",level:3},{value:"Unified Interface of KCL Command-Line",id:"unified-interface-of-kcl-command-line",level:3},{value:"Community Updates",id:"community-updates",level:3},{value:"Resources",id:"resources",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(11556).Z,width:"1141",height:"435"})),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang"},"KCL")," is a constraint-based record and functional language hosted by Cloud Native Computing Foundation(CNCF) that enhances the writing of complex configurations, including those for cloud-native scenarios. With its advanced programming language technology and practices, KCL is dedicated to promoting better modularity, scalability, and stability for configurations. It enables simpler logic writing and offers ease of automation APIs and integration with homegrown systems."),(0,i.kt)("p",null,"This section will update the KCL language community's latest developments every two weeks, including features, website updates, and the latest community news, helping everyone better understand the KCL community!"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"KCL Website: ",(0,i.kt)("a",{parentName:"em",href:"https://kcl-lang.io"},"https://kcl-lang.io")))),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Thank you to all contributors for their outstanding work over the past two weeks (10.12 - 10.25 2023). Here is an overview of the key content:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83d\udd27 Language and Toolchain Updates")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"KCL IDE Updates")," - Supports for symbol find-references and rename; Optimized the formatting output for import statements and union types; Fixed the bug where file changes caused the language server to crash."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"KCL Package Management Tool KPM Updates")," - kpm is integrating with ArtifactHub, enabling KCL packages publishing to ArtifactHub."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"KCL Language Updates")," - Optimized error messages for mismatched parameter types in methods, providing clearer indications of the mismatch. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Unified Interface of KCL Command-Line")," - Redesigned the command-line interface and workflow for KCL tools to achieve a unified experience.")),(0,i.kt)("h2",{id:"special-thanks"},"Special Thanks"),(0,i.kt)("p",null,"The following are listed in no particular order:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Thanks to @jakezhu9 for enhancing the KCL syntax parsing unit tests, migrating some test cases to the snaptest framework \ud83d\ude4c ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/kcl-lang/kcl/pull/794"},"https://github.com/kcl-lang/kcl/pull/794")),(0,i.kt)("li",{parentName:"ul"},"Thanks to @opsnull for correcting code examples in kcl-lang.io website \ud83d\ude4c ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/kcl-lang/kcl-lang.io/pull/182"},"https://github.com/kcl-lang/kcl-lang.io/pull/182")),(0,i.kt)("li",{parentName:"ul"},"Thanks to @prahaladramji for fixing and optimizing the formatting functionality in the KCL IntelliJ plugin \ud83d\ude4c ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/kcl-lang/intellij-kcl/pull/15"},"https://github.com/kcl-lang/intellij-kcl/pull/15"),", etc."),(0,i.kt)("li",{parentName:"ul"},"Thanks to @steeling, @prahaladramji, @liangyuanpen, @Kory Taborn, and others for valuable feedback and discussions while using KCL and the toolchain \ud83d\ude4c")),(0,i.kt)("h2",{id:"featured-updates"},"Featured Updates"),(0,i.kt)("h3",{id:"ide-extension-updates"},"IDE Extension Updates"),(0,i.kt)("p",null,"In the upcoming release, the KCL IDE extension will support find/go-to references navigation, symbol renaming, and some optimizations for formatting import statements and union types. Additionally, virtual file system-related bugs causing language service crashes have been fixed."),(0,i.kt)("p",null,"Go-to references:\n",(0,i.kt)("img",{src:a(11864).Z,width:"1682",height:"880"})),(0,i.kt)("p",null,"Rename symbols:\n",(0,i.kt)("img",{src:a(85852).Z,width:"832",height:"513"})),(0,i.kt)("p",null,"Formatting improvements for import statements and union types: optimized behavior for newlines between reference statements and other code blocks (formatted as a single newline) and spacing between union types (formatted with ",(0,i.kt)("inlineCode",{parentName:"p"},"|")," as separators):\n",(0,i.kt)("img",{src:a(29792).Z,width:"590",height:"269"})),(0,i.kt)("h3",{id:"kcl-package-manager-updates"},"KCL Package Manager Updates"),(0,i.kt)("p",null,"In the upcoming release, KPM will support integration with ",(0,i.kt)("a",{parentName:"p",href:"https://artifacthub.io/"},"ArtifactHub"),". You can now submit a PR to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang/artifacthub"},"kcl-lang Registry repository")," to publish your KCL packages on ArtifactHub. The pre-uploaded KCL Kubernetes package can be seen on the ",(0,i.kt)("a",{parentName:"p",href:"https://staging.artifacthub.io/packages/search?ts_query_web=kcl&sort=relevance&page=1"},"ArtifactHub staging page"),". The functionality will be released in version v0.6.1:"),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(13639).Z,width:"2204",height:"1536"})),(0,i.kt)("h3",{id:"kcl-language-updates"},"KCL Language Updates"),(0,i.kt)("p",null,"The compilation command of KCL continues to improve error message output, aiming to provide clear and understandable guidance to help developers quickly identify and fix errors while writing correct code. Recently, error messages related to method parameter type mismatches have been optimized, clearly indicating parameter type mismatches:"),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(47737).Z,width:"1254",height:"968"})),(0,i.kt)("p",null,"Additionally, a fix addressed the issue of lazy evaluation in property assignments, deferring the computation and constraint validation of property assignments until after configuration merging to avoid unnecessary compilation errors."),(0,i.kt)("h3",{id:"unified-interface-of-kcl-command-line"},"Unified Interface of KCL Command-Line"),(0,i.kt)("p",null,"We are redesigning the command-line interface of KCL tools to achieve a unified user workflow, seamless integration with related tools and multi-language APIs, and command-line tool extensibility. Welcome to join the discussion if anyone are insterested: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang/kcl/issues/756"},"https://github.com/kcl-lang/kcl/issues/756"),"."),(0,i.kt)("h3",{id:"community-updates"},"Community Updates"),(0,i.kt)("p",null,"With the inclusion in CNCF Sandbox, we are glad to announce that the CNCF KCL Slack channel is now available for KCL-related discussions. Feel free to join:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Join the CNCF workspace by providing your email address: ",(0,i.kt)("a",{parentName:"li",href:"https://communityinviter.com/apps/cloud-native/cncf"},"https://communityinviter.com/apps/cloud-native/cncf")),(0,i.kt)("li",{parentName:"ol"},"Join the CNCF KCL channel: ",(0,i.kt)("a",{parentName:"li",href:"https://cloud-native.slack.com/archives/C05TC96NWN8"},"https://cloud-native.slack.com/archives/C05TC96NWN8"))),(0,i.kt)("h2",{id:"resources"},"Resources"),(0,i.kt)("p",null,"\u2764\ufe0f Thanks to all KCL users and community members for their valuable feedback and suggestions in the community."),(0,i.kt)("p",null,"For more resources, please refer to"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://kcl-lang.io/"},"KCL Website"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://kusionstack.io/"},"KusionStack Website"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://kcl-lang.io/docs/community/release-policy/roadmap"},"KCL 2023 Roadmap"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang/kcl/milestone/7"},"KCL v0.7.0 Milestone"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang/kcl/issues"},"KCL Github Issues"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/orgs/kcl-lang/discussions"},"KCL Github Discussion"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang/community"},"KCL Community")))))}m.isMDXComponent=!0},11556:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/biweekly-newsletter-9d6bf596d15ee9a7645130bde27ed5f7.png"},29792:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Format-bacf4e759fcb2a5a29f0f219b4dfa8ec.gif"},47737:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/error-msg-b8d24e1f29627c121d233db677b923b6.png"},11864:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/FindRefs-924c460d5480d6888c032d8b406a5c74.png"},85852:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Rename-82061ac2cb03a77c542d5a4474797228.gif"},13639:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/artifacthubStaging-6afae7c6f808a91ec2bd8af334a1ea80.png"}}]);