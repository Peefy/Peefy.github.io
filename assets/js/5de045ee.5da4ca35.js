"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[93910],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=s(n),y=o,d=u["".concat(c,".").concat(y)]||u[y]||m[y]||i;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=y;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[u]="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},27092:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const i={},l="KCL Plugin Release Policy",a={unversionedId:"community/release-policy/kcl_plugin",id:"version-0.4.5/community/release-policy/kcl_plugin",title:"KCL Plugin Release Policy",description:"The original intention of the KCL plug-in is to extend the functions of the KCL language, and its positioning is not to completely replicate the entire ecology of the general programming language. Therefore, the KCL plug-in has deliberately made some necessary restrictions: first, plug-ins cannot import each other; Second, plug-ins cannot have the same name in the same module; Finally, the plug-in guide implemented by Python uses the functions provided by the standard library and plug-in framework.",source:"@site/versioned_docs/version-0.4.5/community/release-policy/kcl_plugin.md",sourceDirName:"community/release-policy",slug:"/community/release-policy/kcl_plugin",permalink:"/docs/0.4.5/community/release-policy/kcl_plugin",draft:!1,editUrl:"https://github.com/kcl-lang/kcl-lang.io/tree/main/versioned_docs/version-0.4.5/community/release-policy/kcl_plugin.md",tags:[],version:"0.4.5",lastUpdatedBy:"Peefy",lastUpdatedAt:1676950659,formattedLastUpdatedAt:"Feb 21, 2023",frontMatter:{},sidebar:"community",previous:{title:"KCL Release Policy",permalink:"/docs/0.4.5/community/release-policy/kcl"},next:{title:"Contribute Guide",permalink:"/docs/0.4.5/community/contribute/"}},c={},s=[],p={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"kcl-plugin-release-policy"},"KCL Plugin Release Policy"),(0,o.kt)("p",null,"The original intention of the KCL plug-in is to extend the functions of the KCL language, and its positioning is not to completely replicate the entire ecology of the general programming language. Therefore, the KCL plug-in has deliberately made some necessary restrictions: first, plug-ins cannot import each other; Second, plug-ins cannot have the same name in the same module; Finally, the plug-in guide implemented by Python uses the functions provided by the standard library and plug-in framework."))}m.isMDXComponent=!0}}]);