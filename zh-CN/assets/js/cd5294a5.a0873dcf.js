"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88986],{3905:(e,n,a)=>{a.d(n,{Zo:()=>k,kt:()=>c});var t=a(67294);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function p(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=t.createContext({}),s=function(e){var n=t.useContext(o),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},k=function(e){var n=s(e.components);return t.createElement(o.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),m=s(a),d=l,c=m["".concat(o,".").concat(d)]||m[d]||u[d]||r;return a?t.createElement(c,i(i({ref:n},k),{},{components:a})):t.createElement(c,i({ref:n},k))}));function c(e,n){var a=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=d;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p[m]="string"==typeof e?e:l,i[1]=p;for(var s=2;s<r;s++)i[s]=a[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},96353:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var t=a(87462),l=(a(67294),a(3905));const r={title:"KCL \u4e4b\u65c5",sidebar_position:1},i=void 0,p={unversionedId:"reference/lang/tour",id:"version-0.4.4/reference/lang/tour",title:"KCL \u4e4b\u65c5",description:"\u672c\u6587\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 KCL \u7684\u6838\u5fc3\u7279\u6027\uff0c\u5305\u542b\u53d8\u91cf\u3001\u8fd0\u7b97\u7b26\u3001schema \u548c\u5e93\uff0c\u524d\u63d0\u662f\u60a8\u6709\u4f7f\u7528\u5176\u4ed6\u8bed\u8a00\u7f16\u7a0b\u7684\u7ecf\u9a8c\u3002KCL \u4e3b\u8981\u53d7 Python \u542f\u53d1\uff0c\u4e86\u89e3 Python \u5bf9\u5b66\u4e60 KCL \u975e\u5e38\u6709\u5e2e\u52a9\u3002",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/version-0.4.4/reference/lang/tour.md",sourceDirName:"reference/lang",slug:"/reference/lang/tour",permalink:"/zh-CN/docs/0.4.4/reference/lang/tour",draft:!1,editUrl:"https://github.com/kcl-lang/kcl-lang.io/tree/main/versioned_docs/version-0.4.4/reference/lang/tour.md",tags:[],version:"0.4.4",lastUpdatedBy:"peefy",lastUpdatedAt:1689086091,formattedLastUpdatedAt:"2023\u5e747\u670811\u65e5",sidebarPosition:1,frontMatter:{title:"KCL \u4e4b\u65c5",sidebar_position:1},sidebar:"reference",next:{title:"\u4ee3\u7801\u5b9e\u9a8c\u5ba4",permalink:"/zh-CN/docs/0.4.4/reference/lang/codelab/"}},o={},s=[{value:"\u91cd\u8981\u6982\u5ff5",id:"\u91cd\u8981\u6982\u5ff5",level:3},{value:"\u5173\u952e\u5b57",id:"\u5173\u952e\u5b57",level:3},{value:"\u6807\u8bc6\u7b26",id:"\u6807\u8bc6\u7b26",level:3},{value:"\u6807\u8bc6\u7b26\u524d\u7f00",id:"\u6807\u8bc6\u7b26\u524d\u7f00",level:4},{value:"\u53d8\u91cf",id:"\u53d8\u91cf",level:3},{value:"\u5185\u7f6e\u7c7b\u578b",id:"\u5185\u7f6e\u7c7b\u578b",level:3},{value:"\u6570\u5b57",id:"\u6570\u5b57",level:4},{value:"\u5355\u4f4d\u5b57\u9762\u503c",id:"\u5355\u4f4d\u5b57\u9762\u503c",level:5},{value:"\u5b57\u7b26\u4e32",id:"\u5b57\u7b26\u4e32",level:4},{value:"\u539f\u59cb\u5b57\u7b26\u4e32",id:"\u539f\u59cb\u5b57\u7b26\u4e32",level:5},{value:"\u5e03\u5c14\u503c",id:"\u5e03\u5c14\u503c",level:4},{value:"List",id:"list",level:4},{value:"Dict",id:"dict",level:4},{value:"None",id:"none",level:4},{value:"Undefined",id:"undefined",level:4},{value:"\u8fd0\u7b97\u7b26",id:"\u8fd0\u7b97\u7b26",level:3},{value:"\u7b97\u6570\u8fd0\u7b97\u7b26",id:"\u7b97\u6570\u8fd0\u7b97\u7b26",level:4},{value:"\u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26",id:"\u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26",level:4},{value:"\u903b\u8f91\u8fd0\u7b97\u7b26",id:"\u903b\u8f91\u8fd0\u7b97\u7b26",level:4},{value:"\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26",id:"\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26",level:4},{value:"\u8d4b\u503c\u8fd0\u7b97\u7b26",id:"\u8d4b\u503c\u8fd0\u7b97\u7b26",level:4},{value:"Identity \u8fd0\u7b97\u7b26",id:"identity-\u8fd0\u7b97\u7b26",level:4},{value:"\u6210\u5458\u8fd0\u7b97\u7b26",id:"\u6210\u5458\u8fd0\u7b97\u7b26",level:4},{value:"\u63a8\u5bfc\u5f0f",id:"\u63a8\u5bfc\u5f0f",level:4},{value:"\u5176\u4ed6\u8fd0\u7b97\u7b26",id:"\u5176\u4ed6\u8fd0\u7b97\u7b26",level:4},{value:"\u8868\u8fbe\u5f0f",id:"\u8868\u8fbe\u5f0f",level:3},{value:"\u6761\u4ef6\u8868\u8fbe\u5f0f",id:"\u6761\u4ef6\u8868\u8fbe\u5f0f",level:4},{value:"\u7d22\u5f15\u8868\u8fbe\u5f0f",id:"\u7d22\u5f15\u8868\u8fbe\u5f0f",level:4},{value:"\u5207\u7247\u8868\u8fbe\u5f0f",id:"\u5207\u7247\u8868\u8fbe\u5f0f",level:4},{value:"\u51fd\u6570\u8c03\u7528",id:"\u51fd\u6570\u8c03\u7528",level:4},{value:"\u9009\u62e9\u8868\u8fbe\u5f0f",id:"\u9009\u62e9\u8868\u8fbe\u5f0f",level:4},{value:"Quantifier \u8868\u8fbe\u5f0f",id:"quantifier-\u8868\u8fbe\u5f0f",level:4},{value:"\u6d41\u7a0b\u63a7\u5236\u8868\u8fbe\u5f0f",id:"\u6d41\u7a0b\u63a7\u5236\u8868\u8fbe\u5f0f",level:3},{value:"If \u548c Else",id:"if-\u548c-else",level:4},{value:"\u65ad\u8a00\u8bed\u53e5",id:"\u65ad\u8a00\u8bed\u53e5",level:3},{value:"\u51fd\u6570",id:"\u51fd\u6570",level:3},{value:"\u7c7b\u578b\u7cfb\u7edf",id:"\u7c7b\u578b\u7cfb\u7edf",level:3},{value:"\u7c7b\u578b\u6ce8\u89e3",id:"\u7c7b\u578b\u6ce8\u89e3",level:4},{value:"\u7c7b\u578b\u63a8\u5bfc",id:"\u7c7b\u578b\u63a8\u5bfc",level:4},{value:"\u7c7b\u578b\u522b\u540d",id:"\u7c7b\u578b\u522b\u540d",level:4},{value:"\u7c7b\u578b\u5b88\u536b",id:"\u7c7b\u578b\u5b88\u536b",level:4},{value:"Schema",id:"schema",level:3},{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:4},{value:"\u57fa\u7840\u90e8\u5206",id:"\u57fa\u7840\u90e8\u5206",level:4},{value:"\u5c5e\u6027",id:"\u5c5e\u6027",level:5},{value:"\u4e0d\u53ef\u53d8\u6027",id:"\u4e0d\u53ef\u53d8\u6027",level:6},{value:"\u53ef\u9009\u5c5e\u6027",id:"\u53ef\u9009\u5c5e\u6027",level:6},{value:"\u987a\u5e8f\u65e0\u5173\u8ba1\u7b97",id:"\u987a\u5e8f\u65e0\u5173\u8ba1\u7b97",level:5},{value:"Schema \u4e0a\u4e0b\u6587",id:"schema-\u4e0a\u4e0b\u6587",level:5},{value:"\u6821\u9a8c",id:"\u6821\u9a8c",level:5},{value:"\u6587\u6863",id:"\u6587\u6863",level:5},{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:5},{value:"\u9ad8\u7ea7\u529f\u80fd",id:"\u9ad8\u7ea7\u529f\u80fd",level:4},{value:"Protocol &amp; Mixin",id:"protocol--mixin",level:5},{value:"\u7d22\u5f15\u7b7e\u540d",id:"\u7d22\u5f15\u7b7e\u540d",level:5},{value:"\u57fa\u672c\u7528\u6cd5",id:"\u57fa\u672c\u7528\u6cd5",level:6},{value:"\u540c\u65f6\u5b9a\u4e49\u5c5e\u6027\u548c\u7d22\u5f15\u7b7e\u540d",id:"\u540c\u65f6\u5b9a\u4e49\u5c5e\u6027\u548c\u7d22\u5f15\u7b7e\u540d",level:6},{value:"\u5b9a\u4e49\u7d22\u5f15\u7b7e\u540d\u522b\u540d",id:"\u5b9a\u4e49\u7d22\u5f15\u7b7e\u540d\u522b\u540d",level:6},{value:"\u7ee7\u627f",id:"\u7ee7\u627f",level:5},{value:"Schema \u51fd\u6570",id:"schema-\u51fd\u6570",level:5},{value:"\u88c5\u9970\u5668",id:"\u88c5\u9970\u5668",level:5},{value:"\u6210\u5458\u51fd\u6570",id:"\u6210\u5458\u51fd\u6570",level:5},{value:"\u914d\u7f6e\u64cd\u4f5c",id:"\u914d\u7f6e\u64cd\u4f5c",level:3},{value:"\u914d\u7f6e\u5408\u5e76",id:"\u914d\u7f6e\u5408\u5e76",level:4},{value:"| \u8fd0\u7b97\u7b26",id:"-\u8fd0\u7b97\u7b26",level:5},{value:": \u8fd0\u7b97\u7b26",id:"-\u8fd0\u7b97\u7b26-1",level:5},{value:"\u914d\u7f6e\u8986\u76d6",id:"\u914d\u7f6e\u8986\u76d6",level:4},{value:"= \u8fd0\u7b97\u7b26",id:"-\u8fd0\u7b97\u7b26-2",level:5},{value:"\u914d\u7f6e\u6dfb\u52a0",id:"\u914d\u7f6e\u6dfb\u52a0",level:4},{value:"+= \u8fd0\u7b97\u7b26",id:"-\u8fd0\u7b97\u7b26-3",level:5},{value:"\u6ce8\u610f\u4e8b\u9879",id:"\u6ce8\u610f\u4e8b\u9879",level:4},{value:"Rule",id:"rule",level:3},{value:"\u6a21\u5757",id:"\u6a21\u5757",level:3},{value:"\u76f8\u5bf9\u8def\u5f84\u5f15\u7528",id:"\u76f8\u5bf9\u8def\u5f84\u5f15\u7528",level:4},{value:"\u7edd\u5bf9\u8def\u5f84\u5f15\u7528",id:"\u7edd\u5bf9\u8def\u5f84\u5f15\u7528",level:4},{value:"\u52a8\u6001\u53c2\u6570",id:"\u52a8\u6001\u53c2\u6570",level:3},{value:"Setting \u6587\u4ef6\u5f62\u5f0f\u7684\u53c2\u6570",id:"setting-\u6587\u4ef6\u5f62\u5f0f\u7684\u53c2\u6570",level:4},{value:"Option Functions",id:"option-functions",level:4},{value:"\u591a\u6587\u4ef6\u7f16\u8bd1",id:"\u591a\u6587\u4ef6\u7f16\u8bd1",level:3},{value:"KCL \u53d8\u91cf\u67e5\u8be2",id:"kcl-\u53d8\u91cf\u67e5\u8be2",level:3},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:4},{value:"KCL \u53d8\u91cf\u4fee\u6539",id:"kcl-\u53d8\u91cf\u4fee\u6539",level:3},{value:"\u793a\u4f8b",id:"\u793a\u4f8b-1",level:4},{value:"\u4fee\u6539\u793a\u4f8b",id:"\u4fee\u6539\u793a\u4f8b",level:5},{value:"\u5220\u9664\u793a\u4f8b",id:"\u5220\u9664\u793a\u4f8b",level:5},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:3}],k={toc:s},m="wrapper";function u(e){let{components:n,...a}=e;return(0,l.kt)(m,(0,t.Z)({},k,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u672c\u6587\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 KCL \u7684\u6838\u5fc3\u7279\u6027\uff0c\u5305\u542b\u53d8\u91cf\u3001\u8fd0\u7b97\u7b26\u3001schema \u548c\u5e93\uff0c\u524d\u63d0\u662f\u60a8\u6709\u4f7f\u7528\u5176\u4ed6\u8bed\u8a00\u7f16\u7a0b\u7684\u7ecf\u9a8c\u3002KCL \u4e3b\u8981\u53d7 Python \u542f\u53d1\uff0c\u4e86\u89e3 Python \u5bf9\u5b66\u4e60 KCL \u975e\u5e38\u6709\u5e2e\u52a9\u3002"),(0,l.kt)("h3",{id:"\u91cd\u8981\u6982\u5ff5"},"\u91cd\u8981\u6982\u5ff5"),(0,l.kt)("p",null,"\u5728\u5b66\u4e60 KCL \u8bed\u8a00\u65f6\uff0c\u8bf7\u7262\u8bb0\u4ee5\u4e0b\u4e8b\u5b9e\u548c\u6982\u5ff5\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"KCL \u662f\u4e00\u79cd\u914d\u7f6e\u7b56\u7565\u8bed\u8a00\u3002\u5b83\u4e3a\u7f16\u5199\u914d\u7f6e\u548c\u7b56\u7565\u63d0\u4f9b\u4e86\u7b80\u5355\u4e14\u81ea\u6d3d\u7684\u8bed\u8a00\u8bbe\u8ba1\u548c\u5e93\u652f\u6301\u3002\u5b83\u4e0d\u80fd\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u6216\u5176\u4ed6\u901a\u7528\u7f16\u7a0b\u8bed\u8a00\uff08GPL\uff09\u652f\u6301\u7684\u573a\u666f\u3002"),(0,l.kt)("li",{parentName:"ul"},"KCL \u5438\u6536\u4e86\u7ecf\u5178 ",(0,l.kt)("strong",{parentName:"li"},"OOP")," \u7684\u5143\u7d20\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86",(0,l.kt)("strong",{parentName:"li"},"\u7c7b\u578b"),"\u3001",(0,l.kt)("strong",{parentName:"li"},"\u590d\u7528"),"\u548c",(0,l.kt)("strong",{parentName:"li"},"\u5408\u5e76"),"\u7b49\u7b80\u5355\u3001\u5f00\u53d1\u4eba\u5458\u53cb\u597d\u3001\u53ef\u9760\u4e14\u5229\u4e8e\u4f20\u64ad\u7684\u914d\u7f6e\u7f16\u5199\u5b9e\u8df5\u3002"),(0,l.kt)("li",{parentName:"ul"},"KCL \u66f4\u503e\u5411\u4e8e",(0,l.kt)("strong",{parentName:"li"},"\u4e0d\u53ef\u53d8\u6027"),"\uff0c\u5efa\u8bae\u4f7f\u7528",(0,l.kt)("strong",{parentName:"li"},"\u5408\u5e76"),"\u6765\u6dfb\u52a0\u589e\u91cf\u7684\u53d8\u66f4\u3002\u4e0d\u53ef\u53d8\u6027\u964d\u4f4e\u4e86\u526f\u4f5c\u7528\uff0c\u4f8b\u5982\u4e0d\u53ef\u9884\u6d4b\u7684\u95ee\u9898\u3002"),(0,l.kt)("li",{parentName:"ul"},"KCL \u7684 ",(0,l.kt)("strong",{parentName:"li"},"schema")," \u7ed3\u6784\u4f53\u5b9a\u4e49\u4e86\u4e25\u683c\u7684\u5c5e\u6027\u548c\u9759\u6001\u7c7b\u578b\uff0c\u5e76\u4e14\u652f\u6301\u8868\u8fbe\u5f0f\u9a8c\u8bc1\u3002",(0,l.kt)("strong",{parentName:"li"},"schema")," \u7ed3\u6784\u4f53\u4e3b\u8981\u7531\u5e26\u7c7b\u578b\u7684\u5c5e\u6027\u3001schema \u4e0a\u4e0b\u6587\u548c\u68c0\u67e5\u5757\u6784\u6210\u3002"),(0,l.kt)("li",{parentName:"ul"},"KCL \u7684 ",(0,l.kt)("strong",{parentName:"li"},"config")," \u662f\u4e00\u4e2a\u7c7b ",(0,l.kt)("strong",{parentName:"li"},"JSON")," \u8868\u8fbe\u5f0f\uff0c\u901a\u8fc7\u5b83\u6211\u4eec\u53ef\u4ee5\u590d\u7528 schema \u7684\u5b8c\u6574\u5b9a\u4e49\u3002KCL \u901a\u8fc7\u5206\u79bb schema \u548c config \u6765\u63d0\u4f9b\u5b9a\u4e49\u548c\u914d\u7f6e\u7684\u80fd\u529b\u3002"),(0,l.kt)("li",{parentName:"ul"},"KCL \u7684 ",(0,l.kt)("strong",{parentName:"li"},"rule")," \u662f\u4e00\u4e2a\u4e66\u5199\u89c4\u5219\u7ea6\u675f\u8868\u8fbe\u5f0f\u7684\u7ed3\u6784\uff0c\u53ef\u7528\u4e8e\u6570\u636e\u6821\u9a8c\u548c\u7b56\u7565\u7f16\u5199\u3002"),(0,l.kt)("li",{parentName:"ul"},"KCL \u7684\u4ee3\u7801\u6587\u4ef6\u4ee5\u5305\uff08\u76ee\u5f55\uff09\u548c\u6a21\u5757\uff08\u6587\u4ef6\uff09\u7684\u5f62\u5f0f\u8fdb\u884c\u7ba1\u7406\u3002\u540c\u4e00\u5305\u4e2d\u7684 schema \u5f7c\u6b64\u53ef\u89c1\uff1b\u8de8\u5305\u7684\u6570\u636e\u9700\u8981\u901a\u8fc7 ",(0,l.kt)("strong",{parentName:"li"},"import \u8bed\u53e5"),"\u5bfc\u5165\u3002\u5305\u7ea7\u53d8\u91cf\u867d\u7136\u53ef\u4ee5\u5bfc\u51fa\uff0c\u4f46\u662f\u5b83\u4eec\u4e0d\u80fd\u88ab\u5176\u4ed6\u5305\u4fee\u6539\u3002"),(0,l.kt)("li",{parentName:"ul"},"KCL \u8bed\u6cd5\u5b9a\u4e49\u4e3b\u8981\u4f7f\u7528\u58f0\u660e\u5f0f\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u53ea\u63d0\u4f9b\u5c11\u91cf\u5fc5\u8981\u7684\u58f0\u660e\u5f0f\u8bed\u53e5\uff0c\u4f8b\u5982 import\u3001 if...else\u3001assert\u3001assignment \u4ee5\u53ca schema\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6ca1\u6709\u4e3b\u51fd\u6570\uff0c\u6bcf\u4e2a ",(0,l.kt)("inlineCode",{parentName:"li"},".k")," \u6587\u4ef6\u53ef\u4ee5\u4f5c\u4e3a\u5355\u72ec\u7684\u914d\u7f6e\u6587\u4ef6\u6267\u884c\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301",(0,l.kt)("strong",{parentName:"li"},"\u5185\u7f6e\u51fd\u6570"),"\u548c",(0,l.kt)("strong",{parentName:"li"},"\u63d2\u4ef6"),"\u4ee5\u7b80\u5316\u7f16\u5199\u3002")),(0,l.kt)("h3",{id:"\u5173\u952e\u5b57"},"\u5173\u952e\u5b57"),(0,l.kt)("p",null,"\u4e0b\u8868\u5217\u51fa\u4e86 KCL \u8bed\u8a00\u7684\u5173\u952e\u5b57\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"    True       False      None        Undefined   import\n    and        or         in          is          not\n    as         if         else        elif        for\n    schema     mixin      protocol    check       assert\n    all        any        map         filter      lambda\n    rule\n")),(0,l.kt)("h3",{id:"\u6807\u8bc6\u7b26"},"\u6807\u8bc6\u7b26"),(0,l.kt)("p",null,"\u5728 KCL \u4e2d, \u6807\u8bc6\u7b26\u662f\u6807\u8bc6\u4e00\u4e2a\u503c\u7684\u540d\u79f0\uff0c\u53ef\u4ee5\u5e26\u6709\u9009\u62e9\u5668\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bc6\u7b26\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u6216\u524d\u7f00 ",(0,l.kt)("inlineCode",{parentName:"li"},"$")," \u7ec4\u6210\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bc6\u7b26\u4e0d\u80fd\u4e0e\u5173\u952e\u5b57\u91cd\u590d\uff0c\u9664\u975e\u5b83\u4eec\u6709 ",(0,l.kt)("inlineCode",{parentName:"li"},"$")," \u524d\u7f00\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6807\u8bc6\u7b26\u4e0d\u5f97\u5305\u542b\u4efb\u4f55\u5d4c\u5165\u7684\u7a7a\u683c\u6216\u7b26\u53f7\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u5728\u6807\u8bc6\u7b26\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u4f7f\u7528\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6570\u5b57\u4e0d\u80fd\u653e\u5728\u6807\u8bc6\u7b26\u7684\u7b2c\u4e00\u4f4d\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$")," \u5b57\u7b26\u53ea\u80fd\u653e\u5728\u6807\u8bc6\u7b26\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002")),(0,l.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"x\na\nb1\nb_2\n_c\n$if\n")),(0,l.kt)("p",null,"\u4e3a\u4e86\u7b80\u5316\u9650\u5b9a\u6807\u8bc6\u7b26\uff08\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"p"},"pkg.type"),"\uff09\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u8fd8\u5b9a\u4e49\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"qualified identifier"),"\uff1a"),(0,l.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pkg.a\n")),(0,l.kt)("p",null,"\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"qualified identifier")," \u4e2d\u7684\u5305\u540d\u5fc5\u987b\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"import")," \u5173\u952e\u5b57\u5bfc\u5165\u3002"),(0,l.kt)("h4",{id:"\u6807\u8bc6\u7b26\u524d\u7f00"},"\u6807\u8bc6\u7b26\u524d\u7f00"),(0,l.kt)("p",null,"\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"$")," \u524d\u7f00\u7b26\u53f7\u5b9a\u4e49\u5173\u952e\u5b57\u6807\u8bc6\u7b26\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'$if = 1\n$else = "s"\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u975e\u5173\u952e\u5b57\u6807\u8bc6\u7b26\u662f\u5426\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"$")," \u7b26\u53f7\u90fd\u662f\u540c\u6837\u7684\u6548\u679c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"_a = 1\n$_a = 2  # equal to `_a = 2`\n")),(0,l.kt)("h3",{id:"\u53d8\u91cf"},"\u53d8\u91cf"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u662f\u5982\u4f55\u521b\u5efa\u5e76\u5b9e\u4f8b\u5316\u53d8\u91cf\u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'name = "Foo"  # Declare a variable named `name` and its value is a string literal "Foo"\n')),(0,l.kt)("p",null,"\u5b83\u5bf9\u5e94\u4e86\u5982\u4e0b YAML \u8f93\u51fa\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Foo\n")),(0,l.kt)("p",null,"\u5728 KCL \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u5305\u7ea7\u53d8\u91cf\u5c06\u53d8\u91cf\u5bfc\u51fa\u4e3a\u914d\u7f6e\u6570\u636e\u3002\u4f7f\u5176\u76f4\u63a5\u3001\u6e05\u6670\u3001\u53ef\u7ef4\u62a4\u3002\u5bfc\u51fa\u7684\u53d8\u91cf\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u56e0\u6b64\u4e00\u65e6\u58f0\u660e\u5b83\uff0c\u5c31\u65e0\u6cd5\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\uff0c\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"example.k")," \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u53d8\u91cf ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," \u5728\u58f0\u660e\u540e\u5c31\u7981\u6b62\u4fee\u6539\uff0c\u5c31\u50cf\u6807\u51c6\u7684\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e00\u6837\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'name = "Foo"  # exported\n\n...\n\nname = "Bar"  # error: a exported declaration variable can only be set once.\n')),(0,l.kt)("p",null,"\u4f5c\u4e3a\u8865\u5145\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6a21\u5757\u7ea7\u522b\u5b9a\u4e49\u4e00\u4e2a\u975e\u5bfc\u51fa\u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u662f\u53ef\u53d8\u7684\uff0c\u4e0d\u4f1a\u663e\u793a\u5728 YAML \u8f93\u51fa\u5f53\u4e2d\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'_name = "Foo"  # _ variables are not output to YAML and are mutable\n_name = "Bar"\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u53d8\u91cf\u7684\u540d\u79f0\u4e0d\u80fd\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"True"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"False"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"None")," \u6216\u8005 ",(0,l.kt)("inlineCode",{parentName:"p"},"Undefined"),"\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e KCL \u5185\u7f6e\u7684\u540d\u79f0\u5e38\u91cf\u4e4b\u95f4\u5b58\u5728\u4e8c\u4e49\u6027\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"False = 1  # Error\nTrue = False  # Error\nNone = Undefined  # Error\nUndefined = None  # Error\n")),(0,l.kt)("h3",{id:"\u5185\u7f6e\u7c7b\u578b"},"\u5185\u7f6e\u7c7b\u578b"),(0,l.kt)("p",null,"KCL \u652f\u6301\u4ee5\u4e0b\u7c7b\u578b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6570\u5b57"),(0,l.kt)("li",{parentName:"ul"},"\u5b57\u7b26\u4e32"),(0,l.kt)("li",{parentName:"ul"},"\u5e03\u5c14"),(0,l.kt)("li",{parentName:"ul"},"\u5217\u8868"),(0,l.kt)("li",{parentName:"ul"},"\u5b57\u5178")),(0,l.kt)("h4",{id:"\u6570\u5b57"},"\u6570\u5b57"),(0,l.kt)("p",null,"KCL \u7684\u6570\u5b57\u7c7b\u578b\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"64 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u3002\u503c\u7684\u8303\u56f4\u4e3a -9223372036854775808~9223372036854775807."),(0,l.kt)("li",{parentName:"ul"},"64 \u4f4d\u6d6e\u70b9\u6570\uff0c\u9075\u5faa IEEE 754 \u6807\u51c6\u3002\u6211\u4eec\u4e0d\u5efa\u8bae\u5728\u914d\u7f6e\u4e2d\u4f7f\u7528 float \u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u4ee3\u66ff\u5e76\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u89e3\u6790\u3002")),(0,l.kt)("p",null,"\u6574\u6570\u548c\u6d6e\u70b9\u6570\u90fd\u652f\u6301\u57fa\u672c\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"p"},"+"),"\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"-"),"\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"/")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"*"),"\uff0c\u800c\u590d\u6742\u7684\u8fd0\u7b97\uff0c\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"p"},"abs()"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"ceil()")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"floor()"),"\uff0c\u90fd\u662f\u901a\u8fc7\u5185\u7f6e\u7684\u6570\u5b66\u5e93\u6765\u652f\u6301\u3002"),(0,l.kt)("p",null,"\u6574\u6570\u662f\u4e0d\u5e26\u5c0f\u6570\u70b9\u7684\u6570\u5b57\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5b9a\u4e49\u6574\u6570\u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = 1\nb = -1\nc = 0x10 # hexadecimal literal\nd = 0o10 # octal literal\ne = 010  # octal literal\nf = 0b10 # binary literal\ng = int("10") # int constructor\n')),(0,l.kt)("p",null,"\u5982\u679c\u4e00\u4e2a\u6570\u5b57\u5305\u542b\u5c0f\u6570\u70b9\uff0c\u5219\u5b83\u662f\u6d6e\u70b9\u6570\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u6d6e\u70b9\u6570\u7684\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = 1.10\nb = 1.0\nc = -35.59\nd = 32.3e+18\nf = -90.\nh = 70.2E-12\ni = float("112") # float constructor\n')),(0,l.kt)("p",null,"\u5185\u7f6e\u6570\u5b66\u5e93\u53ef\u7528\u4e8e\u6570\u5b57\u7c7b\u578b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import math\n\nassert abs(-40) == 40\nassert round(70.23456) == 70\nassert min(80, 100, 1000) == 80\nassert max(80, 100, 1000) == 1000\nassert sum([0,1,2]) == 3\nassert math.ceil(100.12) == 101.0\nassert math.floor(100.12) == 100.0\nassert math.pow(100, 2) == 10000.0\n")),(0,l.kt)("p",null,"KCL \u9ed8\u8ba4\u4f7f\u7528 64 \u4f4d\u6570\u5b57\u7c7b\u578b\u3002\u6211\u4eec\u53ef\u4ee5\u5728 KCL \u547d\u4ee4\u884c\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"-r")," \u53c2\u6570\u6267\u884c\u4e25\u683c\u7684 32 \u4f4d\u8303\u56f4\u68c0\u67e5\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl main.k -r -d\n")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u4e3a\u4e86\u6027\u80fd\u8003\u8651\u8be5\u529f\u80fd\u53ea\u80fd\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"debug")," \u6a21\u5f0f\u4e2d\u4f7f\u7528\u3002"),(0,l.kt)("h5",{id:"\u5355\u4f4d\u5b57\u9762\u503c"},"\u5355\u4f4d\u5b57\u9762\u503c"),(0,l.kt)("p",null,"\u5728 KCL \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u6574\u6570\u6dfb\u52a0\u5982\u4e0b\u7684\u5355\u4f4d\u540e\u7f00\uff0c\u8fd9\u4e0d\u5f71\u54cd\u5b83\u7684\u771f\u5b9e\u503c\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u901a\u7528\u6574\u5f62\u548c\u5b9a\u70b9\u6570: ",(0,l.kt)("inlineCode",{parentName:"li"},"P"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"T"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"G"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"M"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"K"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"k"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"m"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"u"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"n")),(0,l.kt)("li",{parentName:"ul"},"2 \u7684\u5e42: ",(0,l.kt)("inlineCode",{parentName:"li"},"Pi"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Ti"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Gi"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Mi"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Ki"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# SI\nn = 1n  # 1e-09\nu = 1u  # 1e-06\nm = 1m  # 1e-03\nk = 1k  # 1000\nK = 1K  # 1000\nM = 1M  # 1000000\nG = 1G  # 1000000000\nT = 1T  # 100000000000\nP = 1P  # 1000000000000000\n# IEC\nKi = 1Ki  # 1024\nMi = 1Mi  # 1024 ** 2\nGi = 1Gi  # 1024 ** 3\nTi = 1Ti  # 1024 ** 4\nPi = 1Pi  # 1024 ** 5\n")),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5b9a\u4e49\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"units")," \u6a21\u5757\u4e2d\u7684\u5355\u4f4d\u5e38\u91cf\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import units\n\nn = 1 * units.n  # 1e-09\nu = 1 * units.u  # 1e-06\nm = 1 * units.m  # 1e-03\nk = 1 * units.k  # 1000\nK = 1 * units.K  # 1000\nM = 1 * units.M  # 1000000\nG = 1 * units.G  # 1000000000\nT = 1 * units.T  # 1000000000000\nP = 1 * units.P  # 1000000000000000\n# IEC\nKi = 1 * units.Ki  # 1024\nMi = 1 * units.Mi  # 1024 ** 2\nGi = 1 * units.Gi  # 1024 ** 3\nTi = 1 * units.Ti  # 1024 ** 4\nPi = 1 * units.Pi  # 1024 ** 5\n")),(0,l.kt)("p",null,"\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5b9a\u4e49\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"units")," \u6a21\u5757\u5185\u7684\u6574\u6570\u548c\u5355\u4f4d\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u8f6c\u6362\u51fd\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import units\n# SI\nK = units.to_K(1000)   # "1K"\nM = units.to_M(1000000)   # "1M"\nG = units.to_G(1000000000)   # "1G"\nT = units.to_T(1000000000000)   # "1T"\nP = units.to_P(1000000000000000)  # "1P"\n# IEC\nKi = units.to_Ki(1024)  # "1Ki"\nMi = units.to_Mi(1024 ** 2)  # "1Mi"\nGi = units.to_Gi(1024 ** 3)  # "1Gi"\nTi = units.to_Ti(1024 ** 4)  # "1Ti"\nPi = units.to_Pi(1024 ** 5)  # "1Pi"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import units\n# SI\nK = units.to_K(int("1M"))   # "1000K"\nM = units.to_M(int("1G"))   # "1000M"\nG = units.to_G(int("1T"))   # "1000G"\nT = units.to_T(int("1P"))   # "1000T"\nP = units.to_P(int("10P"))  # "10P"\n# IEC\nKi = units.to_Ki(int("1Mi"))   # "1024Ki"\nMi = units.to_Mi(int("1Gi"))   # "1024Mi"\nGi = units.to_Gi(int("1Ti"))   # "1024Gi"\nTi = units.to_Ti(int("1Pi"))   # "1024Ti"\nPi = units.to_Pi(int("10Pi"))  # "10Pi"\n')),(0,l.kt)("p",null,"\u5355\u4f4d\u7c7b\u578b\u5b9a\u4e49\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"units")," \u6a21\u5757\u4e2d\uff0c\u5355\u4f4d\u7c7b\u578b\u7684\u503c\u4e0d\u80fd\u8fdb\u884c\u4efb\u4f55\u56db\u5219\u8fd0\u7b97\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import units\n\ntype NumberMultiplier = units.NumberMultiplier\n\nx0: NumberMultiplier = 1M  # Ok\nx1: NumberMultiplier = x0  # Ok\nx2 = x0 + x1  # Error: unsupported operand type(s) for +: 'number_multiplier(1M)' and 'number_multiplier(1M)'\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"int()"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"float()")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"str()")," \u51fd\u6570\u5c06\u6570\u503c\u5355\u4f4d\u7c7b\u578b\u8f6c\u6362\u4e3a\u6570\u5b57\u7c7b\u578b\u6216\u5b57\u7b26\u4e32\u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a: int = int(1Ki)  # 1024\nb: float = float(1Ki)  # 1024.0\nc: str = str(1Mi)  # "1Mi"\n')),(0,l.kt)("h4",{id:"\u5b57\u7b26\u4e32"},"\u5b57\u7b26\u4e32"),(0,l.kt)("p",null,"\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684 Unicode \u5b57\u7b26\u5e8f\u5217\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u521b\u5efa\u5b57\u7b26\u4e32\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"'allows embedded \"double\" quotes'  # Single quotes\n\"allows embedded 'single' quotes\"  # Double quotes\n'''Three single quotes''', \"\"\"Three double quotes\"\"\"  # Triple quoted\n")),(0,l.kt)("p",null,"\u4e09\u5f15\u53f7\u7528\u4e8e\u5b9a\u4e49\u591a\u884c\u5b57\u7b26\u4e32\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'"""This is a long triple quoted string\nmay span multiple lines.\n"""\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0cKCL \u7684\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u5b57\u7b26\u4e32\u7684\u4f7f\u7528\u51e0\u4e4e\u6ca1\u6709\u533a\u522b\u3002\u552f\u4e00\u53ef\u4ee5\u7b80\u5316\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5728\u5355\u5f15\u53f7\u5b57\u7b26\u4e32\u4e2d\u8f6c\u4e49\u53cc\u5f15\u53f7\uff0c\u4e5f\u4e0d\u9700\u8981\u5728\u53cc\u5f15\u53f7\u4e2d\u8f6c\u4e49\u5355\u5f15\u53f7\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"'This is my book named \"foo\"'  # Don\u2019t need to escape double quotes in single quoted strings.\n\"This is my book named 'foo'\"  # Don\u2019t need to escape single quotes in double quoted strings.\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"+")," \u64cd\u4f5c\u7b26\u8fde\u63a5\u5b57\u7b26\u4e32\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"x = 'The + operator ' + 'works, as well.'\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"str")," \u5185\u7f6e\u51fd\u6570\u5c06 int \u6216 float \u8f6c\u4e3a\u5b57\u7b26\u4e32\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'x = str(3.5) # "3.5"\n')),(0,l.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528\u5f88\u591a\u5185\u7f6e\u7684\u5b57\u7b26\u4e32\u51fd\u6570\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'x = "length"\nassert len(x) == 6 # True\nassert x.capitalize() == "Length"\nassert x.count("gt") == 1\nassert x.endswith("th") == True\nassert x.find("gth") == 3\nassert "{} {}".format("hello", "world") == \'hello world\'\nassert x.index("gth") == 3\nassert x.isalnum() == True\nassert x.isalpha() == True\nassert "123456".isdigit() == True\nassert x.islower() == True\nassert "       ".isspace() == True\nassert "This Is Title Example".istitle() == True\nassert x.isupper() == False\nassert "|".join(["a", "b", "c"]) == "a|b|c"\nassert "LENGTH".lower() == "length"\nassert \'   spacious   \'.lstrip() == \'spacious   \'\nassert x.replace("th", "ht") == "lenght"\nassert "lengthlength".rfind("le") == 6\nassert "lengthlength".rindex("le") == 6\nassert "length length".rsplit() == ["length", "length"]\nassert "length   ".rstrip() == "length"\nassert "length length".split() == ["length", "length"]\nassert \'ab c\\n\\nde fg\\rkl\\r\\n\'.splitlines() == [\'ab c\', \'\', \'de fg\', \'kl\']\nassert "length".startswith(\'len\') == True\nassert "***length***".strip(\'*\') == "length"\nassert "length length".title() == "Length Length"\nassert x.upper() == "LENGTH"\n')),(0,l.kt)("p",null,"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6709\u4e24\u79cd\u4f7f\u7528\u65b9\u6cd5\uff1a \u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},'"{}".format()')," \u5185\u7f6e\u51fd\u6570, \u6216\u8005\u4f7f\u7528\u82b1\u62ec\u53f7\u6307\u5b9a\u53d8\u91cf\u5e76\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"$")," \u6807\u8bb0\u53d6\u53d8\u91cf\u503c\u3002\u5728 KCL \u4e2d\u53eb\u505a",(0,l.kt)("strong",{parentName:"p"},"\u63d2\u503c\u5b57\u7b26\u4e32"),"\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"a")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"b")," \u7684\u503c\u90fd\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},'"hello world"'),"\u3002"),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u8981\u5e8f\u5217\u5316\u7684\u53d8\u91cf\u53ef\u4ee5\u4ee5\u7279\u6b8a\u7684\u6570\u636e\u683c\u5f0f\u63d0\u53d6\uff0c\u4f8b\u5982 YAML \u6216 JSON\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e2d\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"#yaml")," \u6216 ",(0,l.kt)("inlineCode",{parentName:"p"},"#json")," \u53ef\u4ee5\u5305\u542b\u5728\u82b1\u62ec\u53f7\u4e2d\u3002"),(0,l.kt)("p",null,"\u5177\u4f53\u6765\u8bf4\uff0c\u5f53 ",(0,l.kt)("inlineCode",{parentName:"p"},"$")," \u7b26\u53f7\u672c\u8eab\u9700\u8981\u51fa\u73b0\u5728",(0,l.kt)("strong",{parentName:"p"},"\u63d2\u503c\u5b57\u7b26\u4e32"),"\u4e2d\uff0c\u9700\u8981\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"$$")," \u8f6c\u4e49\u3002\u6216\u8005\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"+")," \u7b26\u53f7\u8fde\u63a5 ",(0,l.kt)("inlineCode",{parentName:"p"},"$")," \u7b26\u53f7\u548c\u63d2\u503c\u5b57\u7b26\u4e32\u6765\u907f\u514d\u8f6c\u4e49\u3002\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"c")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"c2")," \u7684\u503c\u90fd\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"$hello world$"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'world = "world"\na = "hello {}".format(world)       # "hello world"\nb = "hello ${world}"               # "hello world"\nc = "$$hello ${world}$$"           # "$hello world$"\nc2 = "$" + "hello ${world}" + "$"  # "$hello world$"\n\nmyDict = {\n    "key1" = "value1"\n    "key2" = "value2"\n}\n\nd = "here is myDict in json: ${myDict: #json}"\n# d: \'here is myDict in json: {"key1": "value1", "key2": "value2"}\'\n\ne = "here is myDict in yaml:\\n${myDict: #yaml}"\n# e: |\n#  here is myDict in yaml:\n#  key1: value1\n#  key2: value2\n')),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u8f93\u51fa ",(0,l.kt)("strong",{parentName:"p"},"YAML \u5b57\u7b26\u4e32")," \u4e2d\u770b\u5230\u4e00\u4e9b\u7b26\u53f7\uff0c\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"p"},"|"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},">"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"+"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"-"),"\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"|")," \u8868\u793a ",(0,l.kt)("strong",{parentName:"li"},"\u5757\u6587\u5b57\u6837\u5f0f"),"\uff0c\u6307\u793a\u5757\u5185\u6362\u884c\u7b26\u7684\u884c\u4e3a\u65b9\u5f0f\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},">")," \u8868\u793a\u5757\u6807\u91cf\u4e2d\u7684",(0,l.kt)("strong",{parentName:"li"},"\u5757\u6298\u53e0\u6837\u5f0f"),"\uff0c\u6362\u884c\u7b26\u5c06\u88ab\u7a7a\u683c\u66ff\u6362\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"+")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"-")," \u662f ",(0,l.kt)("strong",{parentName:"li"},"block chomping \u6307\u793a\u7b26"),"\uff0c\u7528\u4e8e\u63a7\u5236\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u6362\u884c\u7b26\u3002 \u9ed8\u8ba4\u503c ",(0,l.kt)("strong",{parentName:"li"},"clip")," \u5728\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u653e\u7f6e\u4e00\u4e2a\u6362\u884c\u7b26\u3002 \u8981\u5220\u9664\u6240\u6709\u6362\u884c\u7b26\uff0c\u8bf7\u901a\u8fc7\u5728\u6837\u5f0f\u6307\u793a\u7b26 ",(0,l.kt)("inlineCode",{parentName:"li"},"|")," \u6216 ",(0,l.kt)("inlineCode",{parentName:"li"},">")," \u540e\u9762\u6dfb\u52a0 ",(0,l.kt)("inlineCode",{parentName:"li"},"-")," \u6765",(0,l.kt)("strong",{parentName:"li"},"\u5220\u9664"),"\u5b83\u4eec\u3002 clip \u548c strip \u90fd\u5ffd\u7565\u5757\u672b\u5c3e\u5b9e\u9645\u6709\u591a\u5c11\u6362\u884c\u7b26\uff1b \u5728\u6837\u5f0f\u6307\u793a\u7b26\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"li"},"+")," \u6765",(0,l.kt)("strong",{parentName:"li"},"\u4fdd\u7559"),"\u5b83\u4eec\u3002")),(0,l.kt)("p",null,"\u4f8b\u5982\uff0c",(0,l.kt)("strong",{parentName:"p"},"strip \u5757\u6587\u5b57\u6837\u5f0f")," yaml \u5b57\u7b26\u4e32\u662f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"example: |-\n  Several lines of text,\n  with some \"quotes\" of various 'types',\n  and also a blank line:\n\n  plus another line at the end.\n\n\n")),(0,l.kt)("p",null,"\u7ed3\u679c\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain"},"Several lines of text,\nwith some \"quotes\" of various 'types',\nand also a blank line:\n\nplus another line at the end.\n")),(0,l.kt)("p",null,"\u66f4\u591a\u4fe1\u606f\u53ef\u89c1 ",(0,l.kt)("a",{parentName:"p",href:"https://yaml-multiline.info/"},"Yaml Multiline String")," \u548c ",(0,l.kt)("a",{parentName:"p",href:"https://yaml.org/spec/1.2.1/"},"YAML Specification v1.2")," \u3002"),(0,l.kt)("h5",{id:"\u539f\u59cb\u5b57\u7b26\u4e32"},"\u539f\u59cb\u5b57\u7b26\u4e32"),(0,l.kt)("p",null,"KCL \u539f\u59cb\u5b57\u7b26\u4e32\u662f\u901a\u8fc7\u5728\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u524d\u52a0\u4e0a ",(0,l.kt)("inlineCode",{parentName:"p"},"'r'")," \u6216 ",(0,l.kt)("inlineCode",{parentName:"p"},"'R'")," \u6765\u521b\u5efa\u7684\u3002 KCL \u539f\u59cb\u5b57\u7b26\u4e32\u5c06\u53cd\u659c\u6760 (",(0,l.kt)("inlineCode",{parentName:"p"},"\\"),") \u548c\u5b57\u7b26\u4e32\u63d2\u503c (",(0,l.kt)("inlineCode",{parentName:"p"},"${}"),") \u89c6\u4e3a\u666e\u901a\u7684\u975e\u5b57\u7b26\u3002\u5f53\u6211\u4eec\u60f3\u8981\u4e00\u4e2a\u5305\u542b\u53cd\u659c\u6760\u3001\u5b57\u7b26\u4e32\u63d2\u503c\u7684\u5b57\u7b26\u4e32\u5e76\u4e14\u4e0d\u5e0c\u671b\u5b83\u4eec\u88ab\u89c6\u4e3a\u8f6c\u4e49\u5b57\u7b26\u65f6\uff0c\u539f\u59cb\u5b57\u7b26\u4e32\u662f\u5f88\u6709\u7528\u7684\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u5305\u542b\u53cd\u659c\u6760\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"\\"),"\uff09\u7684\u539f\u59cb\u5b57\u7b26\u4e32\uff0cKCL \u4ee3\u7801\u548c\u8f93\u51fa YAML \u5982\u4e0b\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'s = "Hi\\nHello"\nraw_s = r"Hi\\nHello"  # This is a KCL raw string with the `r` prefix. \n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"s: |-\n  Hi\n  Hello\nraw_s: Hi\\nHello\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u5305\u542b\u5b57\u7b26\u4e32\u63d2\u503c\uff08",(0,l.kt)("inlineCode",{parentName:"li"},"${}"),"\uff09\u7684\u539f\u59cb\u5b57\u7b26\u4e32\uff0cKCL \u4ee3\u7801\u548c\u8f93\u51fa YAML \u5982\u4e0b\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'worldString = "world"\ns = "Hello ${worldString}"\nraw_s = r"Hello ${worldString}"  # This is a KCL raw string with the `r` prefix. \n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"worldString: world\ns: Hello world\nraw_s: Hello ${worldString}\n")),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u539f\u59cb\u5b57\u7b26\u4e32\u6700\u5e38\u7528\u7684\u573a\u666f\u662f\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import regex\n\nkey = "key"\nresult = regex.match(key, r"[A-Za-z0-9_.-]*")  # True\n')),(0,l.kt)("h4",{id:"\u5e03\u5c14\u503c"},"\u5e03\u5c14\u503c"),(0,l.kt)("p",null,"\u5e03\u5c14\u503c\u6709\u4e24\u4e2a\u5e38\u91cf\u5bf9\u8c61\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"False")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"True"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = True\nb = False\n")),(0,l.kt)("h4",{id:"list"},"List"),(0,l.kt)("p",null,"List \u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u540c\u8d28\u9879\u7684\u96c6\u5408\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684 KCL \u5217\u8868\u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"list = [1, 2, 3]\nassert len(list) == 3  # True\nassert list[0] == 1  # True\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\u6784\u5efa\u5217\u8868\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"list = [ _x for _x in range(20) if _x % 2 == 0]\nassert list == [0, 2, 4, 6, 8, 10, 12, 14, 16, 18] # True\n")),(0,l.kt)("p",null,"\u5e76\u4e14\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5d4c\u5957\u7684\u5217\u8868\u63a8\u5bfc\u5f0f\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"matrix = [[1, 2], [3,4], [5,6], [7,8]]\ntranspose = [[row[_i] for row in matrix] for _i in range(2)]\nassert transpose == [[1, 3, 5, 7], [2, 4, 6, 8]] # True\n")),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5217\u8868\u63a8\u5bfc\u5f0f\u4e2d\u4f7f\u7528\u4e24\u4e2a\u53d8\u91cf\u3002\u7b2c\u4e00\u4e2a\u53d8\u91cf\u8868\u793a\u5217\u8868\u4e2d\u7684\u7d22\u5f15\uff0c\u7b2c\u4e8c\u4e2a\u53d8\u91cf\u8868\u793a\u5217\u8868\u4e2d\u7684\u9879\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data = [1000, 2000, 3000]\n# Single variable loop\ndataLoop1 = [i * 2 for i in data]  # [2000, 4000, 6000]\ndataLoop2 = [i for i in data if i == 2000]  # [2000]\ndataLoop3 = [i if i > 2 else i + 1 for i in data]  # [1000, 2000, 3000]\n# Double variable loop\ndataLoop4 = [i + v for i, v in data]  # [1000, 2001, 3002]\ndataLoop5 = [v for i, v in data if v == 2000]  # [2000]\n# Use `_` to ignore loop variables\ndataLoop6 = [v if v > 2000 else v + i for i, v in data]  # [1000, 2001, 3000]\ndataLoop7 = [i for i, _ in data]  # [0, 1, 2]\ndataLoop8 = [v for _, v in data if v == 2000]  # [2000]\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"+")," \u8fde\u63a5\u5217\u8868\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"_list0 = [1, 2, 3]\n_list1 = [4, 5, 6]\njoined_list = _list0 + _list1  # [1, 2, 3, 4, 5, 6]\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u89e3\u5305\u64cd\u4f5c\u7b26 ",(0,l.kt)("inlineCode",{parentName:"p"},"*")," \u5408\u5e76\u591a\u4e2a\u5217\u8868\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"_list0 = [1, 2, 3]\n_list1 = [4, 5, 6]\nunion_list = [*_list0, *_list1]  # [1, 2, 3, 4, 5, 6]\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"if")," \u8868\u8fbe\u5f0f\u52a8\u6001\u7684\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u5217\u8868\uff0c\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u4f1a\u88ab\u6dfb\u52a0\u5230\u5217\u8868\uff0c\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u4f1a\u88ab\u5ffd\u7565\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = 1  # 1\ndata = [\n    1\n    if a == 1: 2\n    if a > 0: 3\n    if a < 0: 4\n]  # [1, 2, 3]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = 1  # 1\ndata1 = [\n    1\n    if a == 1:\n        2\n    elif a == 2:\n        3\n    else:\n        3\n]  # [1, 2]\ndata2 = [\n    1\n    if a == 1: 2\n    elif a == 2: 2\n    else: 3\n]  # [1, 2]\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u5408\u5e76(union)\u5217\u8868:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"_list0 = [1, 2, 3]\n_list1 = [4, 5, 6]\nunion_list = _list0 | _list1  # [4, 5, 6]\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"for k in list_var")," \u8868\u8fbe\u5f0f\u904d\u5386\u5217\u8868\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data = [1, 2, 3]\ndataAnother = [val * 2 for val in data]  # [2, 4, 6]\n")),(0,l.kt)("h4",{id:"dict"},"Dict"),(0,l.kt)("p",null,"Dict \u662f\u5c06\u53ef\u54c8\u5e0c\u7684\u503c\u6620\u5c04\u5230\u4efb\u610f\u5bf9\u8c61\u7684\u6620\u5c04\u5bf9\u8c61\u3002\u5b57\u5178\u662f\u6709\u5e8f\u7684\u3002\u952e\u7684\u987a\u5e8f\u9075\u5faa\u5176\u58f0\u660e\u7684\u987a\u5e8f\uff1a"),(0,l.kt)("p",null,"\u8fd9\u91cc\u6709\u51e0\u4e2a\u7b80\u5355\u7684 KCL \u5b57\u5178\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = {\"one\" = 1, \"two\" = 2, \"three\" = 3}\nb = {'one' = 1, 'two' = 2, 'three' = 3}\nassert a == b # True\nassert len(a) == 3 # True\n")),(0,l.kt)("p",null,"\u5728\u5199\u591a\u884c\u7684\u952e-\u503c\u65f6\uff0c\u53ef\u4ee5\u7701\u7565\u6bcf\u4e2a\u952e-\u503c\u5bf9\u884c\u5c3e\u7684\u9017\u53f7 ",(0,l.kt)("inlineCode",{parentName:"p"},","),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'data = {\n    "key1" = "value1"  # Ignore the comma \',\' at the end of line\n    "key2" = "value2"\n}  # {"key1": "value1", "key2": "value2"}\n')),(0,l.kt)("p",null,"\u5728 Dict \u952e\u4e0a\u4f7f\u7528\u7b80\u5355\u7684\u5b57\u9762\u503c\u65f6\u53ef\u4ee5\u7701\u7565\u5f15\u53f7\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'data = {\n    key1 = "value1"  # Ignore key quotation \'"\' \n    key2 = "value2"\n}  # {"key1": "value1", "key2": "value2"}\n')),(0,l.kt)("p",null,"\u6b64\u5916\uff0c",(0,l.kt)("strong",{parentName:"p"},"\u9009\u62e9\u8868\u8fbe\u5f0f"),"\u53ef\u4ee5\u7528\u4e8e\u5b9a\u4e49\u5305\u542b\u5d4c\u5957\u952e dict \u5b9e\u4f8b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'person = {\n    base.count = 2\n    base.value = "value"\n    labels.key = "value"\n}  # {"base": {"count": 2, "value": "value"}, "labels": {"key": "value"}}\n')),(0,l.kt)("p",null,"\u8f93\u51fa\u7684 YAML \u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"person:\n  base:\n    count: 2\n    value: value\n  labels:\n    key: value\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u63a8\u5bfc\u5f0f\u6784\u5efa\u5b57\u5178\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'x = {str(i): 2 * i for i in range(3)}\nassert x == {"0" = 0, "1" = 2, "2" = 4}\n')),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5b57\u5178\u63a8\u5bfc\u5f0f\u4e2d\u4f7f\u7528\u4e24\u4e2a\u53d8\u91cf\u3002\u7b2c\u4e00\u4e2a\u53d8\u91cf\u8868\u793a\u5b57\u5178\u7684\u952e\uff0c\u7b2c\u4e8c\u4e2a\u53d8\u91cf\u8868\u793a\u5b57\u5178\u4e2d\u952e\u5bf9\u5e94\u7684\u503c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'data = {key1 = "value1", key2 = "value2"}\n# Single variable loop\ndataKeys1 = {k: k for k in data}  # {"key1": "key1", "key2": "key2"}\ndataValues1 = {k: data[k] for k in data}  # {"key1": "value1", "key2": "value2"}\n# Double variable loop\ndataKeys2 = {k: k for k, v in data}  # {"key1": "key1", "key2": "key2"}\ndataValues2 = {v: v for k, v in data}  # {"value1": "value1", "value2": "value2"}\ndataFilter = {k: v for k, v in data if k == "key1" and v == "value1"}  # {"key1": "value1"}\n# Use `_` to ignore loop variables\ndataKeys3 = {k: k for k, _ in data}  # {"key1": "key1", "key2": "key2"}\ndataValues3 = {v: v for _, v in data}  # {"value1": "value1", "value2": "value2"}\n')),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u89e3\u5305\u64cd\u4f5c\u7b26 ",(0,l.kt)("inlineCode",{parentName:"p"},"**")," \u6765\u5408\u5e76\u5b57\u5178\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'_part1 = {\n    a = "b"\n}\n\n_part2 = {\n    c = "d"\n}\n\na_dict = {**_part1, **_part2}  # {"a: "b", "c": "d"}\n')),(0,l.kt)("p",null,"\u6b64\u5916\uff0cunion \u64cd\u4f5c\u7b26 ",(0,l.kt)("inlineCode",{parentName:"p"},"|")," \u4e5f\u80fd\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'_part1 = {\n    a = "b"\n}\n\n_part2 = {\n    c = "d"\n}\n\na_dict = _part1 | _part2  # {"a: "b", "c": "d"}\n')),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"if")," \u8868\u8fbe\u5f0f\u52a8\u6001\u7684\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u5b57\u5178\uff0c\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u4f1a\u88ab\u6dfb\u52a0\u5230\u5b57\u5178\uff0c\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u4f1a\u88ab\u5ffd\u7565\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = 1  # 1\ndata = {\n    key1 = "value1"\n    if a == 1: key2 = "value2"\n    if a > 0: key3 = "value3"\n    if a < 0: key4 = "value4"\n}  # {"key1": "value1", "key2": "value2", "key3": "value3"}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = 1  # 1\ndata1 = {\n    key1 = "value1"\n    if a == 1:\n        key2 = "value2"\n    elif a > 0:\n        key3 = "value3"\n    else:\n        key4 = "value4"\n}  # {"key1": "value1", "key2": "value2"}\ndata2 = {\n    key1 = "value1"\n    if a == 1: key2 = "value2"\n    elif a > 0: key3 = "value3"\n    else: key4 = "value4"\n}  # {"key1": "value1", "key2": "value2"}\n')),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"for k in dict_var")," \u8868\u8fbe\u5f0f\u6765\u904d\u5386\u5b57\u5178, \u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"in")," \u64cd\u4f5c\u7b26\u6765\u5224\u65ad dict \u662f\u5426\u5305\u542b\u67d0\u4e2a\u952e\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'data = {key1 = "value1", key2 = "value2"}\ndataAnother = {k: data[k] + "suffix" for k in data}  # {"key1": "value1suffix", "key2": "value2suffix"}\ncontainsKey1 = "key1" in data  # True\ncontainsKey2 = "key" in data  # False\n')),(0,l.kt)("h4",{id:"none"},"None"),(0,l.kt)("p",null,"\u5728 KCL \u4e2d, ",(0,l.kt)("inlineCode",{parentName:"p"},"None")," \u8868\u793a\u5bf9\u8c61\u7684\u503c\u4e3a\u7a7a\uff0c \u8fd9\u4e0e Go \u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"nil")," \u548c Java \u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," \u4e00\u6837\uff0c\u5e76\u4e14\u5bf9\u5e94\u4e8e YAML \u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = None\nb = [1, 2, None]\nc = {key1 = "value1", key2 = None}\n')),(0,l.kt)("p",null,"\u8f93\u51fa\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"a: null\nb:\n- 1\n- 2\n- null\nc:\n  key1: value1\n  key2: null\n")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"None")," \u4e0d\u80fd\u53c2\u4e0e\u56db\u5219\u8fd0\u7b97\uff0c\u4f46\u5b83\u53ef\u4ee5\u53c2\u4e0e\u903b\u8f91\u8fd0\u7b97\u548c\u6bd4\u8f83\u8fd0\u7b97\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = 1 + None  # error\nb = int(None)  # error\nc = not None  # True\nd = None == None  # True\ne = None or 1  # 1\nf = str(None)  # None\n")),(0,l.kt)("h4",{id:"undefined"},"Undefined"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Undefined")," \u4e0e ",(0,l.kt)("inlineCode",{parentName:"p"},"None")," \u7c7b\u4f3c\uff0c\u4f46\u5176\u8bed\u4e49\u662f\u53d8\u91cf\u6ca1\u6709\u5206\u914d\u4efb\u4f55\u503c\uff0c\u4e5f\u4e0d\u4f1a\u8f93\u51fa\u5230 YAML\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = Undefined\nb = [1, 2, Undefined]\nc = {key1 = "value1", key2 = Undefined}\n')),(0,l.kt)("p",null,"\u8f93\u51fa\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"b:\n- 1\n- 2\nc:\n  key1: value1\n")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"Undefined")," \u4e0d\u80fd\u53c2\u4e0e\u56db\u5219\u8fd0\u7b97\uff0c\u4f46\u5b83\u53ef\u4ee5\u53c2\u4e0e\u903b\u8f91\u8fd0\u7b97\u548c\u6bd4\u8f83\u8fd0\u7b97\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = 1 + Undefined  # error\nb = int(Undefined)  # error\nc = not Undefined  # True\nd = Undefined == Undefined  # True\ne = Undefined or 1  # 1\nf = str(Undefined)  # Undefined\n")),(0,l.kt)("h3",{id:"\u8fd0\u7b97\u7b26"},"\u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u5b57\u7b26\u8868\u793a\u8fd0\u7b97\u7b26\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"    +       -       *       **      /       //      %\n    <<      >>      &       |       ^       <       >\n    ~       <=      >=      ==      !=      @       \\\n")),(0,l.kt)("h4",{id:"\u7b97\u6570\u8fd0\u7b97\u7b26"},"\u7b97\u6570\u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"KCL \u652f\u6301\u5e38\u89c1\u7684\u7b97\u6570\u8fd0\u7b97\u7b26\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"assert 2 + 3 == 5\nassert 2 - 3 == -1\nassert 2 * 3 == 6\nassert 5 / 2 == 2.5\nassert 5 // 2 == 2\nassert 5 % 2 == 1\n")),(0,l.kt)("h4",{id:"\u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26"},"\u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"KCL \u652f\u6301\u76f8\u7b49\u548c\u5173\u7cfb\u8fd0\u7b97\u7b26\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"assert 2 == 2\nassert 2 != 3\nassert 3 > 2\nassert 2 < 3\nassert 3 >= 3\nassert 2 <= 3\n")),(0,l.kt)("h4",{id:"\u903b\u8f91\u8fd0\u7b97\u7b26"},"\u903b\u8f91\u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u903b\u8f91\u8fd0\u7b97\u7b26\u53cd\u8f6c\u6216\u7ec4\u5408\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"and")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"or"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"if not done and (col == 0 or col == 3):\n  # ...Do something...\n\n")),(0,l.kt)("h4",{id:"\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26"},"\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u662f\u4f4d\u8fd0\u7b97\u7b26\u548c\u79fb\u4f4d\u8fd0\u7b97\u7b26\u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"value = 0x22\nbitmask = 0x0f\n\nassert (value & bitmask) == 0x02\nassert (value & ~bitmask) == 0x20\nassert (value | bitmask) == 0x2f\nassert (value ^ bitmask) == 0x2d\nassert (value << 4) == 0x220\nassert (value >> 4) == 0x02\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"|")," \u8fd0\u7b97\u7b26\u53ef\u7528\u4e8e\u4f4d\u8fd0\u7b97\uff0c\u5408\u5e76\u57fa\u672c\u7c7b\u578b\u548c\u96c6\u5408\u53ca\u7ed3\u6784\u5316\u6570\u636e\uff0c\u4f8b\u5982",(0,l.kt)("strong",{parentName:"p"},"\u5217\u8868"),"\u3001",(0,l.kt)("strong",{parentName:"p"},"\u5b57\u5178"),"\u548c ",(0,l.kt)("strong",{parentName:"p"},"schema"),"\u3002"),(0,l.kt)("p",null,"\u4f4d\u8fd0\u7b97\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"0x12345678 | 0xFF  # 0x123456FF\n")),(0,l.kt)("p",null,"\u8054\u5408\u57fa\u672c\u7c7b\u578b\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema x:\n    a: int | str  # attribute a could be a int or string\n")),(0,l.kt)("h4",{id:"\u8d4b\u503c\u8fd0\u7b97\u7b26"},"\u8d4b\u503c\u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"\u4ee5\u4e0b token \u4f5c\u4e3a\u8bed\u6cd5\u4e2d\u7684\u5206\u9694\u7b26\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"    (       )       [       ]       {       }\n    ,       :       .       ;       =       ->\n    +=      -=      *=      /=      //=     %=\n    &=      ^=      >>=     <<=     **=\n")),(0,l.kt)("p",null,"\u4ee5\u4e0b\u662f\u4f7f\u7528\u8d4b\u503c\u548c\u53c2\u6570\u8d4b\u503c\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"_a = 2\n_a *= 3\n_a += 1\nassert _a == 7\n")),(0,l.kt)("h4",{id:"identity-\u8fd0\u7b97\u7b26"},"Identity \u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u5173\u952e\u5b57\u4f5c\u4e3a\u8bed\u6cd5\u4e2d\u7684 identity \u8fd0\u7b97\u7b26\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"is, is not\n")),(0,l.kt)("p",null,"Identity \u8fd0\u7b97\u7b26\u68c0\u67e5\u53f3\u4fa7\u548c\u5de6\u4fa7\u662f\u5426\u65f6\u540c\u4e00\u5bf9\u8c61\u3002\u5b83\u4eec\u901a\u5e38\u7528\u4e8e\u68c0\u67e5\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"None/Undefined/True/False"),"\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'empty_String = ""\nempty_String is not None # True\n')),(0,l.kt)("h4",{id:"\u6210\u5458\u8fd0\u7b97\u7b26"},"\u6210\u5458\u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u5173\u952e\u5b57\u4f5c\u4e3a\u8bed\u6cd5\u4e2d\u7684\u6210\u5458\u8fd0\u7b97\u7b26\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"in, not in\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"in")," \u8fd0\u7b97\u7b26\u8ba1\u7b97\u4e86\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u662f\u5426\u662f\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u7684\u6210\u5458\uff0c\u7b2c\u4e8c\u4e2a\u8fd0\u7b97\u7b26\u5fc5\u987b\u662f list\u3001dict\u3001schema \u6216 string\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"not in")," \u8fd0\u7b97\u7b26\u4e0e ",(0,l.kt)("inlineCode",{parentName:"li"},"in")," \u76f8\u53cd\u3002\u5b83\u4eec\u90fd\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\u3002")),(0,l.kt)("p",null,"\u6210\u5458\u7684\u542b\u4e49\u56e0\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u7684\u7c7b\u578b\u800c\u5f02\uff1a\u5217\u8868\u7684\u6210\u5458\u662f\u5176\u5143\u7d20\uff1b\u5b57\u5178\u7684\u6210\u5458\u662f\u5176\u952e\uff1b\u5b57\u7b26\u4e32\u7684\u6210\u5458\u662f\u5176\u6240\u6709\u5b50\u5b57\u7b26\u4e32\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'1 in [1, 2, 3]                  # True\n\nd = {one = 1, two = 2}\n"one" in d                      # True\n"three" in d                    # False\n1 in d                          # False\n[] in d                         # False\n\n"nasty" in "dynasty"            # True\n"a" in "banana"                 # True\n"f" not in "way"                # True\n\nd = Data {one = 1, two = 2}     # Data is a schema with attributes one and two\n"one" in d                      # True\n"three" in d                    # False\n')),(0,l.kt)("h4",{id:"\u63a8\u5bfc\u5f0f"},"\u63a8\u5bfc\u5f0f"),(0,l.kt)("p",null,"\u4e00\u4e2a\u63a8\u5bfc\u8868\u8fbe\u5f0f\u901a\u8fc7\u904d\u5386\u4e00\u4e2a\u6216\u591a\u4e2a\u8fed\u4ee3\u9879\u5e76\u8ba1\u7b97\u8868\u8fbe\u5f0f\u751f\u6210\u7684\u7ed3\u679c\u6765\u751f\u6210\u8fde\u7eed\u7684\u5143\u7d20\uff0c\u5e76\u4ee5\u6b64\u6784\u9020\u65b0\u7684\u5217\u8868\u6216\u5b57\u5178\u3002"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u5982\u4e0b\u4f7f\u7528\u5217\u8868\u548c\u5b57\u5178\u7684\u63a8\u5bfc\u8868\u8fbe\u5f0f\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"listVar = [_x for _x in range(20) if _x % 2 == 0] # list comprehension\ndictVar = {str(_i): 2*_i for _i in range(3)} # dict comprehension\n")),(0,l.kt)("h4",{id:"\u5176\u4ed6\u8fd0\u7b97\u7b26"},"\u5176\u4ed6\u8fd0\u7b97\u7b26"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 ",(0,l.kt)("strong",{parentName:"li"},"()")," \u8868\u793a\u51fd\u6570\u8c03\u7528, \u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"li"},'"{} {}".format("hello", world)'),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 ",(0,l.kt)("strong",{parentName:"li"},"[]")," \u5f15\u7528\u5217\u8868\u4e2d\u6307\u5b9a\u7d22\u5f15\u5904\u7684\u503c\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 ",(0,l.kt)("strong",{parentName:"li"},":")," \u5b9a\u4e49\u7c7b\u578b\u6ce8\u89e3\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 ",(0,l.kt)("strong",{parentName:"li"},".")," \u5f15\u7528\u6210\u5458\u5b57\u6bb5\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 ",(0,l.kt)("strong",{parentName:"li"},"\\")," \u7eed\u884c\u7b26\u7f16\u5199\u957f\u8868\u8fbe\u5f0f\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'longString = "Too long expression " + \\\n             "Too long expression " + \\\n             "Too long expression "\n')),(0,l.kt)("h3",{id:"\u8868\u8fbe\u5f0f"},"\u8868\u8fbe\u5f0f"),(0,l.kt)("h4",{id:"\u6761\u4ef6\u8868\u8fbe\u5f0f"},"\u6761\u4ef6\u8868\u8fbe\u5f0f"),(0,l.kt)("p",null,"\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"a if cond else b"),"\u3002\u5b83\u9996\u5148\u8ba1\u7b97\u6761\u4ef6 ",(0,l.kt)("inlineCode",{parentName:"p"},"cond"),"\u3002\u5982\u679c\u4e3a\u771f\uff0c\u5219\u4f1a\u8ba1\u7b97 ",(0,l.kt)("inlineCode",{parentName:"p"},"a")," \u5e76\u751f\u6210\u5b83\u7684\u503c\uff1b\u5426\u5219\uff0c\u5b83\u4f1a\u751f\u6210 ",(0,l.kt)("inlineCode",{parentName:"p"},"b")," \u7684\u503c\u3002"),(0,l.kt)("p",null,"\u793a\u4f8b:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"x = True if enabled else False  # If enabled is True, x is True, otherwise x is False\n")),(0,l.kt)("h4",{id:"\u7d22\u5f15\u8868\u8fbe\u5f0f"},"\u7d22\u5f15\u8868\u8fbe\u5f0f"),(0,l.kt)("p",null,"\u7d22\u5f15\u8868\u8fbe\u5f0f ",(0,l.kt)("inlineCode",{parentName:"p"},"a[i]")," \u751f\u6210\u53ef\u7d22\u5f15\u7c7b\u578b\u7684\u7b2c ",(0,l.kt)("inlineCode",{parentName:"p"},"i")," \u4e2a\u5143\u7d20\uff0c\u4f8b\u5982\u5b57\u7b26\u4e32\u6216\u6570\u7ec4\u3002\u7d22\u5f15 ",(0,l.kt)("inlineCode",{parentName:"p"},"i")," \u5fc5\u987b\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"-n")," \u2264 ",(0,l.kt)("inlineCode",{parentName:"p"},"i")," < ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," \u8303\u56f4\u5185\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"int")," \u503c\uff0c\u5176\u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," \u7b49\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"len(a)"),"\u3002\u5176\u4ed6\u4efb\u4f55\u7d22\u5f15\u90fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002"),(0,l.kt)("p",null,"\u6709\u6548\u7684\u8d1f\u7d22\u5f15\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"n+i"),"\uff0c\u5141\u8bb8\u65b9\u4fbf\u7684\u5bf9\u5e8f\u5217\u672b\u5c3e\u8fdb\u884c\u7d22\u5f15\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'val = "abc"\nlist = ["zero", "one", "two"]\nstr_0 = val[0]         # "a"\nstr_1 = val[1]         # "b"\nstr_n1 = val[-1]       # "c"\n\nlist_0 = list[0]       # "zero"\nlist_1 = list[1]       # "one"\nlist_n1 = list[-1]     # "two"\n')),(0,l.kt)("p",null,"\u7d22\u5f15\u8868\u8fbe\u5f0f ",(0,l.kt)("inlineCode",{parentName:"p"},"d[key]")," \u4e5f\u53ef\u4ee5\u7528\u4e8e\u5b57\u5178 ",(0,l.kt)("inlineCode",{parentName:"p"},"d"),"\uff0c\u4ee5\u83b7\u53d6\u6307\u5b9a\u952e\u5bf9\u5e94\u7684\u503c\u3002\u5982\u679c\u5b57\u5178\u4e2d\u4e0d\u5305\u542b\u8fd9\u4e2a\u952e\u5219\u4f1a\u8fd4\u56de ",(0,l.kt)("inlineCode",{parentName:"p"},"Undefined")),(0,l.kt)("p",null,"\u51fa\u73b0\u5728\u8d4b\u503c\u7b26\u5de6\u4fa7\u7684\u7d22\u5f15\u8868\u8fbe\u5f0f\u4f1a\u66f4\u65b0\u6307\u5b9a\u7684\u5217\u8868\u6216\u5b57\u5178\u5143\u7d20\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'d = {key1 = "value1", key2 = "value2"}\nkey1value = d["key1"]  # value1\nkey2value = d["key2"]  # value2\n')),(0,l.kt)("p",null,"\u5c1d\u8bd5\u66f4\u65b0\u4e0d\u53ef\u53d8\u7c7b\u578b\u7684\u5143\u7d20\u503c\uff08\u5982\u5217\u8868\u6216\u5b57\u7b26\u4e32\uff09\u6216\u53ef\u53d8\u7c7b\u578b\u7684\u4e0d\u53ef\u53d8\u53d8\u91cf\u4f1a\u4ea7\u751f\u9519\u8bef\u3002"),(0,l.kt)("h4",{id:"\u5207\u7247\u8868\u8fbe\u5f0f"},"\u5207\u7247\u8868\u8fbe\u5f0f"),(0,l.kt)("p",null,"\u5207\u7247\u8868\u8fbe\u5f0f ",(0,l.kt)("inlineCode",{parentName:"p"},"a[start:stop:step]")," \u4f1a\u751f\u6210 ",(0,l.kt)("inlineCode",{parentName:"p"},"a")," \u5305\u542b\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u5176\u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"a")," \u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u6216\u8005\u6570\u7ec4\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"start"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"stop")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"step")," \u4e09\u4e2a\u64cd\u4f5c\u6570\u90fd\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u6bcf\u4e2a\u503c\u90fd\u5fc5\u987b\u4e3a\u6574\u6570\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"step")," \u7684\u9ed8\u8ba4\u503c\u4e3a 1\u3002\u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"p"},"step")," \u672a\u6307\u5b9a\uff0c\u5b83\u524d\u9762\u7684\u5192\u53f7\u4e5f\u53ef\u4ee5\u7701\u7565\u3002\u6307\u5b9a ",(0,l.kt)("inlineCode",{parentName:"p"},"step")," \u4e3a 0 \u4f1a\u4ea7\u751f\u9519\u8bef\u3002"),(0,l.kt)("p",null,"\u4ece\u6982\u5ff5\u4e0a\u6765\u8bf4\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u6570\u6307\u5b9a\u4e86\u4e00\u7cfb\u5217\u503c\uff0c\u7d22\u5f15 ",(0,l.kt)("inlineCode",{parentName:"p"},"i")," \u4ece ",(0,l.kt)("inlineCode",{parentName:"p"},"start")," \u5f00\u59cb\uff0c\u6bcf\u6b21\u589e\u52a0 ",(0,l.kt)("inlineCode",{parentName:"p"},"step")," \u76f4\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"i")," \u5230\u8fbe\u6216\u8d85\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"stop"),"\u3002\u7ed3\u679c\u7531\u6709\u6548\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"i")," \u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"a[i]")," \u7ec4\u6210\u3002"),(0,l.kt)("p",null,"\u5982\u4e0b\u6240\u793a\uff0c\u4ece\u4e09\u4e2a\u64cd\u4f5c\u6570\u8ba1\u7b97\u6709\u6548\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u7d22\u5f15\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"n")," \u662f\u5e8f\u5217\u7684\u957f\u5ea6\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'val = "abc"\nlen = len(val)\na = val[1:len]         # "bc"  (remove first element)\nb = val[0:-1]          # "ab"  (remove last element)\nc = val[1:-1]          # "b"   (remove first and last element)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'"abc"[1:]               # "bc"  (remove first element)\n"abc"[:-1]              # "ab"  (remove last element)\n"abc"[1:-1]             # "b"   (remove first and last element)\n"banana"[1::2]          # "aaa" (select alternate elements starting at index 1)\n"banana"[4::-2]         # "nnb" (select alternate elements in reverse, starting at index 4)\n')),(0,l.kt)("p",null,"KCL \u7981\u6b62\u5c06\u5207\u7247\u8868\u8fbe\u5f0f\u5b9a\u4e49\u4e3a\u5de6\u503c\u3002\u539f\u56e0\u662f\u5217\u8868\u548c\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u91cd\u65b0\u5207\u7247\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u64cd\u4f5c\u6570\uff0c\u4ee5\u786e\u4fdd\u66f4\u597d\u7684\u6027\u80fd\u3002"),(0,l.kt)("h4",{id:"\u51fd\u6570\u8c03\u7528"},"\u51fd\u6570\u8c03\u7528"),(0,l.kt)("p",null,"KCL \u5141\u8bb8\u8c03\u7528\u5185\u7f6e\u51fd\u6570\uff0c\u6216\u8005\u8c03\u7528\u5185\u7f6e\u548c\u7cfb\u7edf\u6a21\u5757\u4e2d\u7684\u51fd\u6570\u3002"),(0,l.kt)("p",null,"\u8c03\u7528\u51fd\u6570\u7684\u57fa\u672c\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import math\n\na = math.pow(2, 3)  # 2 powers 3 is 8.\nb = len([1, 2, 3])  # the length of [1, 2, 3] is 3\n")),(0,l.kt)("p",null,"\u53c2\u6570\u4ee5 ",(0,l.kt)("inlineCode",{parentName:"p"},",")," \u5206\u9694\uff0c\u5e76\u4e14 KCL \u8fd8\u652f\u6301\u4f4d\u7f6e\u53c2\u6570\u548c\u952e-\u503c\u5bf9\u5f62\u5f0f\u7684\u53c2\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'print("hello world", end="")\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6709\u4e9b\u51fd\u6570\u53c2\u6570\u5177\u6709\u9ed8\u8ba4\u503c\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e9b\u51fd\u6570\u63a5\u53d7\u53ef\u53d8\u53c2\u6570\u3002")),(0,l.kt)("p",null,"\u5982\u679c\u6ca1\u6709\u4e3a\u6ca1\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u63d0\u4f9b\u53c2\u6570\uff0c\u5219\u4f1a\u629b\u51fa\u9519\u8bef\u3002"),(0,l.kt)("h4",{id:"\u9009\u62e9\u8868\u8fbe\u5f0f"},"\u9009\u62e9\u8868\u8fbe\u5f0f"),(0,l.kt)("p",null,"\u9009\u62e9\u8868\u8fbe\u5f0f\u9009\u62e9\u503c\u7684\u5c5e\u6027\u6216\u65b9\u6cd5\u3002KCL \u63d0\u4f9b\u4e86\u8bb8\u591a\u8bc6\u522b\u6216\u8fc7\u6ee4\u5c5e\u6027\u7684\u65b9\u6cd5\uff1a"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"x.y")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"dict: \u8868\u793a\u5b57\u5178 ",(0,l.kt)("inlineCode",{parentName:"li"},"x")," \u4e2d\u952e ",(0,l.kt)("inlineCode",{parentName:"li"},"y")," \u5bf9\u5e94\u7684\u503c\u3002"),(0,l.kt)("li",{parentName:"ul"},"schema: \u8868\u793a schema ",(0,l.kt)("inlineCode",{parentName:"li"},"x")," \u4e2d ",(0,l.kt)("inlineCode",{parentName:"li"},"y")," \u5c5e\u6027\u7684\u503c\u3002"),(0,l.kt)("li",{parentName:"ul"},"package: \u8868\u793a package ",(0,l.kt)("inlineCode",{parentName:"li"},"x")," \u4e2d ",(0,l.kt)("inlineCode",{parentName:"li"},"y")," \u6807\u793a\u7684\u6807\u8bc6\u7b26\u3002")),(0,l.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Person:\n    name: str\n    age: int\n\nperson = Person {\n    name = "Alice"\n    age = 18\n}\nname = person.name  # "Alice"\nage = person.age  # 18\n\nmyDict = {\n    key = "value"\n}\nresult = myDict.key # "value"\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"x?.y")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"x")," \u53ef\u4ee5\u662f schema \u5b9e\u4f8b\u6216 dict\u3002\u5f53 ",(0,l.kt)("inlineCode",{parentName:"p"},"x")," \u53ef\u80fd\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"None")," \u6216\u8005\u952e ",(0,l.kt)("inlineCode",{parentName:"p"},"y")," \u4e0d\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"x")," \u4e2d\u65f6\u8fd9\u975e\u5e38\u6709\u7528\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# Example of dict:\ndata = {"key" = "value"}\na = data?.key     # "value"\nb = data?.name    # Undefined\n\n# example of schema instance:\nschema Company:\n    name: str\n    address: str\n\nschema Person:\n    name: str\n    job?: Company\n        \nalice = Person {\n    name = "alice"\n}\n\nif alice?.job?.name == "Group":\n    print("work in Group")\n')),(0,l.kt)("h4",{id:"quantifier-\u8868\u8fbe\u5f0f"},"Quantifier \u8868\u8fbe\u5f0f"),(0,l.kt)("p",null,"Quantifier \u8868\u8fbe\u5f0f\u7528\u4e8e\u96c6\u5408\uff1a\u5217\u8868\u6216\u5b57\u5178\u3002\u901a\u5e38\u7528\u4e8e\u5728\u5904\u7406\u96c6\u5408\u540e\u83b7\u5f97\u67d0\u4e2a\u7ed3\u679c\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u56db\u79cd\u5f62\u5f0f\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"all"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u68c0\u6d4b\u96c6\u5408\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u6ee1\u8db3\u7ed9\u5b9a\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\u4f5c\u4e3a\u7ed3\u679c\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ea\u6709\u96c6\u5408\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u6ee1\u8db3\u8868\u8fbe\u5f0f\u4e3a true \u65f6\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"all")," \u8868\u8fbe\u5f0f\u4e3a true\uff0c\u5426\u5219\u4e3a false\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u96c6\u5408\u4e3a\u7a7a\uff0c\u8fd4\u56de true\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301\u8868\u8fbe\u5f0f\u6267\u884c\u671f\u95f4\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u77ed\u8def\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"any"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u7528\u4e8e\u68c0\u6d4b\u96c6\u5408\u4e2d\u81f3\u5c11\u4e00\u4e2a\u5143\u7d20\u90fd\u6ee1\u8db3\u7ed9\u5b9a\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\u4f5c\u4e3a\u7ed3\u679c\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u96c6\u5408\u4e2d\u81f3\u5c11\u4e00\u4e2a\u5143\u7d20\u90fd\u6ee1\u8db3\u8868\u8fbe\u5f0f\u4e3a true \u65f6\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"any")," \u8868\u8fbe\u5f0f\u4e3a true\uff0c\u5426\u5219 false\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u96c6\u5408\u4e3a\u7a7a\uff0c\u8fd4\u56de false\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301\u8868\u8fbe\u5f0f\u6267\u884c\u671f\u95f4\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u77ed\u8def\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"map"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6620\u5c04\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u751f\u6210\u65b0\u7684\u5217\u8868\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u65b0\u5217\u8868\u7684\u957f\u5ea6\u4e25\u683c\u7b49\u4e8e\u539f\u5217\u8868\u7684\u957f\u5ea6\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"filter"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u903b\u8f91\u5224\u65ad\u7b5b\u9009\u539f\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u8fd4\u56de\u4e00\u4e2a\u7ecf\u8fc7\u7b5b\u9009\u7684\u5b50\u96c6\u5408\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u8868\u8fbe\u5f0f\u4e3a true \u65f6\u624d\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u5b50\u96c6\u5408\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4ea7\u751f\u7684\u65b0\u96c6\u5408\u7684\u7c7b\u578b(list, dict \u548c schema)\u4e0e\u539f\u96c6\u5408\u7684\u7c7b\u578b\u5b8c\u5168\u4e00\u81f4\uff0c\u5e76\u4e14\u957f\u5ea6\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"[0, len(original-collection)]"),"\u3002")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"all")," \u548c ",(0,l.kt)("strong",{parentName:"p"},"any")," \u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\u4ee3\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Config:\n    volumes: [{str:}]\n    services: [{str:}]\n\n    check:\n        all service in services {\n            service.clusterIP == "NONE" if service.type == "ClusterIP"\n        }, "invalid cluster ip"\n\n        any volume in volumes {\n            volume.mountPath in ["/home/admin", "/home/myapp"]\n        }\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"map")," \u548c ",(0,l.kt)("strong",{parentName:"p"},"filter")," \u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\u4ee3\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = map e in [{name = "1", value = 1}, {name = "2", value = 2}] {\n    {name = e.name, value = int(e.value) ** 2}\n}  # [{"name": "1", value: 1}, {"name": "2", "value": 4}]\n\nb = map k, v in {a = "foo", b = "bar"} { v }  # ["foo", "bar"]\n\nc = filter e in [{name = "1", value = 1}, {name = "2", value = 2}] {\n    int(e.value) > 1\n}  # [{"name": "2", "value": 2}]\n\nd = filter _, v in {a = "foo", b = "bar"} {\n    v == "foo"\n}  # {"a": "foo"}\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u533a\u5206 any \u8868\u8fbe\u5f0f\u548c any \u7c7b\u578b\u7684\u533a\u522b\u3002\u5f53 ",(0,l.kt)("inlineCode",{parentName:"p"},"any")," \u5728\u7c7b\u578b\u6ce8\u89e3\u4e2d\u4f7f\u7528\uff0c\u610f\u5473\u7740\u53d8\u91cf\u7684\u503c\u662f\u4efb\u610f\u7684\uff0c\u800c any \u8868\u8fbe\u5f0f\u610f\u5473\u7740\u96c6\u5408\u4e2d\u7684\u81f3\u5c11\u4e00\u4e2a\u5143\u7d20\u6ee1\u8db3\u6761\u4ef6\u3002"),(0,l.kt)("h3",{id:"\u6d41\u7a0b\u63a7\u5236\u8868\u8fbe\u5f0f"},"\u6d41\u7a0b\u63a7\u5236\u8868\u8fbe\u5f0f"),(0,l.kt)("h4",{id:"if-\u548c-else"},"If \u548c Else"),(0,l.kt)("p",null,"KCL \u652f\u6301 ",(0,l.kt)("inlineCode",{parentName:"p"},"if")," \u8868\u8fbe\u5f0f\u548c\u53ef\u9009\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"elif")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"else")," \u8868\u8fbe\u5f0f, \u793a\u4f8b\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = 10\nif a == 0:\n    print("a is zero")\nelif a < 100:\n    print("a < 100")\n    print("maybe a is negative")\nelse:\n    print("a >= 100")\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"elif")," \u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'_result = 0\nif condition == "one":\n    _result = 1\nelif condition == "two":\n    _result = 2\nelif condition == "three":\n    _result = 3\nelse:\n    _result = 4\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"if-elif-else")," \u8868\u8fbe\u5f0f\u53ef\u4ee5\u5d4c\u5957\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = 10\nif a == 0:\n    print("a is zero")\nelif a < 100:\n    print("a < 100")\n    if a < 0:\n        print("a is negative")\n    print("No matter a is negative or positive, this message is printed")\nelse:\n    print("a >= 100")\n')),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u5bf9\u4e8e\u7b80\u5355\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"if")," \u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'if success:\n    _result = "success"\nelse:\n    _result = "failed"\n')),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"<expr> if <condition> else <expr>")," \u7684\u5f62\u5f0f\u5c06\u5b83\u4eec\u5199\u5728\u4e00\u884c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'_result = "success" if success else "failed"\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"if")," \u6216 ",(0,l.kt)("inlineCode",{parentName:"p"},"elif")," \u8bed\u53e5\u8ba1\u7b97\u4e00\u4e2a\u7ed9\u5b9a\u7684\u8868\u8fbe\u5f0f\u3002\u5f53\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"True"),",  ",(0,l.kt)("inlineCode",{parentName:"p"},":")," \u4e4b\u540e\u7684\u8bed\u53e5\u5c06\u88ab\u8ba1\u7b97\uff0c\u800c\u5f53\u8868\u8fbe\u5f0f\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"False")," \uff0c\u540e\u9762\u7684\u8bed\u53e5\u4e0d\u4f1a\u88ab\u8ba1\u7b97\u3002"),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u5e38\u91cf ",(0,l.kt)("inlineCode",{parentName:"p"},"False"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),", \u6570\u5b57 ",(0,l.kt)("inlineCode",{parentName:"p"},"0"),", \u7a7a\u5217\u8868 ",(0,l.kt)("inlineCode",{parentName:"p"},"[]"),", \u7a7a\u5b57\u5178 ",(0,l.kt)("inlineCode",{parentName:"p"},"{}")," \u548c\u7a7a\u5b57\u7b26\u4e32 ",(0,l.kt)("inlineCode",{parentName:"p"},'""')," \u90fd\u88ab\u89c6\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"False")," \u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'_emptyStr = ""\n_emptyList = []\n_emptyDict = {}\nisEmptyStr = False if _emptyStr else True\nisEmptyList = False if _emptyList else True\nisEmptyDict = False if _emptyDict else True\n')),(0,l.kt)("p",null,"\u7ed3\u679c\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"isEmptyStr: true\nisEmptyList: true\nisEmptyDict: true\n")),(0,l.kt)("h3",{id:"\u65ad\u8a00\u8bed\u53e5"},"\u65ad\u8a00\u8bed\u53e5"),(0,l.kt)("p",null,"\u5f53\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u5e94\u8be5\u80fd\u591f\u68c0\u6d4b\u5230\u9519\u8bef\u5e76\u7ec8\u6b62\u6267\u884c\u3002\u56e0\u6b64\uff0cKCL \u5f15\u5165\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"assert")," \u8bed\u6cd5\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = 1\nb = 3\n# a != b evaluates to True, therefore no error should happen.\nassert a != b\n# a == b is False, in the reported error message, the message "SOS" should be printed.\nassert a == b, "SOS"\n')),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a assert \u8bed\u58f0\u660e\u4e00\u4e2a\u6761\u4ef6\uff0c\u5f53\u6761\u4ef6\u6ee1\u8db3\u65f6\uff0c\u624d\u8fdb\u884c assert \u65ad\u8a00"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 if \u8bed\u53e5\u4e66\u5199\u6761\u4ef6\u65ad\u8a00")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = None\nif a:\n    assert a > 2:\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 if \u8868\u8fbe\u5f0f\u4e66\u5199\u6761\u4ef6\u65ad\u8a00")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = None\nassert a > 2 if a\n")),(0,l.kt)("h3",{id:"\u51fd\u6570"},"\u51fd\u6570"),(0,l.kt)("p",null,"KCL \u652f\u6301\u4f7f\u7528 lambda \u5173\u952e\u5b57\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"func = lambda x: int, y: int -> int {\n    x + y\n}\na = func(1, 1)  # 2\n")),(0,l.kt)("p",null,"lambda \u51fd\u6570\u5177\u6709\u5982\u4e0b\u7279\u6027\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"lambda \u51fd\u6570\u5c06\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u7a7a\u51fd\u6570\u4f53\u8fd4\u56de None"),(0,l.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u503c\u7c7b\u578b\u6ce8\u89e3\u53ef\u4ee5\u7701\u7565\uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u503c\u7684\u7c7b\u578b"),(0,l.kt)("li",{parentName:"ul"},"\u51fd\u6570\u4f53\u4e2d\u6ca1\u6709\u4e0e\u987a\u5e8f\u65e0\u5173\u7684\u7279\u6027\uff0c\u6240\u6709\u7684\u8868\u8fbe\u5f0f\u90fd\u662f\u6309\u987a\u5e8f\u6267\u884c\u7684")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"_func = lambda x: int, y: int -> int {\n    x + y\n}  # Define a function using the lambda expression\n_func = lambda x: int, y: int -> int {\n    x - y\n}  # Ok\n_func = lambda x: int, y: int -> str {\n    str(x + y)\n}  # Error (int, int) -> str can't be assigned to (int, int) -> int\n")),(0,l.kt)("p",null,"lambda \u51fd\u6570\u5bf9\u8c61\u4e0d\u80fd\u53c2\u4e0e\u4efb\u4f55\u8ba1\u7b97\uff0c\u53ea\u80fd\u5728\u8d4b\u503c\u8bed\u53e5\u548c\u8c03\u7528\u8bed\u53e5\u4e2d\u4f7f\u7528\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"func = lambda x: int, y: int -> int {\n    x + y\n}\nx = func + 1  # Error: unsupported operand type(s) for +: 'function' and 'int(1)'\n")),(0,l.kt)("p",null,"lambda \u51fd\u6570\u652f\u6301\u6355\u83b7\u5176\u5916\u90e8\u4f5c\u7528\u57df\u7684\u53d8\u91cf\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f5c\u4e3a\u5176\u4ed6\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4f20\u9012"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = 1\nfunc = lambda x: int {\n    x + a\n}\nfuncOther = lambda f, para: int {\n    f(para)\n}\nr0 = funcOther(func, 1)  # 2\nr1 = funcOther(lambda x: int {\n    x + a\n}, 1)  # 2\n")),(0,l.kt)("p",null,"\u8f93\u51fa\u4e3a:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"a: 1\nr: 2\n")),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u5e76\u76f4\u63a5\u8c03\u7528\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"result = (lambda x, y {\n    z = 2 * x\n    z + y\n})(1, 1)  # 3\n")),(0,l.kt)("p",null,"\u5e76\u4e14\u8fd8\u53ef\u4ee5\u5728 for \u5faa\u73af\u4f7f\u7528\u4f7f\u7528\u533f\u540d\u51fd\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"result = [(lambda x, y {\n    x + y\n})(x, y) for x in [1, 2] for y in [1, 2]]  # [2, 3, 3, 4]\n")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0cKCL \u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u7684\u5747\u4e3a\u7eaf\u51fd\u6570\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u51fd\u6570\u7684\u8fd4\u56de\u7ed3\u679c\u53ea\u4f9d\u8d56\u4e8e\u5b83\u7684\u53c2\u6570\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u51fd\u6570\u6267\u884c\u8fc7\u7a0b\u91cc\u9762\u6ca1\u6709\u526f\u4f5c\u7528\u3002")),(0,l.kt)("p",null,"\u56e0\u6b64\uff0cKCL \u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u5916\u90e8\u7684\u53d8\u91cf\uff0c\u53ea\u80fd\u5f15\u7528\u5916\u90e8\u7684\u53d8\u91cf\uff0c\u6bd4\u5982\u5982\u4e0b\u4ee3\u7801\u4f1a\u53d1\u751f\u9519\u8bef\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"globalVar = 1\nfunc = lambda {\n    x = globalVar  # Ok\n    globalVar = 1  # Error\n}\n")),(0,l.kt)("h3",{id:"\u7c7b\u578b\u7cfb\u7edf"},"\u7c7b\u578b\u7cfb\u7edf"),(0,l.kt)("h4",{id:"\u7c7b\u578b\u6ce8\u89e3"},"\u7c7b\u578b\u6ce8\u89e3"),(0,l.kt)("p",null,"\u7c7b\u578b\u6ce8\u89e3\u53ef\u7528\u4e8e\u5305\u7ea7\u53d8\u91cf\uff0cschema \u5c5e\u6027\u548c\u53c2\u6570\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5c5e\u6027\u53ef\u4ee5\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u4f8b\u5982\u5b57\u7b26\u4e32(",(0,l.kt)("inlineCode",{parentName:"li"},"string"),")\uff0c\u6d6e\u70b9\u6570(",(0,l.kt)("inlineCode",{parentName:"li"},"float"),")\uff0c\u5b9a\u70b9\u6570(",(0,l.kt)("inlineCode",{parentName:"li"},"int"),") \u6216\u5e03\u5c14\u503c(",(0,l.kt)("inlineCode",{parentName:"li"},"bool"),")\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5c5e\u6027\u53ef\u4ee5\u662f\u5b57\u9762\u503c\u7c7b\u578b\uff0c\u4f8b\u5982\u5b57\u7b26\u4e32\u6587\u672c(",(0,l.kt)("inlineCode",{parentName:"li"},'"TCP"')," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},'"UDP"'),")\uff0c\u6570\u5b57\u6587\u672c (",(0,l.kt)("inlineCode",{parentName:"li"},'"1"')," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},'"1.2"'),")\uff0c\u5e03\u5c14\u503c\u6587\u672c(",(0,l.kt)("inlineCode",{parentName:"li"},"True")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"False"),")\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5c5e\u6027\u4e5f\u53ef\u4ee5\u662f\u5217\u8868\u6216\u5b57\u5178\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u672a\u6307\u5b9a\u5143\u7d20\u7c7b\u578b\u7684\u5217\u8868\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"[]"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5143\u7d20\u7c7b\u578b\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"t")," \u7684\u5217\u8868\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"[t]"),"\u3002\u8fd9\u91cc ",(0,l.kt)("inlineCode",{parentName:"li"},"t")," \u662f\u53e6\u4e00\u79cd\u7c7b\u578b\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u952e\u7684\u7c7b\u578b\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"kt")," \u4e14\u503c\u7684\u7c7b\u578b\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"vt")," \u7684\u5b57\u5178\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"{kt:vt}"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kt"),"\uff0c ",(0,l.kt)("inlineCode",{parentName:"li"},"vt")," \u6216\u4e24\u8005\u90fd\u53ef\u4ee5\u4e3a\u7a7a, \u5c31\u50cf\u5217\u8868\u672a\u6307\u5b9a\u5143\u7d20\u7c7b\u578b\u4e00\u6837\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5c5e\u6027\u53ef\u4ee5\u662f\u7531 ",(0,l.kt)("inlineCode",{parentName:"li"},"|")," \u5b9a\u4e49\u7684 ",(0,l.kt)("strong",{parentName:"li"},"\u8054\u5408\u7c7b\u578b")," \uff0c\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"li"},"a | b"),", \u610f\u4e3a\u7c7b\u578b\u53ef\u4ee5\u662f a \u6216 b\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u8054\u5408\u7c7b\u578b\u53ef\u4ee5\u5305\u542b ",(0,l.kt)("inlineCode",{parentName:"li"},"int"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"str"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"float"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"bool"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"list"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"dict"),", \u5b57\u9762\u503c\u7c7b\u578b\u548c schema \u7c7b\u578b\uff0c\u5e76\u4e14\u652f\u6301\u7c7b\u578b\u7684\u5d4c\u5957\uff0c\u4f8b\u5982\uff1a ",(0,l.kt)("inlineCode",{parentName:"li"},"{str:str|int}"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"[[int|str]|str|float]")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"2 | 4 | 6")," \u7b49\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u5c5e\u6027\u53ef\u4ee5\u662f schema \u7c7b\u578b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u5305\u540d + schema \u540d\u79f0\u4f5c\u4e3a\u7c7b\u578b\u540d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5c5e\u6027\u53ef\u4ee5\u58f0\u660e\u4e3a\u4efb\u610f\u7c7b\u578b\uff0c\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"li"},"any"),"\u3002")),(0,l.kt)("p",null,"\u793a\u4f8b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u57fa\u672c\u7c7b\u578b")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'"""Top level variable type annotation"""\na: int = 1  # Declare a variable `a` that has the type `int` and the value `1`\nb: str = "s"  # Declare a variable `b` that has the type `str` and the value `"s"`\nc: float = 1.0  # Declare a variable `c` that has the type `float` and the value `1.0`\nd: bool = True  # Declare a variable `d` that has the type `bool` and the value `True`\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"List/Dict/Schema \u7c7b\u578b")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Person:\n    name: str = "Alice"\n    age: int = 10\n\na: [int] = [1, 2, 3]  # Declare a variable `a` that has the list type `[int]` and the value `[1, 2, 3]`\nb: {str:str} = {k1 = "v1", k2 = "v2"}  # Declare a variable `b` that has the dict type `{str:str}` and the value `{k1 = "v1", k2 = "v2"}`\nc: Person = Person {}  # Declare a variable `c` that has the schema type `Person` and the value `Person {}`\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8054\u5408\u7c7b\u578b")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Basic union types\nschema x[argc: int]:  # Schema argument type annotation\n    p: int | str  # Schema attribute type annotation\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# Literal union types\nschema LiteralType:\n    # String literal union types, x_01 can be one of "TCP" and "UDP"\n    x_01: "TCP" | "UDP"\n    # Number literal union types, x_02 can be one of 2, 4, and 6\n    x_02: 2 | 4 | 6\n    # Unit union types, x_03 can be one of 1Gi, 2Gi and 4Gi\n    x_03: 1Gi | 2Gi | 4Gi\n\nx = LiteralType {\n    x_01 = "TCP"\n    x_02 = 2\n    x_03 = 1Gi\n}\n')),(0,l.kt)("p",null,"\u5f53\u5c5e\u6027\u7684\u503c\u4e0d\u7b26\u5408\u8054\u5408\u7c7b\u578b\u5b9a\u4e49\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u629b\u51fa\u9519\u8bef\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# Literal union types\nschema LiteralType:\n    # String literal union types, x_01 can be one of "TCP" and "UDP"\n    x_01: "TCP" | "UDP"\n\nx = LiteralType {\n    x_01 = "HTTP"  # Error: the type got is inconsistent with the type expected, expect str(TCP)|str(UDP), got str(HTTP)\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Any \u7c7b\u578b")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# Any type\nschema Config:\n    literalConf: any = 1\n    dictConf: {str:any} = {key = "value"}\n    listConf: [any] = [1, "2", True]\n\nconfig = Config {}\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u4e00\u822c\u5728\u914d\u7f6e\u7f16\u5199\u4e2d\u4e0d\u63d0\u5021\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"float")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"any")," \u7c7b\u578b\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u5b58\u5728\u4e00\u5b9a\u7684\u4e0d\u7a33\u5b9a\u56e0\u7d20\uff0c\u6bd4\u5982\u7cbe\u5ea6\u4e22\u5931\uff0c\u65e0\u6cd5\u8fdb\u884c\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u7b49\u3002"),(0,l.kt)("p",null,"\u6b64\u5916\u5728 KCL \u4e2d\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\u4e00\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u3002\u5982\u679c\u5728\u91cd\u65b0\u5206\u914d\u503c\u65f6\u4e0d\u6ee1\u8db3\u7c7b\u578b\uff0c\u5c06\u5f15\u53d1\u7c7b\u578b\u9519\u8bef\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'_a = 1  # The type of `_a` is `int`\n_a = "s"  # Error: expect int, got str(s)\n')),(0,l.kt)("p",null,"\u53d8\u91cf\u53ef\u4ee5\u8d4b\u503c\u7ed9\u5176\u4e0a\u754c\u7c7b\u578b\uff0c\u4f46\u4e0d\u80fd\u8d4b\u503c\u7ed9\u5b83\u7684\u7279\u5316\u7c7b\u578b\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"None")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"Undefined")," \u53ef\u4ee5\u8d4b\u503c\u7ed9\u4efb\u4f55\u7c7b\u578b:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4efb\u4f55\u7c7b\u578b\u90fd\u53ef\u4ee5\u8d4b\u503c\u7ed9 ",(0,l.kt)("inlineCode",{parentName:"li"},"any")," \u7c7b\u578b, ",(0,l.kt)("inlineCode",{parentName:"li"},"None")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"Undefined")," \u53ef\u4ee5\u8d4b\u503c\u7ed9 ",(0,l.kt)("inlineCode",{parentName:"li"},"any")," \u7c7b\u578b\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a: int = None\nb: str = Undefined\nc: any = 1\nd: any = "s"\ne: any = None\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int")," \u7c7b\u578b\u53ef\u4ee5\u8d4b\u503c\u7ed9 ",(0,l.kt)("inlineCode",{parentName:"li"},"float")," \u7c7b\u578b, ",(0,l.kt)("inlineCode",{parentName:"li"},"float")," \u7c7b\u578b\u4e0d\u80fd\u8d4b\u503c\u7ed9 ",(0,l.kt)("inlineCode",{parentName:"li"},"int")," \u7c7b\u578b.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a: float = 1\nb: int = 1.0  # Error: expect int, got float(1.0)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int")," \u7c7b\u578b\u53ef\u4ee5\u8d4b\u503c\u7ed9 ",(0,l.kt)("inlineCode",{parentName:"li"},"int|str")," \u7c7b\u578b, ",(0,l.kt)("inlineCode",{parentName:"li"},"int|str")," \u4e0d\u80fd\u8d4b\u503c\u7ed9 ",(0,l.kt)("inlineCode",{parentName:"li"},"int")," \u7c7b\u578b.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a: int | str = 1\nb: int = 1 if a else "s"  # Error: expect int, got int(1)|str(s)\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u5728 KCL \u4e2d\u867d\u7136\u63d0\u4f9b\u4e86 any \u7c7b\u578b\uff0c\u4f46\u662f\u5b83\u4ecd\u7136\u662f\u9759\u6001\u7c7b\u578b\uff0c\u6240\u6709\u53d8\u91cf\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u53ef\u53d8\u3002"),(0,l.kt)("h4",{id:"\u7c7b\u578b\u63a8\u5bfc"},"\u7c7b\u578b\u63a8\u5bfc"),(0,l.kt)("p",null,"\u5982\u679c\u9876\u5c42\u6216 schema \u4e2d\u7684\u53d8\u91cf\u6216\u5e38\u91cf\u58f0\u660e\u6ca1\u6709\u4f7f\u7528\u663e\u5f0f\u7684\u7c7b\u578b\u6ce8\u89e3\uff0c\u5219\u4f1a\u4ece\u521d\u59cb\u503c\u63a8\u65ad\u7c7b\u578b\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6574\u5f62\u6570\u503c\u88ab\u63a8\u65ad\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"int"),"\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = 1  # The variable `a` has the type `int`\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6d6e\u70b9\u6570\u88ab\u63a8\u65ad\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"float"),"\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = 1.0  # The variable `a` has the type `float`\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5b57\u7b26\u4e32\u88ab\u63a8\u65ad\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"str"),"\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = "s"  # The variable `a` has the type `str`\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5e03\u5c14\u503c\u88ab\u63a8\u65ad\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"bool"),"\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = True  # The variable `a` has the type `bool`\nb = False  # The variable `b` has the type `bool`\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"None")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"Undefined")," \u88ab\u63a8\u65ad\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"any"),"\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = None  # The variable `a` has the type `any`\nb = Undefined  # The variable `b` has the type `any`\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5217\u8868\u7684\u7c7b\u578b\u6839\u636e\u5143\u7d20\u7c7b\u578b\u63a8\u65ad\uff0c\u5e76\u4e14\u662f\u53ef\u53d8\u5927\u5c0f\u7684\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = [1, 2, 3]  # The variable `a` has the type `[int]`\nb = [1, 2, True]  # The variable `b` has the list union type `[int|bool]`\nc = ["s", 1]  # The variable `c` has the list union type `[int|str]`\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u7a7a\u5217\u8868\u5c06\u88ab\u63a8\u5bfc\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"[any]")," \u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = []  # The variable `a` has the type `[any]`\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5b57\u5178\u7684\u7c7b\u578b\u662f\u6839\u636e\u5143\u7d20\u7684\u952e\u548c\u503c\u63a8\u65ad\u7684\uff0c\u5e76\u4e14\u662f\u53ef\u53d8\u5927\u5c0f\u7684\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a = {key = "value"}  # The variable `a` has the type `{str:str}`\nb = {key = 1}  # The variable `b` has the type `{str:int}`\nc = {key1 = 1, key2 = "s"}  # The variable `c` has the type `{str:int|str}`\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u7a7a\u5b57\u5178\u5c06\u88ab\u63a8\u5bfc\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"{any:any}")," \u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = {}  # The variable `a` has the type `{any:any}`\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u643a\u5e26\u8fd0\u884c\u65f6\u503c\u7684 if \u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u5c06\u88ab\u9759\u6001\u63a8\u65ad\u4e3a\u6240\u6709\u53ef\u80fd\u7ed3\u679c\u7684\u8054\u5408\u7c7b\u578b\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a: bool = True  # The variable `a` has the type `bool`\nb = 1 if a else "s"  # The variable `b` has the type `int|str`\n')),(0,l.kt)("p",null,"\u5f53\u53d8\u91cf\u88ab\u63a8\u5bfc\u4e3a\u67d0\u4e2a\u7c7b\u578b\u65f6\uff0c\u5b83\u7684\u7c7b\u578b\u4e0d\u80fd\u518d\u6539\u53d8\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'_a = 1\n_a = "s"  # Error: expect int, got str(1)\n')),(0,l.kt)("h4",{id:"\u7c7b\u578b\u522b\u540d"},"\u7c7b\u578b\u522b\u540d"),(0,l.kt)("p",null,"\u5728 KCL \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"type")," \u5173\u952e\u5b57\u4e3a\u6240\u6709\u7c7b\u578b\u58f0\u660e\u4e00\u4e2a\u7c7b\u578b\u522b\u540d\u7b80\u5316\u590d\u6742\u7c7b\u578b\u7684\u4e66\u5199\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"type Int = int\ntype String = str\ntype StringOrInt = String | Int\ntype IntList = [int]\ntype StringAnyDict = {str:}\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5305\u4e2d\u5bfc\u5165\u4e00\u4e2a\u7c7b\u578b\u5e76\u4e3a\u5b83\u5b9a\u4e49\u4e00\u4e2a\u522b\u540d\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"import pkg\n\ntype Data = pkg.Data\n")),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u522b\u540d\u548c\u5b57\u9762\u503c\u8054\u5408\u7c7b\u578b\u5145\u5f53\u8fd1\u4f3c\u679a\u4e3e\u7684\u6548\u679c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# A type alias of string literal union types\ntype Color = "Red" | "Yellow" | "Blue"\n\nschema Config:\n    color: Color = "Red"  # The type of color is `"Red" | "Yellow" | "Blue"`, and it has an alias `Color`, whose default value is `"Red"`\n\nconfig = Config {\n    color = "Blue"\n}\n')),(0,l.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u6267\u884c\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"config:\n  color: Blue\n")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u7c7b\u578b\u522b\u540d\u4e0d\u80fd\u4e0e\u5df2\u6709\u7684\u5185\u7f6e\u7c7b\u578b ",(0,l.kt)("inlineCode",{parentName:"p"},"any"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"int"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"float"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"bool")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"str")," \u7b49\u76f8\u540c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'type any = int | str  # Error\ntype int = str  # Error\ntype float = int  # Error\ntype bool = True  # Error\ntype str = "A" | "B" | "C"  # Error\n')),(0,l.kt)("h4",{id:"\u7c7b\u578b\u5b88\u536b"},"\u7c7b\u578b\u5b88\u536b"),(0,l.kt)("p",null,"KCL \u652f\u6301\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"typeof")," \u51fd\u6570\u5bf9\u4efb\u610f\u503c\u6c42\u5f97\u5176\u8fd0\u884c\u65f6\u7684\u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import sub as pkg\n\n_a = 1\n\nt1 = typeof(_a)\nt2 = typeof("abc")\n\nschema Person:\n    name?: any\n\n_x1 = Person {}\nt3 = typeof(_x1)\n\n_x2 = pkg.Person {}\nt4 = typeof(_x2)\nt5 = typeof(_x2, full_name=True)\n\nt6 = typeof(_x1, full_name=True)\n\n# Output\n# t1: int\n# t2: str\n# t3: Person\n# t4: Person\n# t5: sub.Person\n# t6: __main__.Person\n')),(0,l.kt)("p",null,"\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"as")," \u5173\u952e\u5b57\u5728\u8fd0\u884c\u65f6\u4f5c\u7c7b\u578b\u8f6c\u6362\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"as")," \u5173\u952e\u5b57\u7684\u4e00\u822c\u7528\u6cd5\u5982\u4e0b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5177\u6709\u504f\u5e8f\u5173\u7cfb\u7684\u57fa\u7840\u7c7b\u578b\uff0c\u6bd4\u5982 ",(0,l.kt)("inlineCode",{parentName:"li"},"float -> int")),(0,l.kt)("li",{parentName:"ul"},"\u5177\u6709\u504f\u5e8f\u5173\u7cfb\u7684\u8054\u5408\u7c7b\u578b\uff0c\u6bd4\u5982 ",(0,l.kt)("inlineCode",{parentName:"li"},"int | str -> str")),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u7c7b\u578b\u4e0a\u754c ",(0,l.kt)("inlineCode",{parentName:"li"},"any")," \u7684\u8f6c\u6362\uff0c\u6bd4\u5982 ",(0,l.kt)("inlineCode",{parentName:"li"},"any -> int")),(0,l.kt)("li",{parentName:"ul"},"\u5177\u6709\u504f\u5e8f\u5173\u7cfb\u7684\u7ed3\u6784\u7c7b\u578b\uff0c\u6bd4\u5982 ",(0,l.kt)("inlineCode",{parentName:"li"},"base-schema -> sub-schema"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Data1:\n    id?: int\n\nschema Data2:\n    name?: str\n\ndata: Data1 | Data2 = Data1 {}\n\nif typeof(a) == "Data1":\n    data1 = data as Data1  # The type of `data1` is `Data1`\nelif typeof(a) == "Data2":\n    data2 = data as Data2  # The type of `data2` is `Data2`\n')),(0,l.kt)("p",null,"\u5f53\u7c7b\u578b\u8f6c\u6362\u5931\u8d25\u65f6\uff0c\u4e00\u4e2a\u8fd0\u884c\u65f6\u9519\u8bef\u5c06\u88ab\u629b\u51fa\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a: any = "s"\nb: int = a as int  # Error: The `str` type cannot be converted to the `int` type\n')),(0,l.kt)("p",null,"\u5982\u679c\u4e0d\u60f3\u8981\u8fd0\u884c\u65f6\u7c7b\u578b\u8f6c\u6362\u5931\u8d25\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0 ",(0,l.kt)("inlineCode",{parentName:"p"},"if")," \u9632\u5fa1\u5f0f\u4ee3\u7801\u8fdb\u884c\u68c0\u67e5\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'a: any = "s"\nb = a as int if typeof(a) == "int" else None  # The type of b is `int`\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"as")," \u8f6c\u6362\u7684\u76ee\u6807\u7c7b\u578b\u4e0d\u80fd\u662f\u5b57\u9762\u503c\u7c7b\u578b\u6216\u8005\u8054\u5408\u7c7b\u578b\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u8fd0\u884c\u65f6\u4e0d\u5177\u6709\u4e00\u4e2a\u5b8c\u5168\u786e\u5b9a\u7684\u7c7b\u578b\u3002"),(0,l.kt)("h3",{id:"schema"},"Schema"),(0,l.kt)("h4",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,l.kt)("p",null,"Schema \u662f\u5b9a\u4e49\u590d\u6742\u914d\u7f6e\u7684\u8bed\u8a00\u5143\u7d20\u3002\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5e26\u7c7b\u578b\u7684\u5c5e\u6027\uff0c\u521d\u59cb\u503c\u548c\u9a8c\u8bc1\u89c4\u5219\u3002\u6b64\u5916\uff0cKCL \u652f\u6301 schema \u5355\u7ee7\u627f\u3001mixin \u548c protocol \u5b9e\u73b0\u590d\u6742\u914d\u7f6e\u7684\u590d\u7528\u3002"),(0,l.kt)("h4",{id:"\u57fa\u7840\u90e8\u5206"},"\u57fa\u7840\u90e8\u5206"),(0,l.kt)("h5",{id:"\u5c5e\u6027"},"\u5c5e\u6027"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u662f schema \u57fa\u7840\u5b9a\u4e49\u7684\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# A person has a first name, a last name and an age.\nschema Person:\n    firstName: str\n    lastName: str\n    # The default value of age is 0\n    age: int = 0\n")),(0,l.kt)("p",null,"\u5728 KCL \u4e2d, \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u6ce8\u89e3\u5728 schema \u4e2d\u5b9a\u4e49\u4e00\u4e9b\u5c5e\u6027\uff0c\u6bcf\u4e2a\u5c5e\u6027\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u53ef\u9009\u7684\u9ed8\u8ba4\u503c\uff08\u6bd4\u5982\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"age")," \u5c5e\u6027\uff0c\u5b83\u7684\u9ed8\u8ba4\u503c\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"0"),"\uff09\uff0c\u6ca1\u6709\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u7684\u5c5e\u6027\u7684\u521d\u59cb\u503c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"Undefined"),", \u5b83\u4eec\u4e0d\u4f1a\u5728 YAML \u5f53\u4e2d\u8fdb\u884c\u8f93\u51fa\u3002"),(0,l.kt)("h6",{id:"\u4e0d\u53ef\u53d8\u6027"},"\u4e0d\u53ef\u53d8\u6027"),(0,l.kt)("p",null,"schema \u4e2d\u5c5e\u6027\u7684\u4e0d\u53ef\u53d8\u6027\u9075\u5faa\u548c\u5168\u5c40\u53d8\u91cf\u4e0d\u53ef\u53d8\u6027\u4e00\u6837\u7684\u89c4\u5219\uff0c\u53ea\u6709 schema \u4e2d\u7684\u53ef\u53d8\u5c5e\u6027\u53ef\u4ee5\u5728 schema \u4e2d\u4fee\u6539\u3002\u6b64\u5916\uff0cschema \u7684\u5c5e\u6027\u9ed8\u8ba4\u503c\u53ef\u88ab schema \u914d\u7f6e\u503c\u4fee\u6539\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Person:\n    age: int = 1  # Immutable attribute\n    _name: str = "Alice"  # Mutable attribute\n\n    age = 10  # Error, can\'t change the default value of the attribute `age` in the schema context.\n    _name = "Bob"  # Ok\n\nperson = Person {\n    age = 3  # Ok, can change the default value of the attribute `age` in the schema config.\n}\n')),(0,l.kt)("h6",{id:"\u53ef\u9009\u5c5e\u6027"},"\u53ef\u9009\u5c5e\u6027"),(0,l.kt)("p",null,"schema \u5b9e\u4f8b\u4e2d\u6bcf\u4e2a\u5c5e\u6027 ",(0,l.kt)("strong",{parentName:"p"},"\u5fc5\u987b")," \u8d4b\u503c\u4e00\u4e2a\u975e ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),"/",(0,l.kt)("inlineCode",{parentName:"p"},"Undefined")," \u7684\u503c\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u4f1a\u629b\u51fa\u9519\u8bef\uff0c\u9664\u975e\u5b83\u88ab ",(0,l.kt)("inlineCode",{parentName:"p"},"?")," \u7b26\u53f7\u6807\u8bb0\u4e3a\u53ef\u9009\u5c5e\u6027\u3002"),(0,l.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Employee:\n    bankCard: int  # bankCard is a required attribute, and it can NOT be None or Undefined\n    nationality?: str  # nationality is an optional attribute, and it can be None or Undefined\n\nemployee = Employee {\n    bankCard = None  # Error, attribute 'bankCard' of Employee is required and can't be None or Undefined\n    nationality = None  # Ok\n}\n")),(0,l.kt)("h5",{id:"\u987a\u5e8f\u65e0\u5173\u8ba1\u7b97"},"\u987a\u5e8f\u65e0\u5173\u8ba1\u7b97"),(0,l.kt)("p",null,"schema \u4e2d\u987a\u5e8f\u65e0\u5173\u8ba1\u7b97\u8868\u793a schema \u5185\u90e8\u5c5e\u6027\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u58f0\u660e\u4e00\u4e2a\u5f62\u5f0f\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"a = b + 1")," \u7684\u8868\u8fbe\u5f0f\u65f6\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"a")," \u503c\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"b")," \u503c\u7684\u8ba1\u7b97\u3002\u5f53\u7f16\u8bd1\u5668\u8ba1\u7b97 ",(0,l.kt)("inlineCode",{parentName:"p"},"a")," \u7684\u503c\u5e76\u4e14 ",(0,l.kt)("inlineCode",{parentName:"p"},"a")," \u7684\u503c\u53d6\u51b3\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"b")," \u7684\u503c\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u9009\u62e9\u5148\u8ba1\u7b97 ",(0,l.kt)("inlineCode",{parentName:"p"},"b")," \u7684\u503c\uff0c\u7136\u540e\u6839\u636e ",(0,l.kt)("inlineCode",{parentName:"p"},"b")," \u7684\u503c\u8ba1\u7b97 a \u7684\u503c\u8868\u8fbe\u5f0f ",(0,l.kt)("inlineCode",{parentName:"p"},"a = b + 1"),"\uff0c\u8fd9\u4e0e\u4f20\u7edf\u8fc7\u7a0b\u8bed\u8a00\u7684\u8ba1\u7b97\u65b9\u6cd5\u7565\u6709\u4e0d\u540c\u3002"),(0,l.kt)("p",null,"\u7531\u4e8e schema \u4e2d\u503c\u7684\u8ba1\u7b97\u662f\u57fa\u4e8e\u4f9d\u8d56\u5173\u7cfb\u7684\uff0c\u5c31\u50cf\u6709\u5411\u65e0\u73af\u56fe\u6309\u7167\u62d3\u6251\u6392\u5e8f\u7684\u987a\u5e8f\u904d\u5386\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4e00\u6837\uff0c schema \u4e2d\u5c5e\u6027\u7684\u58f0\u660e\u987a\u5e8f\u5e76\u4e0d\u90a3\u4e48\u91cd\u8981\uff0c\u56e0\u6b64\u7279\u5f81\u79f0\u4e3a\u987a\u5e8f\u65e0\u5173\u8ba1\u7b97\u3002"),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u4e0d\u540c schema \u5c5e\u6027\u503c\u4e4b\u95f4\u4e0d\u80fd\u6709\u5faa\u73af\u5f15\u7528\u3002"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4f8b\u5b50\u770b\u5230\u8fd9\u4e2a\u7279\u6027\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Fib:\n    n1: int = n - 1  # Refers to the attribute `n` declared after `n1`\n    n2: int = n1 - 1\n    n: int\n    value: int = 1 if n <= 2 else Fib {n = n1}.value + Fib {n = n2}.value\n\nfib8 = Fib {n = 8}.value\n")),(0,l.kt)("p",null,"\u7ed3\u679c\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"fib8: 21\n")),(0,l.kt)("p",null,"\u5728 schema \u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7b80\u5355\u7684\u6307\u5b9a\u5c5e\u6027\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u6839\u636e\u4f9d\u8d56\u5173\u7cfb\u81ea\u52a8\u8ba1\u7b97\u51fa\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8282\u7701\u5927\u91cf\u7684\u6837\u677f\u4ee3\u7801\uff0c\u51cf\u5c11\u914d\u7f6e\u7f16\u5199\u96be\u5ea6\u3002"),(0,l.kt)("h5",{id:"schema-\u4e0a\u4e0b\u6587"},"Schema \u4e0a\u4e0b\u6587"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49 schema \u7684\u4e0a\u4e0b\u6587\u6765\u7ba1\u7406 schema \u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728 schema \u4e2d\u7f16\u5199 schema \u53c2\u6570\u3001\u4e34\u65f6\u53d8\u91cf\u548c\u8868\u8fbe\u5f0f\u7b49\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Person[_name: str]:  # define a schema argument\n    name: str = _name     # define a schema attribute\n    age: int = 10         # define a schema attribute with default value\n    hands: [int] = [i for i in [1, 2, 3]] # define a for statement\n")),(0,l.kt)("p",null,"\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u5b9e\u4f8b\u5316\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"Person")," \u5e76\u5c06\u5176\u8d4b\u503c\u7ed9 ",(0,l.kt)("inlineCode",{parentName:"p"},"alice")," \u53d8\u91cf\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'alice = Person("alice")\n')),(0,l.kt)("p",null,"\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b YAML \u8f93\u51fa\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"alice:\n  name: alice\n  age: 10\n  hands:\n  - 1\n  - 2\n  - 3\n")),(0,l.kt)("h5",{id:"\u6821\u9a8c"},"\u6821\u9a8c"),(0,l.kt)("p",null,"KCL \u4e2d\u4e3a\u4e86\u786e\u4fdd\u4ee3\u7801\u7a33\u5b9a\u6027\uff0c\u9664\u4e86\u4f7f\u7528 ",(0,l.kt)("strong",{parentName:"p"},"\u9759\u6001\u7c7b\u578b")," (\u7c7b\u578b\u6ce8\u89e3) \u548c ",(0,l.kt)("strong",{parentName:"p"},"\u4e0d\u53ef\u53d8\u6027"),"\uff0c\u8fd8\u652f\u6301\u5728 ",(0,l.kt)("strong",{parentName:"p"},"check")," \u5757\u4e2d\u5b9a\u4e49\u9a8c\u8bc1\u89c4\u5219 (KCL \u51e0\u4e4e\u539f\u751f\u652f\u6301\u6240\u6709 ",(0,l.kt)("a",{parentName:"p",href:"https://www.openapis.org/"},"OpenAPI")," \u7684\u9a8c\u8bc1\u80fd\u529b)\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import regex\n\nschema Sample:\n    foo: str\n    bar: int\n    fooList: [str]\n\n    check:\n        bar > 0  # Minimum, also support the exclusive case\n        bar < 100  # Maximum, also support the exclusive case\n        len(fooList) > 0  # Min length, also support exclusive case\n        len(fooList) < 100  # Max length, also support exclusive case\n        regex.match(foo, "^The.*Foo$")  # Regex match\n        isunique(fooList)  # Unique\n        bar in range(100)  # Range\n        bar in [2, 4, 6, 8]  # Enum\n        multiplyof(bar, 2)  # MultipleOf\n')),(0,l.kt)("p",null,"\u4f7f\u7528 schema, \u6240\u6709\u7684\u5b9e\u4f8b\u5c06\u5728\u7f16\u8bd1\u65f6\u9a8c\u8bc1\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# Ok\ngoodSample = Sample {\n    foo = "The Foo"\n    bar = 2\n    fooList = ["foo0", "foo1"]\n}\n\n# Error: validation failure: Check failed on check conditions: bar < 100.\nbadSample = Sample {\n    foo = "The Foo"\n    bar = 123\n    fooList = ["foo0", "foo1"]\n}\n')),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("strong",{parentName:"p"},"and"),", ",(0,l.kt)("strong",{parentName:"p"},"or"),", ",(0,l.kt)("strong",{parentName:"p"},"if")," \u6765\u6784\u5efa\u66f4\u590d\u6742\u7684\u68c0\u67e5\u903b\u8f91\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Sample:\n    bar: int\n    foo: str\n    doCheck: bool\n\n    check:\n        regex.match(foo, "^The.*Foo$") and bar in [2, 4, 6, 8] if doCheck\n')),(0,l.kt)("p",null,"\u4e3a\u4e86\u786e\u4fdd\u6240\u6709\u68c0\u67e5\u89c4\u5219\u90fd\u80fd\u5f88\u597d\u5730\u53d1\u6325\u5176\u76f8\u5e94\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199 KCL \u6d4b\u8bd5\u7528\u4f8b\u6765\u6d4b\u8bd5\u4e0d\u540c\u6570\u636e\u7ec4\u5408\u7684\u5408\u7406\u6027\u548c\u6b63\u786e\u6027\uff0c\u5e76\u901a\u8fc7 kcl test tool \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u3002"),(0,l.kt)("h5",{id:"\u6587\u6863"},"\u6587\u6863"),(0,l.kt)("p",null,"\u901a\u5e38\u5728\u6211\u4eec\u5199\u597d schema \u6a21\u578b\u4e4b\u540e\uff0c\u6211\u4eec\u4f1a\u4e3a schema \u5199\u6587\u6863\u6ce8\u91ca\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e09\u5f15\u53f7\u5b57\u7b26\u4e32\u6765\u5b8c\u6210\uff0c\u5982\u4e0b\u6240\u793a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Server:\n    """Server is the common user interface for long-running\n    services adopting the best practice of Kubernetes.\n\n    Attributes\n    ----------\n    workloadType : str, default is Deployment\n        Use this attribute to specify which kind of long-running service you want.\n        Valid values: Deployment, CafeDeployment.\n        See also: k8s/core/v1/workload_metadata.k.\n    name : str, default is None\n        A Server-level attribute.\n        The name of the long-running service.\n        See also: k8s/core/v1/metadata.k.\n    labels : {str:str}, optional, default is None\n        A Server-level attribute.\n        The labels of the long-running service.\n        See also: k8s/core/v1/metadata.k.\n\n    Examples\n    ----------------------\n    myCustomApp = AppConfiguration {\n        name = "componentName"\n    }\n    """\n    workloadType: str = "Deployment"\n    name: str\n    labels?: {str:str}\n')),(0,l.kt)("p",null,"\u66f4\u591a\u8be6\u7ec6\u5185\u5bb9\u53ef\u89c1 Doc tools\u3002"),(0,l.kt)("h5",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),(0,l.kt)("p",null,"\u5047\u8bbe\u6211\u4eec\u6709\u5982\u4e0b schema \u5b9a\u4e49\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Person:\n    firstName: str\n    lastName: str\n    labels?: {str:str}\n")),(0,l.kt)("p",null,"\u53ef\u4ee5\u7528\u7c7b JSON \u7684\u8868\u8fbe\u5f0f\u5b9a\u4e49\u914d\u7f6e\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'person = Person {\n    firstName = "firstName"\n    lastName = "lastName"\n}\n')),(0,l.kt)("p",null,"schema \u9075\u5faa\u4e25\u683c\u7684\u5c5e\u6027\u5b9a\u4e49\uff0c\u914d\u7f6e\u672a\u5b9a\u4e49\u7684\u5c5e\u6027\u5c06\u89e6\u53d1\u7f16\u8bd1\u9519\u8bef\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"person = Person {\n    firstName = \"firstName\"\n    lastName = \"lastName\"\n    fullName = \"fullName\"  # Error: Cannot add member 'fullName' to schema 'Person', 'fullName' is not defined in schema 'Person'\n}\n")),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"if")," \u8868\u8fbe\u5f0f\u5c06\u5143\u7d20\u52a8\u6001\u7684\u6dfb\u52a0\u5230 schema \u5b9e\u4f8b\u4e2d\uff0c\u5c06\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\u6dfb\u52a0\u5230 schema \u5b9e\u4f8b\u5e76\u5ffd\u7565\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\u3002\u5e76\u4e14\u9664\u4e86\u4f7f\u7528\u4e00\u4e2a schema \u7c7b\u578b\u5b9e\u4f8b\u5316\u4e00\u4e2a schema\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 schema \u5b9e\u4f8b\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'env = "prod"\nperson = Person {\n    firstName = "firstName"\n    lastName = "lastName"\n    if env == "prod":\n        labels.env = env\n    else:\n        labels.env = "other"\n}\n# We can use the person instance to get a new instance named `personx` directly.\npersonx = person {\n    firstName = "NewFirstName"\n}\n')),(0,l.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"env: prod\nperson:\n  firstName: firstName\n  lastName: lastName\n  labels:\n    env: prod\npersonx:\n  firstName: NewFirstName\n  lastName: lastName\n  labels:\n    env: prod\n")),(0,l.kt)("h4",{id:"\u9ad8\u7ea7\u529f\u80fd"},"\u9ad8\u7ea7\u529f\u80fd"),(0,l.kt)("h5",{id:"protocol--mixin"},"Protocol & Mixin"),(0,l.kt)("p",null,"\u9664\u4e86 schema, \u5728 KCL \u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u989d\u5916\u7684\u7c7b\u578b\u5b9a\u4e49\u65b9\u5f0f ",(0,l.kt)("inlineCode",{parentName:"p"},"protocol"),"\uff0c\u5b83\u7684\u6027\u8d28\u5982\u4e0b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5728 protocol \u4e2d\uff0c\u53ea\u80fd\u5b9a\u4e49\u5c5e\u6027\u53ca\u5176\u7c7b\u578b\uff0c\u4e0d\u80fd\u4e66\u5199\u590d\u6742\u7684\u903b\u8f91\u4e0e check \u8868\u8fbe\u5f0f\uff0c\u4e5f\u4e0d\u80fd\u4f7f\u7528 mixin\u3002"),(0,l.kt)("li",{parentName:"ul"},"protocol \u53ea\u80fd\u5bf9\u975e ",(0,l.kt)("inlineCode",{parentName:"li"},"_")," \u5f00\u5934\u7684\u5c5e\u6027\u8fdb\u884c\u7ea6\u675f\u3002"),(0,l.kt)("li",{parentName:"ul"},"protocol \u53ea\u80fd\u7ee7\u627f\u81ea\u6216\u8005\u5f15\u7528 protocol, \u4e0d\u80fd\u7ee7\u627f\u81ea\u6216\u8005\u5f15\u7528 schema\u3002")),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53ef\u9009\u7684 ",(0,l.kt)("strong",{parentName:"p"},"mixin")," \u7ec4\u88c5\u590d\u6742\u7684 schema\uff0c\u5e76\u4f7f\u7528 ",(0,l.kt)("strong",{parentName:"p"},"protocol")," \u4e3a ",(0,l.kt)("strong",{parentName:"p"},"mixin")," \u6dfb\u52a0\u53ef\u9009\u7684\u5bbf\u4e3b\u7c7b\u578b, \u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"for")," \u5173\u952e\u5b57\u4e3a ",(0,l.kt)("strong",{parentName:"p"},"mixin")," \u5b9a\u4e49\u5bbf\u4e3b\u7c7b\u578b\uff0c\u5e76\u4e14\u5728 mixin \u5185\u90e8\u5b83\u5c06\u4ece\u5bbf\u4e3b\u7c7b\u578b\u4e2d\u67e5\u8be2\u5230\u5c5e\u6027\u7684\u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Person:\n    mixin [FullNameMixin]\n\n    firstName: str  # Required\n    lastName: str  # Required\n    fullName?: str  # Optional\n")),(0,l.kt)("p",null,"FullNameMixin \u662f\u4e00\u4e2a\u4ea7\u751f fullName \u5b57\u6bb5\u7684\u7b80\u5355\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'protocol PersonProtocol:\n    firstName: str\n    lastName: str\n    fullName?: str\n    \nmixin FullNameMixin for PersonProtocol:\n    fullName = "{} {}".format(firstName, lastName)\n')),(0,l.kt)("p",null,"\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e0b\u65b9\u5f0f\u83b7\u53d6 schema \u5b9e\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'person = Person {\n    firstName = "John"\n    lastName = "Doe"\n}\n')),(0,l.kt)("p",null,"\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"person:\n  firstName: John\n  lastName: Doe\n  fullName: John Doe\n")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u5bbf\u4e3b\u7c7b\u578b ",(0,l.kt)("strong",{parentName:"p"},"protocol")," \u53ea\u80fd\u7528\u4e8e ",(0,l.kt)("strong",{parentName:"p"},"mixin")," \u7684\u5b9a\u4e49 (\u540e\u7f00\u540d\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"Mixin"),"), \u5426\u5219\u5c06\u4f1a\u62a5\u9519\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"protocol DataProtocol:\n    data: str\n\nschema Data for DataProtocol:  # Error: only schema mixin can inherit from protocol\n    x: str = data\n")),(0,l.kt)("h5",{id:"\u7d22\u5f15\u7b7e\u540d"},"\u7d22\u5f15\u7b7e\u540d"),(0,l.kt)("p",null,"\u5728 KCL schema \u4e2d\u53ef\u4ee5\u5b9a\u4e49\u7d22\u5f15\u7b7e\u540d\uff0c\u8fd9\u610f\u5473\u7740\u7d22\u5f15\u7b7e\u540d\u7684\u952e-\u503c\u7ea6\u675f\u53ef\u7528\u4e8e\u6784\u9020\u5177\u6709 schema \u7c7b\u578b\u7684\u5b57\u5178\u3002\u6216\u8005\u53ef\u4ee5\u5c06\u5176\u4ed6\u68c0\u67e5\u6dfb\u52a0\u5230\u989d\u5916\u7684 schema \u5c5e\u6027\u4e2d\uff0c\u4ee5\u589e\u5f3a KCL \u7c7b\u578b\u548c\u8bed\u4e49\u68c0\u67e5\u3002"),(0,l.kt)("h6",{id:"\u57fa\u672c\u7528\u6cd5"},"\u57fa\u672c\u7528\u6cd5"),(0,l.kt)("p",null,"\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"[{attr_alias}: {key_type}]: {value_type}")," \u7684\u5f62\u5f0f\u53bb\u5b9a\u4e49 schema \u7684\u7c7b\u578b\u6ce8\u89e3\uff0c \u5176\u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"{attr_alias}")," \u53ef\u4ee5\u7701\u7565\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Map:\n    """\n    Map is a schema with a key of str type and a value of str type\n    """\n    [str]: str  # `{attr_alias}` can be omitted.\n\ndata = Map {\n    key1 = "value1"\n    key2 = "value2"\n}\n')),(0,l.kt)("h6",{id:"\u540c\u65f6\u5b9a\u4e49\u5c5e\u6027\u548c\u7d22\u5f15\u7b7e\u540d"},"\u540c\u65f6\u5b9a\u4e49\u5c5e\u6027\u548c\u7d22\u5f15\u7b7e\u540d"),(0,l.kt)("p",null,"\u53ef\u4ee5\u5728 schema \u4e2d\u540c\u65f6\u5b9a\u4e49 schema \u5c5e\u6027\u548c\u7d22\u5f15\u7b7e\u540d\uff0c\u901a\u5e38\u7528\u4e8e\u8868\u793a schema \u4e2d\u989d\u5916\u5c5e\u6027\u7684\u7c7b\u578b\u7ea6\u675f\uff0c\u6bd4\u5982\u5982\u4e0b\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Person:\n    name: str\n    age: int\n    [...str]: str  # Except for the `name` and `age` attributes, the key type of all other attributes of the schema must be `str`, and the value type must also be `str`.\n")),(0,l.kt)("h6",{id:"\u5b9a\u4e49\u7d22\u5f15\u7b7e\u540d\u522b\u540d"},"\u5b9a\u4e49\u7d22\u5f15\u7b7e\u540d\u522b\u540d"),(0,l.kt)("p",null,"\u53ef\u4ee5\u4e3a\u7d22\u5f15\u7b7e\u540d\u5b9a\u4e49\u7c7b\u578b\u6ce8\u89e3\u7684\u5c5e\u6027\u522b\u540d\uff0c\u5e76\u5c06\u5176\u4e0e\u68c0\u67e5\u5757\u4e00\u8d77\u4f7f\u7528\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Data:\n    [dataName: str]: str\n    check:\n        dataName in ["Alice", "Bob", "John"]  # We can use the index signature key name in the check block.\n\ndata = Data {\n    Alice = "10"\n    Bob = "12"\n    Jonn = "8"  # Error: Jonn not in ["Alice", "Bob", "John"]\n}\n')),(0,l.kt)("h5",{id:"\u7ee7\u627f"},"\u7ee7\u627f"),(0,l.kt)("p",null,"\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\uff0cKCL \u63d0\u4f9b\u4e86\u57fa\u7840\u4e14\u6709\u9650\u7684\u9762\u5411\u5bf9\u8c61\u652f\u6301\uff0c\u4f8b\u5982 ",(0,l.kt)("strong",{parentName:"p"},"\u5c5e\u6027\u590d\u7528"),"\uff0c",(0,l.kt)("strong",{parentName:"p"},"\u79c1\u6709\u548c\u516c\u6709\u53d8\u91cf"),"\u548c",(0,l.kt)("strong",{parentName:"p"},"\u5355\u7ee7\u627f"),"\u3002KCL \u4e0d\u652f\u6301\u591a\u7ee7\u627f\u3002"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u662f\u5355\u7ee7\u627f\u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# A person has a first name, a last name and an age.\nschema Person:\n    firstName: str\n    lastName: str\n    # The default value of age is 0\n    age: int = 0\n\n# An employee **is** a person, and has some additional information.\nschema Employee(Person):\n    bankCard: int\n    nationality?: str\n\nemployee = Employee {\n    firstName = "Bob"\n    lastName = "Green"\n    age = 18\n    bankCard = 123456\n}\n')),(0,l.kt)("p",null,"\u7ed3\u679c\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"employee:\n  firstName: Bob\n  lastName: Green\n  age: 18\n  bankCard: 123456\n  nationality: null\n")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0cKCL \u53ea\u652f\u6301 schema \u7684 ",(0,l.kt)("strong",{parentName:"p"},"\u5355\u7ee7\u627f"),"\u3002"),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u5f53 schema \u5b58\u5728\u7ee7\u627f\u5173\u7cfb\u65f6\uff0c\u53ef\u9009\u5c5e\u6027\u7684\u6027\u8d28\u5982\u4e0b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u8be5\u5c5e\u6027\u5728\u57fa\u7c7b schema \u4e2d\u662f\u53ef\u9009\u7684\uff0c\u5219\u5b83\u5728\u5b50\u7c7b schema \u4e2d\u662f\u53ef\u9009\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u5b50\u7c7b schema \u4e2d\u5fc5\u9009\u7684\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u8be5\u5c5e\u6027\u5728\u57fa\u7c7b schema \u4e2d\u662f\u5fc5\u9009\u7684\uff0c\u5219\u5b83\u5728\u5b50\u7c7b schema \u4e2d\u4e5f\u662f\u5fc5\u9009\u7684\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Person:\n    bankCard?: int\n    nationality: str\n\nschema Employee(Person):\n    bankCard: int  # Valid, both `bankCard: int` and `bankCard?: int` are allowed\n    nationality?: str  # Error, only `nationality: str` is allowed\n")),(0,l.kt)("h5",{id:"schema-\u51fd\u6570"},"Schema \u51fd\u6570"),(0,l.kt)("p",null,"schema \u6620\u5c04\u5230\u51fd\u6570\u4e0a\u975e\u5e38\u597d\u7528\uff1b\u5b83\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u8f93\u5165\u548c\u8f93\u51fa\u53c2\u6570\u3002 \u4f8b\u5982\uff0cFibonacci \u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52 schema \u5982\u4e0b\u7f16\u5199\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Fib[n: int]:\n    n1 = n - 1\n    n2 = n - 2\n    if n == 0:\n        value = 0\n    elif n == 1:\n        value = 1\n    else:\n        value = Fib(n1).value + Fib(n2).value\n    \nfib8 = Fib(8).value  # 21\n")),(0,l.kt)("h5",{id:"\u88c5\u9970\u5668"},"\u88c5\u9970\u5668"),(0,l.kt)("p",null,"\u50cf Python \u4e00\u6837, KCL \u652f\u6301\u5728 schema \u4e0a\u4f7f\u7528\u88c5\u9970\u5668\u3002KCL \u88c5\u9970\u5668\u52a8\u6001\u5730\u6539\u53d8 schema \u7684\u529f\u80fd\uff0c\u800c\u4e0d\u5fc5\u76f4\u63a5\u4f7f\u7528\u5b50 schema \u6216\u66f4\u6539\u88ab\u88c5\u9970\u7684 schema \u7684\u6e90\u4ee3\u7801\u3002 \u548c\u51fd\u6570\u8c03\u7528\u4e00\u6837\uff0c\u88c5\u9970\u5668\u652f\u6301\u4f20\u5165\u989d\u5916\u7684\u53c2\u6570\u3002"),(0,l.kt)("p",null,"\u5185\u7f6e\u7684 schema \u88c5\u9970\u5668\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"@deprecated"),"\n\u6807\u8bc6 schema \u6216 schema \u5c5e\u6027\u88ab\u5e9f\u5f03. ",(0,l.kt)("inlineCode",{parentName:"li"},"@deprecated")," \u88c5\u9970\u5668\u652f\u6301\u4e09\u79cd\u53c2\u6570\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"version")," - \u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u8868\u793a\u7248\u672c\u4fe1\u606f\u3002 \u9ed8\u8ba4\u503c\u4e3a\u7a7a\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"reason")," - \u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u8868\u793a\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u539f\u56e0\u3002 \u9ed8\u8ba4\u503c\u4e3a\u7a7a\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"strict")," - bool \u7c7b\u578b\uff0c\u8868\u793a\u662f\u62a5\u9519\u8fd8\u662f\u8b66\u544a\u3002 \u9ed8\u8ba4\u503c\u662f true\u3002 \u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"li"},"strict")," \u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"True")," \u5e76\u4e14\u629b\u51fa\u9519\u8bef\uff0c\u7a0b\u5e8f\u5c06\u88ab\u4e2d\u65ad\u3002 \u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"li"},"strict")," \u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"False"),"\uff0c\u5219\u4f1a\u8f93\u51fa\u8b66\u544a\u5e76\u4e14\u4e0d\u4f1a\u4e2d\u65ad\u7a0b\u5e8f\u3002")))),(0,l.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'@deprecated\nschema ObsoleteSchema:\n    attr: str\n\nschema Person:\n    firstName: str = "John"\n    lastName: str\n    @deprecated(version="1.16", reason="use firstName and lastName instead", strict=True)\n    name: str\n    attrs: ObsoleteSchema = {  # Error: ObsoleteSchema was deprecated\n        attr = "value"\n    }\n\nJohnDoe = Person {  # Error: name was deprecated since version 1.16, use firstName and lastName instead\n    name = "deprecated"\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"@info"),"\n\u7ed9 schema \u6216 schema \u5c5e\u6027\u6807\u8bc6\u989d\u5916\u7684\u4fe1\u606f\uff0c\u652f\u6301\u4efb\u610f\u53c2\u6570\uff0c\u7528\u4e8e\u8bed\u8a00\u9759\u6001\u5206\u6790 schema \u6216 schema \u5c5e\u6027\u7684\u6269\u5c55\u6807\u8bb0\u4fe1\u606f")),(0,l.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'@info(version="v1")\nschema Person:\n    @info(message="name")\n    name: str\n    age: int\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u5f53\u524d\u7248\u672c\u7684 KCL \u5c1a\u4e0d\u652f\u6301\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\u88c5\u9970\u5668\u3002"),(0,l.kt)("h5",{id:"\u6210\u5458\u51fd\u6570"},"\u6210\u5458\u51fd\u6570"),(0,l.kt)("p",null,"\u5185\u7f6e\u51fd\u6570\u548c schema \u6210\u5458"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"instances\uff08\uff09\n\u8fd4\u56de schema \u7684\u73b0\u6709\u5b9e\u4f8b\u5217\u8868\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Person:\n    name: str\n    age: int\n\nalice = Person {\n    name = "Alice"\n    age = 18\n}\n\nbob = Person {\n    name = "Bob"\n    age = 10\n}\n\naliceAndBob = Person.instances()  # Person is a schema type, instances() is its member method\n')),(0,l.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"alice:\n  name: Alice\n  age: 18\nbob:\n  name: Bob\n  age: 10\naliceAndBob:\n- name: Alice\n  age: 18\n- name: Bob\n  age: 10\n")),(0,l.kt)("h3",{id:"\u914d\u7f6e\u64cd\u4f5c"},"\u914d\u7f6e\u64cd\u4f5c"),(0,l.kt)("h4",{id:"\u914d\u7f6e\u5408\u5e76"},"\u914d\u7f6e\u5408\u5e76"),(0,l.kt)("h5",{id:"-\u8fd0\u7b97\u7b26"},"| \u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"\u5728 KCL \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5408\u5e76\u8fd0\u7b97\u7b26 ",(0,l.kt)("inlineCode",{parentName:"p"},"|")," \u6765\u5408\u5e76\u914d\u7f6e\u3002union \u8fd0\u7b97\u7b26\u652f\u6301\u7684\u7c7b\u578b\u5305\u62ec\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"SchemaInstance | SchemaInstance\nSchemaInstance | Dict\nDict | Dict\nList | List\n")),(0,l.kt)("p",null,"\u5408\u5e76\u96c6\u5408\u548c\u7ed3\u6784\u5316\u6570\u636e\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5408\u5e76 List\u3002\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"|")," \u8fd0\u7b97\u7b26\u53f3\u8fb9\u7684\u5217\u8868\u8868\u8fbe\u5f0f\u6309\u7167",(0,l.kt)("strong",{parentName:"li"},"\u7d22\u5f15"),"\u9010\u4e00\u8986\u76d6\u5de6\u8fb9\u5217\u8868\u8868\u8fbe\u5f0f\u4e2d\u7684\u5143\u7d20\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"_a = [1, 2, 3]\n_b = [4, 5, 6, 7]\nx = _a | _b  # [4, 5, 6, 7]  1 -> 4; 2 -> 5; 3 -> 6; Undefined -> 7\n")),(0,l.kt)("p",null,"\u5408\u5e76\u7279\u5b9a\u7d22\u5f15\u6216\u6240\u6709\u5143\u7d20\u4ecd\u5728\u8ba8\u8bba\u4e2d\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5408\u5e76 Dict. \u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"|")," \u8fd0\u7b97\u7b26\u53f3\u8fb9\u7684\u5217\u8868\u8868\u8fbe\u5f0f\u6309\u7167",(0,l.kt)("strong",{parentName:"li"},"\u952e"),"\u9010\u4e00\u8986\u76d6\u5de6\u8fb9\u5217\u8868\u8868\u8fbe\u5f0f\u4e2d\u7684\u5143\u7d20\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'_a = {key1 = "value1"}\n_b = {key1 = "overwrite", key2 = "value2"}\nx = _a | _b  # {"key1": "overwrite", "key2": "value2"}\n')),(0,l.kt)("p",null,"\u96c6\u5408\u548c schema \u7684\u5408\u5e76\u662f\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\uff0c\u5176\u5c5e\u6027\u662f\u5c06 b \u5408\u5e76\u5230 a\uff0c\u4fdd\u7559\u4ece\u5de6\u5230\u53f3\u7684\u64cd\u4f5c\u6570\u987a\u5e8f\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5408\u5e76 schema\u3002Schema \u7684\u5408\u5e76\u4e0e dict \u76f8\u4f3c\u3002")),(0,l.kt)("p",null,"Schema \u7684\u5408\u5e76\u64cd\u4f5c\u5982\u4e0b:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Person:\n    firstName?: str\n    lastName?: str\n\n_a = Person {\n    firstName = "John"\n}\n_b = {lastName = "Doe"}\n_c = _a | _b  # {"firstName": "John", "lastName": "Doe"}\n_d = _a | None  #  {"firstName": "John"}\n_e = _a | Undefined  #  {"firstName": "John"}\n_f = None | _a  #  {"firstName": "John"}\n_g = Undefined | _a  #  {"firstName": "John"}\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u5f53 union \u8fd0\u7b97\u7b26\u7684\u5de6\u53f3\u64cd\u4f5c\u6570\u4e4b\u4e00\u4e3a None \u65f6\uff0c\u5c06\u7acb\u5373\u8fd4\u56de\u53e6\u4e00\u4e2a\u64cd\u4f5c\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'data1 = {key = "value"} | None  # {"key": "value"}\ndata2 = None | [1, 2, 3]  # [1, 2, 3]\ndata3 = None | None  # None\n')),(0,l.kt)("p",null,"\u8f93\u51fa\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"data1:\n  key: value\ndata2:\n- 1\n- 2\n- 3\ndata3: null\n")),(0,l.kt)("h5",{id:"-\u8fd0\u7b97\u7b26-1"},": \u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"\u6a21\u5f0f: ",(0,l.kt)("inlineCode",{parentName:"p"},"identifier : E")),(0,l.kt)("p",null,"\u8868\u8fbe\u5f0f ",(0,l.kt)("inlineCode",{parentName:"p"},"E")," \u7684\u503c\u5c06\u88ab\u5408\u5e76\u5230\u5143\u7d20\u503c\u3002"),(0,l.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Data:\n    labels: {str:} = {key1 = "value1"}\n\ndata = Data {\n    # union {key2: "value2"} into the attribute labels of the schema Data.\n    labels: {key2 = "value2"}\n}\n')),(0,l.kt)("p",null,"\u8f93\u51fa\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"data:\n  labels:\n    key1: value1\n    key2: value2\n")),(0,l.kt)("p",null,"\u9664\u4e86\u5728 schema \u5c5e\u6027\u4e0a\u4f7f\u7528\u5c5e\u6027\u8fd0\u7b97\u7b26\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5c5e\u6027\u8fd0\u7b97\u7b26\u5bf9\u914d\u7f6e\u5757\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"schema \u5916\u90e8\u4f7f\u7528\u5408\u5e76\u8fd0\u7b97\u7b26 ",(0,l.kt)("inlineCode",{parentName:"li"},":"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Data:\n    d1?: int\n    d2?: int\n\nschema Config:\n    data: Data\n\n# This is one configuration that will be merged.\nconfig: Config {\n    data.d1 = 1\n}\n# This is another configuration that will be merged.\nconfig: Config {\n    data.d2 = 2\n}\n")),(0,l.kt)("p",null,"\u4e0e\u5b83\u7b49\u6548\u7684\u914d\u7f6e\u4ee3\u7801\u53ef\u4ee5\u8868\u793a\u4e3a:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Data:\n    d1?: int\n    d2?: int\n\nschema Config:\n    data: Data\n\nconfig: Config {\n    data.d1 = 1\n    data.d2 = 1\n}\n")),(0,l.kt)("p",null,"\u8f93\u51fa\u7ed3\u679c\u4e3a:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"config:\n  data:\n    d1: 1\n    d2: 1\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"schema \u5185\u90e8\u4f7f\u7528\u5408\u5e76\u8fd0\u7b97\u7b26 ",(0,l.kt)("inlineCode",{parentName:"li"},":"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Data:\n    d1?: int\n    d2?: int\n    \nschema Config:\n    # This is one configuration that will be merged.\n    data: Data {\n        d1 = 1\n    }\n    # This is another configuration that will be merged.\n    data: Data {\n        d2 = 1\n    }\n\nconfig: Config {}\n")),(0,l.kt)("h4",{id:"\u914d\u7f6e\u8986\u76d6"},"\u914d\u7f6e\u8986\u76d6"),(0,l.kt)("h5",{id:"-\u8fd0\u7b97\u7b26-2"},"= \u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"\u6a21\u5f0f: ",(0,l.kt)("inlineCode",{parentName:"p"},"identifier = E")),(0,l.kt)("p",null,"\u8868\u8fbe\u5f0f ",(0,l.kt)("inlineCode",{parentName:"p"},"E")," \u7684\u503c\u5c06\u8986\u76d6\u5143\u7d20\u503c\u3002"),(0,l.kt)("p",null,"\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Data:\n    labels: {str:} = {key1 = "value1"}\n\ndata = Data {\n    # override {key2: "value2"} into the attribute labels of the schema Data.\n    labels = {key2 = "value2"}\n}\n')),(0,l.kt)("p",null,"\u8f93\u51fa\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"data:\n  labels:\n    key2: value2\n")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"Undefined")," \u6765\u8986\u76d6\uff0c\u6765\u201c\u5220\u9664\u201d\u5185\u5bb9\u3002\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"p"},"{ a = Undefined }"),"\u3002"),(0,l.kt)("h4",{id:"\u914d\u7f6e\u6dfb\u52a0"},"\u914d\u7f6e\u6dfb\u52a0"),(0,l.kt)("h5",{id:"-\u8fd0\u7b97\u7b26-3"},"+= \u8fd0\u7b97\u7b26"),(0,l.kt)("p",null,"\u6a21\u5f0f: ",(0,l.kt)("inlineCode",{parentName:"p"},"identifier += E")),(0,l.kt)("p",null,"\u63d2\u5165\u53ea\u80fd\u7528\u4e8e\u5217\u8868\u7c7b\u578b\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"identifier"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"E")," \u5c06\u63d2\u5165\u5230\u5217\u8868 ",(0,l.kt)("inlineCode",{parentName:"p"},"identifier")," \u6307\u5b9a\u7d22\u5f15\u540e\uff0c\u5e76\u4e14\u7d22\u5f15\u4ee5\u540e\u7684\u5c5e\u6027\u5c06\u81ea\u52a8\u540e\u79fb\u3002"),(0,l.kt)("p",null,"\u793a\u4f8b:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema Data:\n    labels: {str:} = {key1 = [0]}\n\ndata = Data {\n    # insert [1] into the attribute labels.key1 of the schema Data.\n    labels: {key1 += [1]}\n}\n")),(0,l.kt)("p",null,"\u8f93\u51fa\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"data:\n  labels:\n    key1:\n    - 0\n    - 1\n")),(0,l.kt)("p",null,"\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u7d22\u5f15\uff0c\u5c06\u4f7f\u7528\u6700\u540e\u4e00\u4e2a\u7d22\u5f15\u3002"),(0,l.kt)("h4",{id:"\u6ce8\u610f\u4e8b\u9879"},"\u6ce8\u610f\u4e8b\u9879"),(0,l.kt)("p",null,"\u5408\u5e76\u8fd0\u7b97\u7b26 ",(0,l.kt)("inlineCode",{parentName:"p"},":")," \u662f\u4e00\u4e2a\u53ef\u4ea4\u6362\u7684\u5e42\u7b49\u8fd0\u7b97\u7b26\uff0c\u5f53\u5408\u5e76\u7684\u503c\u53d1\u751f\u503c\u7684\u51b2\u7a81\u65f6\u4f1a\u53d1\u751f\u503c\u51b2\u7a81\u9519\u8bef\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981 ",(0,l.kt)("inlineCode",{parentName:"p"},"=")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"+=")," \u8fd0\u7b97\u7b26\u8868\u793a\u914d\u7f6e\u7684\u8986\u76d6\uff0c\u6dfb\u52a0\u548c\u5220\u9664\u64cd\u4f5c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data0 = {id: 1} | {id: 2}  # Error\uff1aconflicting values between {'id': 2} and {'id': 1}\ndata1 = {id: 1} | {id = 2}  # Ok, the value of `data` is {\"id\": 2}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},":")," \u8fd0\u7b97\u7b26\u51b2\u7a81\u68c0\u67e5\u7684\u89c4\u5219\u5982\u4e0b:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"None")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"Undefined")," \u4e0d\u4e0e\u4efb\u4f55\u503c\u51b2\u7a81")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data0 = None | {id: 1}  # Ok\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e ",(0,l.kt)("inlineCode",{parentName:"li"},"int"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"float"),"\u3001",(0,l.kt)("inlineCode",{parentName:"li"},"str")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"bool")," \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5f53\u5b83\u4eec\u7684\u503c\u4e0d\u76f8\u540c\u65f6\u53d1\u751f\u51b2\u7a81\u9519\u8bef\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'data0 = 1 | 1  # Ok\ndata1 = 1 | "s"  # Error\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u5217\u8868\u7c7b\u578b",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5f53\u5b83\u4eec\u7684\u957f\u5ea6\u4e0d\u76f8\u540c\u65f6\uff0c\u5b83\u4eec\u88ab\u8ba4\u4e3a\u662f\u51b2\u7a81\u7684"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u5b83\u4eec\u7684\u957f\u5ea6\u76f8\u540c\u65f6\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u4eec\u7684\u4efb\u610f\u4e00\u4e2a\u5b50\u5143\u7d20\u503c\u51b2\u7a81\u65f6\uff0c\u5b83\u4eec\u81ea\u8eab\u662f\u51b2\u7a81\u7684")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data0 = [1] | [1]  # Ok\ndata1 = [1, 2] | [1]  # Error\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e dict/schema \u7c7b\u578b",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u76f8\u540c\u7684 key\uff0ckey \u7684\u503c\u51b2\u7a81\u65f6\uff0c\u5b83\u4eec\u81ea\u8eab\u662f\u51b2\u7a81\u7684\uff0c\u5426\u5219\u662f\u4e0d\u51b2\u7a81\u7684")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data0 = {id: 1} | {id: 1}  # Ok\ndata1 = {id: 1} | {id: 2}  # Error\ndata1 = {id: 1} | {idAnother: 1}  # Ok\n")),(0,l.kt)("h3",{id:"rule"},"Rule"),(0,l.kt)("p",null,"KCL \u652f\u6301\u4f7f\u7528 rule \u5173\u952e\u5b57\u5b9a\u4e49\u6821\u9a8c\u5757\uff0c\u53ef\u7528\u4e8e\u6570\u636e\u6821\u9a8c\uff0c\u7528\u6cd5\u7c7b\u4f3c\u4e8e schema \u4e2d\u7684 check \u8868\u8fbe\u5f0f\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'rule SomeRule:\n    age > 0, "rule check failure message"\n')),(0,l.kt)("p",null,"\u53ef\u4ee5\u50cf schema \u5b9e\u4f8b\u5316\u90a3\u6837\u8c03\u7528\u4e00\u4e2a rule \u8fdb\u884c\u6821\u9a8c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'age = 0\nname = "Bob"\nrule SomeRule:\n    age > 0, "rule check failure message"\n    name == "Alice"\n\nrule1 = SomeRule()  # Rule call \nrule2 = SomeRule {}\n')),(0,l.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528 protocol \u548c for \u7ed1\u5b9a\u8bed\u53e5\u4e3a rule \u589e\u52a0\u7c7b\u578b\u7ea6\u675f:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# Schema definition\nprotocol Service:\n    clusterIp: str\n    $type: str\n\n# Schema definition\nprotocol Volume:\n    mountPath: [str]\n\n# Protocol\nprotocol SomeProtocol:\n    id: int\n    env: {str: any}\n    services: [Service]\n    volumes: [Volume]\n\nrule SomeChecker for SomeProtocol:\n    id > 0, "id must >0"\n\n    all service in services {\n        service.clusterIP == "NONE" if service.type == "ClusterIP"\n    }\n\n    any volume in volumes {\n        volume.mountPath in ["/home/admin", "/home/myapp"]\n    }\n\n# Call rule to check with config parameter\nSomeChecker {\n    id = 1\n    env = {\n        MY_ENV = "MY_ENV_VALUE"\n    }\n    services = [\n        {\n            type = "ClusterIP"\n            clusterIP = "NONE"\n        }\n    ]\n    volumes = [\n        {\n            mountPath = "/home/admin"\n        }\n        {\n            mountPath = "/home/myapp"\n        }\n    ]\n}\n')),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"protocol")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"rule")," \u7684\u7ec4\u5408\u65b9\u5f0f\u53ef\u4ee5\u4f7f\u5c5e\u6027\u548c\u5176\u7ea6\u675f\u5b9a\u4e49\u8fdb\u884c\u5206\u79bb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5305\u4e2d\u5b9a\u4e49\u4e0d\u540c\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"rule")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"protocol")," \u6309\u9700\u8fdb\u884c\u7ec4\u5408\uff0c\u8fd9\u4e0e schema \u4e2d\u7684 check \u8868\u8fbe\u5f0f\u53ea\u80fd\u4e0e schema \u5c5e\u6027\u5b9a\u4e49\u5728\u4e00\u8d77\u662f\u4e0d\u540c\u7684\u3002"),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u6709\u4e24\u79cd\u590d\u7528\u4e0d\u540c rule \u7684\u65b9\u5f0f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u76f4\u63a5\u8c03\u7528")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'weather = "sunny"\nday = "wednesday"\n\nrule IsSunny:\n    weather == "sunny"\n\nrule IsWednesday:\n    day == "wednesday"\n\nrule Main:\n    IsSunny()  # Rule inline call\n    IsWednesday()  # Rule inline call\n\nMain()  # Rule call\n')),(0,l.kt)("p",null,"\u4f7f\u7528 rule \u7684\u7ee7\u627f (rule \u4e0d\u540c\u4e8e schema, \u53ef\u4ee5\u591a\u7ee7\u627f\u6df7\u7528)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'weather = "sunny"\nday = "wednesday"\n\nrule IsSunny:\n    weather == "sunny"\n\nrule IsWednesday:\n    day == "wednesday"\n\nrule Main(IsSunny, IsWednesday):\n    id == 1\n\nMain()\n')),(0,l.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528 option \u51fd\u6570\u4e0e\u547d\u4ee4\u884c ",(0,l.kt)("inlineCode",{parentName:"p"},"-D")," \u53c2\u6570\u83b7\u5f97\u5916\u90e8\u6570\u636e\u8fdb\u884c\u6821\u9a8c"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Day:\n    day: str\n    homework: str\n\ndays: [Day] = option("days")\n\nrule Main:\n    filter d in days {\n        d.day not in ["saturday", "sunday"] and d.homework\n    }\n\nMain()\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u590d\u6742\u4f8b\u5b50")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'data = option("data")\ninput = option("input")\n\nrule Allow:\n    UserIsAdmin()\n    any grant in UserIsGranted() {\n        input.action == grant.action and input.type == grant.type\n    }\n\nrule UserIsAdmin:\n    any user in data.user_roles[input.user] {\n        user == "admin"\n    }\n\nrule UserIsGranted:\n    [\n        grant\n        for role in data.user_roles[input.user]\n        for grant in data.role_grants[role]\n    ]\n\nallow = Allow() or False\n')),(0,l.kt)("h3",{id:"\u6a21\u5757"},"\u6a21\u5757"),(0,l.kt)("p",null,"KCL \u914d\u7f6e\u6587\u4ef6\u4ee5 ",(0,l.kt)("strong",{parentName:"p"},"\u6a21\u5757")," \u5f62\u5f0f\u7ec4\u7ec7\u3002 \u5355\u4e2a KCL \u6587\u4ef6\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a module\uff0c\u4e00\u4e2a\u76ee\u5f55\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5305\u3002"),(0,l.kt)("p",null,"\u540c\u4e00\u4e2a\u5305\u5185\u7684\u6a21\u5757\u662f\u53ef\u89c1\u7684\uff0c\u8de8\u5305\u5f15\u7528\u9700\u8981\u901a\u8fc7\u5bfc\u5165\u53ef\u89c1\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},". \n\u2514\u2500\u2500 root\n    \u251c\u2500\u2500 model\n    \u2502   \u251c\u2500\u2500 model1.k\n    |   \u251c\u2500\u2500 model2.k\n    \u2502   \u2514\u2500\u2500 main.k\n    \u251c\u2500\u2500 service\n    \u2502   \u2514\u2500\u2500 service1.k\n    \u2514\u2500\u2500 mixin\n        \u2514\u2500\u2500 mixin1.k\n")),(0,l.kt)("p",null,"model1.k:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# schema CatalogItem in model1.k\n\nschema CatalogItem:\n    id: int\n    image: CatalogItemImage  # CatalogItemImage is defined in the module of the same package e.g., model2.k in package model\n    title: str\n")),(0,l.kt)("p",null,"service1.k:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import ..model as model  # cross-package references\n\nschema ImageService:\n    image: model.CatalogItemImage  # CatalogItemImage is imported from another package e.g., model2.k in package model\n    name: str\n")),(0,l.kt)("h4",{id:"\u76f8\u5bf9\u8def\u5f84\u5f15\u7528"},"\u76f8\u5bf9\u8def\u5f84\u5f15\u7528"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},".")," \u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0 KCL \u5165\u53e3\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84\u5bfc\u5165\u3002"),(0,l.kt)("p",null,"main.k:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import .model1  # Current directory module\nimport ..service  # Parent directory\nimport ...root  # Parent of parent directory\n\ns = service.ImageService {}\nm = root.Schema {}\n")),(0,l.kt)("h4",{id:"\u7edd\u5bf9\u8def\u5f84\u5f15\u7528"},"\u7edd\u5bf9\u8def\u5f84\u5f15\u7528"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"import a.b.c.d")," \u7684\u8bed\u4e49\u4e3a\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"li"},"kcl.mod")," \u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5c06\u5f53\u524d\u76ee\u5f55\u4f5c\u4e3a\u5305\u7684\u6839\u8def\u5f84\uff0c\u5e76\u4ece\u5f53\u524d\u76ee\u524d\u67e5\u627e ",(0,l.kt)("inlineCode",{parentName:"li"},"a/b/c/d")," \u8def\u5f84"),(0,l.kt)("li",{parentName:"ol"},"\u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"li"},"kcl.mod")," \u6587\u4ef6\u5b58\u5728\uff0c\u4ece ",(0,l.kt)("inlineCode",{parentName:"li"},"ROOT_PATH/a/b/c/d")," \u67e5\u627e\uff0c\u5426\u5219\u629b\u51fa\u4e00\u4e2a\u5bfc\u5165\u9519\u8bef")),(0,l.kt)("p",null,"\u6839\u8def\u5f84 ",(0,l.kt)("inlineCode",{parentName:"p"},"ROOT_PATH")," \u7684\u5b9a\u4e49\u4e3a\uff1a"),(0,l.kt)("p",null,"\u4ece\u5f53\u524d\u76ee\u5f55\u6216\u8005\u7236\u7ea7\u76ee\u5f55\u4e2d\u67e5\u627e ",(0,l.kt)("inlineCode",{parentName:"p"},"kcl.mod")," \u6587\u4ef6\u5bf9\u5e94\u7684\u76ee\u5f55\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},". \n\u2514\u2500\u2500 root\n    \u251c\u2500\u2500 kcl.mod\n    \u251c\u2500\u2500 model\n    \u2502   \u251c\u2500\u2500 model1.k\n    |   \u251c\u2500\u2500 model2.k\n    \u2502   \u2514\u2500\u2500 main.k\n    \u251c\u2500\u2500 service\n    \u2502   \u2514\u2500\u2500 service1.k\n    \u2514\u2500\u2500 mixin\n        \u2514\u2500\u2500 mixin1.k\n")),(0,l.kt)("p",null,"main.k:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import service  # `root package` and `kcl.mod` are in the same directory\nimport mixin  # `root package` and `kcl.mod` are in the same directory\n\nmyModel = model.CatalogItem {}\n")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u5bf9\u4e8e KCL \u5165\u53e3\u6587\u4ef6 ",(0,l.kt)("inlineCode",{parentName:"p"},"main.k"),"\uff0c\u4e0d\u80fd\u5bfc\u5165\u6240\u5728\u6587\u4ef6\u5939\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u9012\u5f52\u5bfc\u5165\u9519\u8bef\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import model  # Error: recursively loading\n")),(0,l.kt)("h3",{id:"\u52a8\u6001\u53c2\u6570"},"\u52a8\u6001\u53c2\u6570"),(0,l.kt)("p",null,"\u5047\u8bbe\u67d0\u4e9b\u5b57\u6bb5\u9700\u8981\u50cf\u7528\u6237\u8f93\u5165\u4e00\u6837\u52a8\u6001\u4f20\u5165\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6a21\u5757\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u52a8\u6001\u53c2\u6570\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'bankCard = option("bankCard")  # Get bankCard through the option function.\n')),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u5982\u4e0b\u4f7f\u7528 module\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl employee.k -D bankCard=123\n")),(0,l.kt)("p",null,"\u76ee\u524d\uff0c\u652f\u6301\u9876\u7ea7\u53c2\u6570\u7684\u7c7b\u578b\u6709\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u3001\u5e03\u5c14\u3001\u5217\u8868\u548c\u5b57\u5178\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl main.k -D list_key='[1,2,3]' -D dict_key='{\"key\":\"value\"}' \n")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u547d\u4ee4\u884c\u4e2d\u5f15\u53f7 ",(0,l.kt)("inlineCode",{parentName:"p"},'"')," \u7b49\u7b26\u53f7\u9700\u8981\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"\\")," \u8fdb\u884c\u8f6c\u4e49"),(0,l.kt)("h4",{id:"setting-\u6587\u4ef6\u5f62\u5f0f\u7684\u53c2\u6570"},"Setting \u6587\u4ef6\u5f62\u5f0f\u7684\u53c2\u6570"),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u5b83\u8fd8\u652f\u6301\u8f93\u5165\u4e00\u4e2a YAML \u6587\u4ef6\u4f5c\u4e3a\u9876\u7ea7\u53c2\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"kcl_options:\n  - key: key_number\n    value: 1\n  - key: key_dict\n    value:\n      innerDictKey:  innerDictValue\n  - key: key_list\n    value:\n      - 1\n      - 2\n      - 3\n  - key: bankCard\n    value: 123\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl -Y setting.yaml employee.k\n")),(0,l.kt)("p",null,"\u6b64\u5916\uff0csetting \u6587\u4ef6\u8fd8\u652f\u6301\u914d\u7f6e\u547d\u4ee4\u884c\u7f16\u8bd1\u53c2\u6570\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"kcl_cli_configs:\n  files:\n    - file1.k\n    - file2.k\n  disable_none: true\n  strict_range_check: true\n  debug: 1\n  verbose: 1\n  output: ./stdout.golden\nkcl_options:\n  - key: image\n    value: docker.io/kusion:latest\n")),(0,l.kt)("p",null,"KCL CLI -Y \u53c2\u6570\u8fd8\u652f\u6301\u591a\u6587\u4ef6\u914d\u7f6e\uff0c\u5e76\u652f\u6301\u7f16\u8bd1\u53c2\u6570\u548c\u9876\u7ea7\u53c2\u6570\u7684\u5355\u72ec\u5199\u5165\u4e0e\u5408\u5e76\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl -Y compile_setting.yaml option_setting.yaml\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"compile_setting.yaml"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"kcl_cli_configs:\n  files:\n    - file1.k\n    - file2.k\n  disable_none: true\n  strict_range_check: true\n  debug: 1\n  verbose: 1\n  output: ./stdout.golden\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"option_setting.yaml"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"kcl_options:\n  - key: image\n    value: docker.io/kusion:latest\n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6307\u4ee4\u83b7\u53d6\u6bcf\u4e2a\u53c2\u6570\u7684\u542b\u4e49"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl --help\n")),(0,l.kt)("h4",{id:"option-functions"},"Option Functions"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u5728 KCL \u4ee3\u7801\u4e2d\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"option")," \u83b7\u53d6\u9876\u7ea7\u53c2\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'value = option(key="key", type=\'str\', default="default_value", required=True, help="Set key value")\n')),(0,l.kt)("p",null,"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"key"),": \u53c2\u6570\u7684\u952e\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"type"),": \u8981\u8f6c\u6362\u7684\u53c2\u6570\u7c7b\u578b\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"default"),": \u53c2\u6570\u9ed8\u8ba4\u503c\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"required"),": \u5f53\u672a\u63d0\u4f9b\u53c2\u6570\u4e14\u53c2\u6570\u7684 required \u4e3a True \u662f\u62a5\u544a\u9519\u8bef\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"help"),": \u5e2e\u52a9\u4fe1\u606f\u3002")),(0,l.kt)("h3",{id:"\u591a\u6587\u4ef6\u7f16\u8bd1"},"\u591a\u6587\u4ef6\u7f16\u8bd1"),(0,l.kt)("p",null,"\u9664\u4e86\u4e0a\u9762\u7684 KCL \u5355\u6587\u4ef6\u6267\u884c\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u540c\u65f6\u7f16\u8bd1\u591a\u4e2a KCL \u5165\u53e3\u6587\u4ef6\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl main_1.k main_2.k ... main_n.k\n")),(0,l.kt)("p",null,"main_1.k"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"a = 1\nb = 2\n")),(0,l.kt)("p",null,"main_2.k"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"c = 3\nd = 4\n")),(0,l.kt)("p",null,"\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"a: 1\nb: 2\nc: 3\nd: 4\n")),(0,l.kt)("p",null,"\u5229\u7528",(0,l.kt)("strong",{parentName:"p"},"\u591a\u6587\u4ef6\u7f16\u8bd1"),"\uff0c\u6211\u4eec\u53ef\u4ee5\u7ec4\u5408\u591a\u4e2a KCL \u6587\u4ef6\uff0c\u800c\u65e0\u9700\u4f7f\u7528 import \u7ba1\u7406\u6587\u4ef6\u3002 \u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7ed3\u5408",(0,l.kt)("strong",{parentName:"p"},"\u591a\u6587\u4ef6\u7f16\u8bd1"),"\u548c ",(0,l.kt)("strong",{parentName:"p"},"schema \u5b9e\u4f8b"),"\u7684\u4f8b\u5b50\u3002"),(0,l.kt)("p",null,"model.k"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Model:\n    name: str\n    labels?: {str:}\n    annotations?: {str:}\n    replicas: int\n\n_model1 = Model {\n    name = "model1"\n    labels.key1 = "value1"\n    labels.key2 = "value2"\n    annotations.key = "value"\n    replicas = 2\n}\n\n_model2 = Model {\n    name = "model2"\n    replicas = 3\n}\n')),(0,l.kt)("p",null,"backend.k"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import yaml\n\nschema Backend:\n    apiVersion: str = "v1"\n    kind: str = "Deployment"\n    metadata: {str:}\n    spec: {str:} = {\n        minReadySeconds = 0\n        paused = False\n        progressDeadlineSeconds = 600\n        replicas = 1\n        revisionHistoryLimit = 10\n        selector = {}  \n    }\n\n_backends = [Backend {\n    metadata.name = model.name\n    metadata.labels = model.labels\n    metadata.annotations = model.annotations\n    spec.selector.matchLabels: model.labels\n    spec.replicas = model.replicas\n} for model in Model.instances()]  # Schema Model is defined in model.k\nprint("---\\n".join([yaml.encode(_b, ignore_private=True) for _b in _backends]))\n')),(0,l.kt)("p",null,"\u547d\u4ee4\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl model.k backend.k\n")),(0,l.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Deployment\nmetadata:\n  name: model1\n  labels:\n    key1: value1\n    key2: value2\n  annotations:\n    key: value\nspec:\n  minReadySeconds: 0\n  paused: false\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      key1: value1\n      key2: value2\n---\napiVersion: v1\nkind: Deployment\nmetadata:\n  name: model2\nspec:\n  minReadySeconds: 0\n  paused: false\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector: {}\n")),(0,l.kt)("h3",{id:"kcl-\u53d8\u91cf\u67e5\u8be2"},"KCL \u53d8\u91cf\u67e5\u8be2"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u5728 KCL CLI \u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"-S|--path-selector")," \u53c2\u6570\u4ece KCL \u6a21\u578b\u4e2d\u67e5\u8be2\u4e00\u4e2a\u6216\u591a\u4e2a\u503c\u3002"),(0,l.kt)("p",null,"\u53d8\u91cf\u67e5\u8be2\u5f62\u5f0f\u5982\u4e0b\uff1a"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pkg:var.name")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5728\u5305\u4e2d\u6309\u540d\u79f0\u9009\u62e9\u8282\u70b9 ",(0,l.kt)("inlineCode",{parentName:"li"},"pkg"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pkg:var.{name1,name2}")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5728\u5305\u4e2d\u9009\u62e9\u591a\u4e2a\u8282\u70b9 ",(0,l.kt)("inlineCode",{parentName:"li"},"pkg"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pkg:var.*")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u9009\u62e9\u5305\u4e2d\u7ed9\u5b9a\u7ea7\u522b\u7684\u6240\u6709\u8282\u70b9 ",(0,l.kt)("inlineCode",{parentName:"li"},"pkg"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pkg:var.[index]")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u9009\u62e9\u5305 ",(0,l.kt)("inlineCode",{parentName:"li"},"pkg")," \u4e2d\u5217\u8868 ",(0,l.kt)("inlineCode",{parentName:"li"},"var")," \u7531 ",(0,l.kt)("inlineCode",{parentName:"li"},"index")," \u7d22\u5f15\u7684\u5143\u7d20")),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0cKCL \u53d8\u91cf\u901a\u8fc7\u5305\u540d\u548c\u53d8\u91cf\u6807\u8bc6\u7b26 ",(0,l.kt)("inlineCode",{parentName:"p"},"pkg:identifier")," \u7684\u7ec4\u5408\u6765\u786e\u4fdd\u5168\u5c40\u552f\u4e00\u6027\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u540c\u65f6\u6307\u5b9a ",(0,l.kt)("inlineCode",{parentName:"p"},"pkg")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"identifier"),"\u3002 \u7701\u7565\u53c2\u6570 ",(0,l.kt)("inlineCode",{parentName:"p"},"pkg")," \u65f6\uff0c\u8868\u793a\u4ece\u5f53\u524d\u8def\u5f84\u7684\u5165\u53e3\u6587\u4ef6\u4e2d\u67e5\u627e\u53d8\u91cf\u3002"),(0,l.kt)("h4",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,l.kt)("p",null,"Code structure:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 kcl.mod\n\u2514\u2500\u2500 main.k\n    \u2514\u2500\u2500 pkg\n        \u2514\u2500\u2500 model.k\n")),(0,l.kt)("p",null,"pkg/model.k:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Person:\n    name: str\n    age: int\n\nvar = Person {\n    name = "Alice"\n    age = 18\n}\n')),(0,l.kt)("p",null,"main.k"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import pkg\n\nvar = pkg.Person {\n    name = "Bob"\n    age = 10\n}\n')),(0,l.kt)("p",null,"\u547d\u4ee4\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl main.k -S pkg:var -S :var.name\n")),(0,l.kt)("p",null,"\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"var:\n  name: Bob\n---\nvar:\n  name: Alice\n  age: 18\n")),(0,l.kt)("h3",{id:"kcl-\u53d8\u91cf\u4fee\u6539"},"KCL \u53d8\u91cf\u4fee\u6539"),(0,l.kt)("p",null,"\u9664\u4e86\u53d8\u91cf\u67e5\u8be2\uff0cKCL \u8fd8\u5141\u8bb8\u6211\u4eec\u901a\u8fc7 KCL CLI \u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"-O|--overrides")," \u53c2\u6570\u76f4\u63a5\u4fee\u6539\u914d\u7f6e\u6a21\u578b\u4e2d\u7684\u503c\u3002"),(0,l.kt)("p",null,"\u53d8\u91cf\u4fee\u6539\u53c2\u6570\u7684\u4f7f\u7528\u4e0e\u53d8\u91cf\u67e5\u8be2\u7c7b\u4f3c\uff0c\u53c2\u6570\u5305\u542b\u4e09\u90e8\u5206\uff0c\u5982 ",(0,l.kt)("inlineCode",{parentName:"p"},"pkg"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"identifier"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"attribute")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"override_value")," ."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl main.k -O override_spec\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"override_spec"),": \u8868\u793a\u9700\u8981\u4fee\u6539\u7684\u914d\u7f6e\u6a21\u578b\u5b57\u6bb5\u548c\u503c\u7684\u7edf\u4e00\u8868\u793a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'override_spec: [[pkgpath] ":"] identifier ("=" value | "-")\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pkgpath"),": \u8868\u793a\u9700\u8981\u4fee\u6539\u6807\u8bc6\u7b26\u7684\u5305\u8def\u5f84\uff0c\u901a\u5e38\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"a.b.c")," \u7684\u5f62\u5f0f\uff0c\u5bf9\u4e8e main \u5305\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"pkgpath")," \u8868\u793a\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"__main__"),", \u53ef\u7701\u7565\uff0c\u7701\u7565\u4e0d\u5199\u65f6\u8868\u793a main \u5305"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"identifier"),": \u8868\u793a\u9700\u8981\u4fee\u6539\u914d\u7f6e\u7684\u6807\u8bc6\u7b26\uff0c\u901a\u5e38\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"a.b.c")," \u7684\u5f62\u5f0f"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value"),": \u8868\u793a\u9700\u8981\u4fee\u6539\u914d\u7f6e\u7684\u503c\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u5408\u6cd5\u7684 KCL \u8868\u8fbe\u5f0f\uff0c\u6bd4\u5982\u6570\u5b57/\u5b57\u7b26\u4e32\u5b57\u9762\u503c\uff0clist/dict/schema \u8868\u8fbe\u5f0f\u7b49"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"="),": \u8868\u793a\u4fee\u6539identifier\u7684\u503c",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5f53 identifier \u5b58\u5728\u65f6\uff0c\u4fee\u6539\u5df2\u6709 identifier\u7684\u503c\u4e3a value"),(0,l.kt)("li",{parentName:"ul"},"\u5f53 identifier \u4e0d\u5b58\u5728\u65f6\uff0c\u6dfb\u52a0 identifier\u5c5e\u6027\uff0c\u5e76\u5c06\u5176\u503c\u8bbe\u7f6e\u4e3a value"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-"),": \u8868\u793a\u5220\u9664 identifier\u5c5e\u6027",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5f53 identifier \u5b58\u5728\u65f6\uff0c\u76f4\u63a5\u8fdb\u884c\u5220\u9664"),(0,l.kt)("li",{parentName:"ul"},"\u5f53 identifier \u4e0d\u5b58\u5728\u65f6\uff0c\u5bf9\u914d\u7f6e\u4e0d\u4f5c\u4efb\u4f55\u4fee\u6539")))),(0,l.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u5f53 ",(0,l.kt)("inlineCode",{parentName:"p"},"identifier")," \u51fa\u73b0\u591a\u6b21\u65f6\uff0c\u4fee\u6539/\u5220\u9664\u5168\u90e8 ",(0,l.kt)("inlineCode",{parentName:"p"},"identifier")," \u7684\u503c"),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u5728 KCL \u4e2d\u8fd8\u63d0\u4f9b\u4e86 API \u7528\u4e8e\u53d8\u91cf\u67e5\u8be2\u548c\u4fee\u6539\uff0c\u8be6\u89c1 ",(0,l.kt)("a",{parentName:"p",href:"/zh-CN/docs/0.4.4/reference/xlang-api/go-api"},"API \u6587\u6863")),(0,l.kt)("h4",{id:"\u793a\u4f8b-1"},"\u793a\u4f8b"),(0,l.kt)("h5",{id:"\u4fee\u6539\u793a\u4f8b"},"\u4fee\u6539\u793a\u4f8b"),(0,l.kt)("p",null,"KCL \u4ee3\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Person:\n    name: str\n    age: int\n\nperson = Person {\n    name = "Alice"\n    age = 18\n}\n')),(0,l.kt)("p",null,"\u547d\u4ee4\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl main.k -O :person.name=Bob -O :person.age=10\n")),(0,l.kt)("p",null,"\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"person:\n  name: Bob\n  age: 10\n")),(0,l.kt)("p",null,"\u6b64\u5916\uff0c\u5f53\u6211\u4eec\u4f7f\u7528 KCL CLI ",(0,l.kt)("inlineCode",{parentName:"p"},"-d")," \u53c2\u6570\u65f6\uff0cKCL \u6587\u4ef6\u5c06\u540c\u65f6\u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl main.k -O :person.name=Bob -O :person.age=10 -d\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Person:\n    name: str\n    age: int\n\nperson = Person {\n    name = "Bob"\n    age = 10\n}\n')),(0,l.kt)("h5",{id:"\u5220\u9664\u793a\u4f8b"},"\u5220\u9664\u793a\u4f8b"),(0,l.kt)("p",null,"KCL \u4ee3\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Config:\n    x?: int = 1\n    y?: str = "s"\n    \nconfig = Config {\n    x = 2\n}\n')),(0,l.kt)("p",null,"\u547d\u4ee4\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kcl main.k -O config.x-\n")),(0,l.kt)("p",null,"\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"config:\n  x: 1\n  y: s\n")),(0,l.kt)("h3",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,l.kt)("p",null,"\u672c\u9875\u603b\u7ed3\u4e86 KCL \u8bed\u8a00\u4e2d\u7684\u5e38\u7528\u529f\u80fd\u3002 KCL \u4f5c\u4e3a\u4e00\u79cd\u65b0\u7684\u8bed\u8a00\uff0c\u4f1a\u6839\u636e\u914d\u7f6e\u573a\u666f\u7684\u9700\u6c42\uff0c\u9010\u6b65\u589e\u52a0\u529f\u80fd\u7279\u6027\u3002"))}u.isMDXComponent=!0}}]);