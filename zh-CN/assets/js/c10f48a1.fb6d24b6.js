"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57946],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),k=l,d=u["".concat(i,".").concat(k)]||u[k]||m[k]||r;return n?a.createElement(d,s(s({ref:t},c),{},{components:n})):a.createElement(d,s({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,s=new Array(r);s[0]=k;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:l,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},85175:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(87462),l=(n(67294),n(3905));const r={sidebar_position:5},s="\u6d4b\u8bd5\u5de5\u5177",o={unversionedId:"tools/cli/kcl/test",id:"version-0.4.3/tools/cli/kcl/test",title:"\u6d4b\u8bd5\u5de5\u5177",description:"\u7b80\u4ecb",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/version-0.4.3/tools/cli/kcl/test.md",sourceDirName:"tools/cli/kcl",slug:"/tools/cli/kcl/test",permalink:"/zh-CN/docs/0.4.3/tools/cli/kcl/test",draft:!1,editUrl:"https://github.com/kcl-lang/kcl-lang.io/tree/main/versioned_docs/version-0.4.3/tools/cli/kcl/test.md",tags:[],version:"0.4.3",lastUpdatedBy:"Peefy",lastUpdatedAt:1670848269,formattedLastUpdatedAt:"2022\u5e7412\u670812\u65e5",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tools",previous:{title:"\u6587\u6863\u751f\u6210\u5de5\u5177",permalink:"/zh-CN/docs/0.4.3/tools/cli/kcl/docgen"},next:{title:"OpenAPI \u5de5\u5177",permalink:"/zh-CN/docs/0.4.3/tools/cli/openapi/"}},i={},p=[{value:"\u7b80\u4ecb",id:"\u7b80\u4ecb",level:2},{value:"\u4f7f\u7528\u65b9\u5f0f",id:"\u4f7f\u7528\u65b9\u5f0f",level:2},{value:"\u5931\u8d25\u7684\u6d4b\u8bd5",id:"\u5931\u8d25\u7684\u6d4b\u8bd5",level:2},{value:"\u914d\u7f6e option \u53c2\u6570",id:"\u914d\u7f6e-option-\u53c2\u6570",level:2},{value:"\u6d4b\u8bd5\u63d2\u4ef6",id:"\u6d4b\u8bd5\u63d2\u4ef6",level:2},{value:"\u96c6\u6210\u6d4b\u8bd5",id:"\u96c6\u6210\u6d4b\u8bd5",level:2},{value:"\u6279\u91cf\u6d4b\u8bd5",id:"\u6279\u91cf\u6d4b\u8bd5",level:2},{value:"\u547d\u4ee4\u884c\u53c2\u6570",id:"\u547d\u4ee4\u884c\u53c2\u6570",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u6d4b\u8bd5\u5de5\u5177"},"\u6d4b\u8bd5\u5de5\u5177"),(0,l.kt)("h2",{id:"\u7b80\u4ecb"},"\u7b80\u4ecb"),(0,l.kt)("p",null,"KCL \u652f\u6301\u901a\u8fc7\u5185\u7f6e\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"kcl-test")," \u547d\u4ee4\u884c\u5de5\u5177\u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"testing")," \u5305\u63d0\u4f9b\u4e86\u7b80\u6613\u7684\u6d4b\u8bd5\u6846\u67b6\u3002\u6bcf\u4e2a\u76ee\u5f55\u4e0b\u7684\u5168\u90e8 KCL \u6587\u4ef6\u662f\u4e00\u4e2a\u6d4b\u8bd5\u6574\u4f53\uff0c\u6bcf\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"_test.k")," \u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"Test")," \u5f00\u5934\u7684 schema \u662f\u4e00\u4e2a\u6d4b\u8bd5\u6848\u4f8b\u3002"),(0,l.kt)("h2",{id:"\u4f7f\u7528\u65b9\u5f0f"},"\u4f7f\u7528\u65b9\u5f0f"),(0,l.kt)("p",null,"\u5047\u8bbe\u6709 hello.k \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema Person:\n    name: str = "kcl"\n    age: int = 1\n\nhello = Person {\n    name = "hello kcl"\n    age = 102\n}\n')),(0,l.kt)("p",null,"\u6784\u9020 hello_test.k \u6d4b\u8bd5\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"schema TestPerson:\n    a = Person{}\n    assert a.name == 'kcl'\n\nschema TestPerson_age:\n    a = Person{}\n    assert a.age == 1\n\nschema TestPerson_ok:\n    a = Person{}\n    assert a.name == \"kcl\"\n    assert a.age == 1\n")),(0,l.kt)("p",null,"\u7136\u540e\u518d\u76ee\u5f55\u4e0b\u6267\u884c ",(0,l.kt)("inlineCode",{parentName:"p"},"kcl-test")," \u547d\u4ee4:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ kcl-test\nok   /pkg/to/app [365.154142ms]\n$ \n")),(0,l.kt)("h2",{id:"\u5931\u8d25\u7684\u6d4b\u8bd5"},"\u5931\u8d25\u7684\u6d4b\u8bd5"),(0,l.kt)("p",null,"\u5c06 hello_test.k \u6d4b\u8bd5\u4ee3\u7801\u4fee\u6539\u5982\u4e0b\uff0c\u6784\u9020\u5931\u8d25\u7684\u6d4b\u8bd5\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Copyright 2021 The KCL Authors. All rights reserved.\n\nimport testing\n\nschema TestPerson:\n    a = Person{}\n    assert a.name == 'kcl2'\n\nschema TestPerson_age:\n    a = Person{}\n    assert a.age == 123\n\nschema TestPerson_ok:\n    a = Person{}\n    assert a.name == \"kcl2\"\n    assert a.age == 1\n")),(0,l.kt)("p",null,"\u6d4b\u8bd5\u8f93\u51fa\u7684\u9519\u8bef\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ kcl-test\nFAIL /pkg/to/app [354.153775ms]\n---- <TestPerson> failed [48.817552ms]\n     KCL Runtime Error: File /pkg/to/app/hello_test.k:7:\n             assert a.name == 'kcl2'\n     Assertion failure\n---- <TestPerson_age> failed [47.515009ms]\n     KCL Runtime Error: File /pkg/to/app/hello_test.k:11:\n             assert a.age == 123\n     Assertion failure\n---- <TestPerson_ok> failed [47.26677ms]\n     KCL Runtime Error: File /pkg/to/app/hello_test.k:15:\n             assert a.name == \"kcl2\"\n     Assertion failure\n$\n")),(0,l.kt)("h2",{id:"\u914d\u7f6e-option-\u53c2\u6570"},"\u914d\u7f6e option \u53c2\u6570"),(0,l.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7 testing \u5305\u6307\u5b9a\u9762\u503c\u7c7b\u578b\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'schema TestOptions:\n    testing.arguments("name", "ktest")\n    testing.arguments("age", "123")\n    testing.arguments("int0", 0)\n    testing.arguments("float0", 0.0)\n    testing.arguments("bool-true", True)\n    testing.arguments("bool-false", False)\n\n    name = option("name")\n    assert name == "ktest"\n\n    age = option("age")\n    assert age == 123\n\n    assert option("int0") == 0\n    assert option("float0") == 0.0\n    assert option("bool-true") == True\n    assert option("bool-false") == False\n')),(0,l.kt)("p",null,"\u5176\u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"testing.arguments")," \u5b9a\u4e49\u4e00\u7ec4 key-value \u53c2\u6570\uff0c\u53ea\u6709\u5728\u5f53\u524d\u7684\u6d4b\u8bd5\u4e2d\u6709\u6548\u3002"),(0,l.kt)("p",null,"option \u53c2\u6570\u4e5f\u53ef\u4ee5\u4ece settings.yaml \u6587\u4ef6\u8bfb\u53d6\u3002\u5047\u8bbe\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"./settings.yaml")," \u6587\u4ef6\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"  - key: app-name\n    value: app\n  - key: env-type\n    value: prod\n  - key: image\n    value: reg.docker.inc.com/test-image\n")),(0,l.kt)("p",null,"\u7136\u540e\u53ef\u4ee5\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},'testing.setting_file("./settings.yaml")')," \u65b9\u5f0f\u914d\u7f6e\u53c2\u6570\u3002\u540c\u65f6\u4f9d\u7136\u652f\u6301 ",(0,l.kt)("inlineCode",{parentName:"p"},"testing.arguments()")," \u8986\u76d6\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'schema TestOptions_setting:\n    testing.setting_file("./settings.yaml")\n    testing.arguments("file", "settings.yaml")\n\n    assert option("app-name") == "app"\n    assert option("file") == "settings.yaml"\n')),(0,l.kt)("p",null,'testing.setting_file("settings.yaml") \u5219\u662f\u4ece yaml \u6587\u4ef6\u52a0\u8f7d\u5bf9\u5e94\u7684 key-value \u53c2\u6570\u3002'),(0,l.kt)("h2",{id:"\u6d4b\u8bd5\u63d2\u4ef6"},"\u6d4b\u8bd5\u63d2\u4ef6"),(0,l.kt)("p",null,"\u5982\u679c\u8981\u6d4b\u8bd5\u7684\u76ee\u5f55\u542b\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"plugin.py")," \u548c\u6d4b\u8bd5\u6587\u4ef6\uff0c\u81ea\u52a8\u5207\u6362\u5230\u63d2\u4ef6\u6a21\u5f0f\u3002\u90a3\u4e48\u5c06\u6d4b\u8bd5\u524d\u8bbe\u7f6e ",(0,l.kt)("inlineCode",{parentName:"p"},"KCL_PLUGINS_ROOT")," \u73af\u5883\u53d8\u91cf\uff08\u4e0d\u80fd\u518d\u8bbf\u95ee\u5176\u4ed6\u76ee\u5f55\u7684\u63d2\u4ef6\uff09\u7528\u4e8e\u6d4b\u8bd5\u5f53\u524d\u63d2\u4ef6\uff0c\u6d4b\u8bd5\u5b8c\u6210\u4e4b\u540e\u6062\u590d\u4e4b\u524d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"KCL_PLUGINS_ROOT")," \u73af\u5883\u53d8\u91cf\u3002"),(0,l.kt)("h2",{id:"\u96c6\u6210\u6d4b\u8bd5"},"\u96c6\u6210\u6d4b\u8bd5"),(0,l.kt)("p",null,"\u76ee\u5f55\u542b\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"*.k")," \u65f6\u81ea\u52a8\u6267\u884c\u96c6\u6210\u6d4b\u8bd5\uff0c\u5982\u679c\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"stdout.golden")," \u5219\u9a8c\u8bc1\u8f93\u51fa\u7684\u7ed3\u679c\uff0c\u5982\u679c\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"stderr.golden")," \u5219\u9a8c\u8bc1\u9519\u8bef\u3002\u652f\u6301 ",(0,l.kt)("inlineCode",{parentName:"p"},"settings.yaml")," \u6587\u4ef6\u5b9a\u4e49\u547d\u4ee4\u884c\u53c2\u6570\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u6709 k \u6587\u4ef6\u542b\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"# kcl-test: ignore")," \u6807\u6ce8\u6ce8\u91ca\u5c06\u5ffd\u7565\u6d4b\u8bd5\u3002"),(0,l.kt)("h2",{id:"\u6279\u91cf\u6d4b\u8bd5"},"\u6279\u91cf\u6d4b\u8bd5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kcl-test path")," \u6267\u884c\u6307\u5b9a\u76ee\u5f55\u7684\u6d4b\u8bd5, \u5f53\u524d\u76ee\u5f55\u53ef\u4ee5\u7701\u7565\u8be5\u53c2\u6570"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kcl-test -run=regexp")," \u53ef\u4ee5\u6267\u884c\u5339\u914d\u6a21\u5f0f\u7684\u6d4b\u8bd5"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kcl-test ./...")," \u9012\u5f52\u6267\u884c\u5b50\u76ee\u5f55\u7684\u5355\u5143\u6d4b\u8bd5")),(0,l.kt)("h2",{id:"\u547d\u4ee4\u884c\u53c2\u6570"},"\u547d\u4ee4\u884c\u53c2\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ kcl-test -h\nNAME:\n   kcl-go test - test packages\n\nUSAGE:\n   kcl-go test [command options] [packages]\n\nOPTIONS:\n   --run value    Run only those tests matching the regular expression.\n   --quiet, -q    Set quiet mode (default: false)\n   --verbose, -v  Log all tests as they are run (default: false)\n   --debug, -d    Run in debug mode (for developers only) (default: false)\n   --help, -h     show help (default: false)\n")))}m.isMDXComponent=!0}}]);